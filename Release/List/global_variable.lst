###############################################################################
#                                                                             #
# IAR C/C++ Compiler V5.30.0.50166/W32 for Atmel AVR    11/Dec/2009  23:20:50 #
# Copyright 1996-2009 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  D:\avr\LM_Finial_Test\global_variable.c                  #
#    Command line =  D:\avr\LM_Finial_Test\global_variable.c --cpu=m644p -ms  #
#                    -o D:\avr\LM_Finial_Test\Release\Obj\ -D NDEBUG -D       #
#                    LM018 -D FINAL_VERSION2 -lCN                             #
#                    D:\avr\LM_Finial_Test\Release\List\ -lA                  #
#                    D:\avr\LM_Finial_Test\Release\List\ --diag_suppress      #
#                    Pa082,Pe167,Pe186 --initializers_in_flash -z6            #
#                    --no_inline --no_cross_call --no_tbaa                    #
#                    -DENABLE_BIT_DEFINITIONS -e -I "C:\Program Files\IAR     #
#                    Systems\Embedded Workbench 5.3\avr\INC\" -I "C:\Program  #
#                    Files\IAR Systems\Embedded Workbench 5.3\avr\INC\CLIB\"  #
#                    --eeprom_size 2048                                       #
#    List file    =  D:\avr\LM_Finial_Test\Release\List\global_variable.lst   #
#    Object file  =  D:\avr\LM_Finial_Test\Release\Obj\global_variable.r90    #
#                                                                             #
#                                                                             #
###############################################################################

D:\avr\LM_Finial_Test\global_variable.c
      1          #include "moudle_SCS.h"
      2          #include "IR.h"
      3          #include "application.h"
      4          #include "PIR.h"
      5          #include "board.h"
      6          
      7          //unsigned char scs_frame[5][20];

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
      8          unsigned char g_soft[] = "000000";
   \                     g_soft:
   \   00000000                      DS8 7
   \   00000007                      REQUIRE `?<Initializer for g_soft>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
      9          unsigned char g_hard[] = "00";
   \                     g_hard:
   \   00000000                      DS8 3
   \   00000003                      REQUIRE `?<Initializer for g_hard>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
     10          unsigned char g_year[] = "00";
   \                     g_year:
   \   00000000                      DS8 3
   \   00000003                      REQUIRE `?<Initializer for g_year>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
     11          unsigned char g_week[] = "00";
   \                     g_week:
   \   00000000                      DS8 3
   \   00000003                      REQUIRE `?<Initializer for g_week>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
     12          unsigned char g_model[] = "000000";
   \                     g_model:
   \   00000000                      DS8 7
   \   00000007                      REQUIRE `?<Initializer for g_model>`
     13          

   \                                 In  segment EEPROM_I, align 1, keep-with-next
     14          __eeprom unsigned char ee_soft[] = "010600";
   \                     ee_soft:
   \   00000000   313036303030       DC8 "010600"
   \              00          

   \                                 In  segment EEPROM_I, align 1, keep-with-next
     15          __eeprom unsigned char ee_hard[] = "01";
   \                     ee_hard:
   \   00000000   313000             DC8 "01"

   \                                 In  segment EEPROM_I, align 1, keep-with-next
     16          __eeprom unsigned char ee_year[] = "09";
   \                     ee_year:
   \   00000000   393000             DC8 "09"

   \                                 In  segment EEPROM_I, align 1, keep-with-next
     17          __eeprom unsigned char ee_week[] = "50";
   \                     ee_week:
   \   00000000   303500             DC8 "50"

   \                                 In  segment EEPROM_I, align 1, keep-with-next
     18          __eeprom unsigned char ee_model[] = "062020";
   \                     ee_model:
   \   00000000   363030323032       DC8 "062020"
   \              00          

   \                                 In  segment EEPROM_I, align 1, keep-with-next
     19          __eeprom unsigned char ee_printed_id[] = "00050000";
   \                     ee_printed_id:
   \   00000000   303035303030       DC8 "00050000"
   \              303000      
     20          

   \                                 In  segment NEAR_F, align 1, keep-with-next
     21          __flash const unsigned char error_109[] = "  Error: 109 ";
   \                     error_109:
   \   00000000   202072456F72       DC8 "  Error: 109 "
   \              3A7231203930
   \              0020        
     22          

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     23          unsigned char g_page_buffer[256];
   \                     g_page_buffer:
   \   00000000                      DS8 256

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
     24          struct S_sensor_info stru_sensor = {
   \                     stru_sensor:
   \   00000000                      DS8 38
   \   00000026                      REQUIRE `?<Initializer for stru_sensor>`
     25          "0950",
     26          "00050000",
     27          "020",
     28          "02",
     29          "01",
     30          "010600",
     31          "040523",
     32          };
     33          

   \                                 In  segment EEPROM_I, align 1, keep-with-next
     34          __eeprom unsigned int ee_page = 0;
   \                     ee_page:
   \   00000000   0000               DC16 0

   \                                 In  segment EEPROM_I, align 1, keep-with-next
     35          __eeprom unsigned int ee_page_address = 0;
   \                     ee_page_address:
   \   00000000   0000               DC16 0
     36          

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     37          volatile unsigned int g_dataflash_page_address = 0;
   \                     g_dataflash_page_address:
   \   00000000                      DS8 2
     38          

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     39          unsigned char g_lux[5];
   \                     g_lux:
   \   00000000                      DS8 5

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     40          unsigned char g_timer2_flag = 0;
   \                     g_timer2_flag:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     41          unsigned char g_temp;
   \                     g_temp:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     42          volatile struct struct_scs_frame scs_frame[DEEP];
   \                     scs_frame:
   \   00000000                      DS8 840

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     43          volatile unsigned char g_configurator[5];
   \                     g_configurator:
   \   00000000                      DS8 5

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     44          volatile struct SConfigurators Configurators;
   \                     Configurators:
   \   00000000                      DS8 6

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     45          volatile struct SKO_Configuration KO_conf;
   \                     KO_conf:
   \   00000000                      DS8 50
     46          //__eeprom struct SKO_Configuration ee_PnG_KO_conf;
     47          //struct SKO_Configuration temp_KO_conf;
     48          volatile struct SState state;
     49          //volatile struct Sframe_extended_type frame_extended_type;
     50          volatile unsigned char g_reception_buffer[17];
     51          volatile unsigned char g_asc_reception_buffer[8];
     52          volatile unsigned char g_short_buffer[8];
     53          volatile unsigned char g_asc_short_buffer[4];
     54          volatile unsigned char g_ir_reception[14];
     55          volatile struct Sproduct_info product_info;
     56          volatile struct SIR_reception IR_reception;
     57          volatile struct Sflag_timer flag_timer;
     58          volatile struct SDll DLL;
     59          volatile struct STimeDelay Time_delay;
     60          volatile struct PIR pir;
     61          volatile unsigned int pir_total = 0;
     62          volatile unsigned char us_result = 0;
     63          volatile unsigned int us_total = 0;
     64          volatile unsigned int motion_total = 0;
     65          volatile unsigned char US_detection_en;
     66          volatile unsigned long int modality0_delay_ms;
     67          volatile unsigned char g_key_value = 0;
     68          volatile unsigned char g_virtual_basci_configuration_flag = 0;

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
     69          const int daylight_motion[] = {515,168,166,119,128,164,165};
   \                     daylight_motion:
   \   00000000                      DS8 14
   \   0000000E                      REQUIRE `?<Initializer for daylight_motion>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
     70          const int daylight[] = {516,166,164};
   \                     daylight:
   \   00000000                      DS8 6
   \   00000006                      REQUIRE `?<Initializer for daylight>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
     71          const int motion[] = {511,119,165,122};
   \                     motion:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for motion>`
     72          volatile struct Ukey_result key_result;

   \                                 In  segment EEPROM_I, align 1, keep-with-next
     73          __eeprom unsigned char g_ns_index;
   \                     g_ns_index:
   \   00000000   00                 DC8 0
     74          volatile struct s_flags flags;

   \                                 In  segment EEPROM_I, align 1, keep-with-next
     75          __eeprom struct s_ee_flags ee_flags;
   \                     ee_flags:
   \   00000000   0000               DC8 0, 0
     76          volatile unsigned char PIR_detection_en;   // add by alan 20090409
     77          
     78          volatile char tx1_buffer[TX1_BUFFER_SIZE];
     79          volatile unsigned char tx1_wr_index,tx1_rd_index,tx1_counter;
     80          
     81          volatile unsigned char eventflag2_g=0;
     82          unsigned int  cell_W,cell_H, vx,vy,avg_x,avg_y,xmin,ymin,xmax,ymax;
     83          float	  x_para,y_para;
     84          char	  Menu_status;	//alan
     85          struct S_product_information product_information;
     86          struct S_product_information temp_product_information;
     87          volatile unsigned char KO[4];
     88          struct s_parameters parameters;
     89          struct s_temp_variable temp_variable;
     90          struct s_flags_muti_step flags_muti_step;
     91          

   \                                 In  segment EEPROM_I, align 1, keep-with-next
     92          __eeprom struct s_ee_variable ee_variable;
   \                     ee_variable:
   \   00000000   0000               DC8 0, 0
     93          
     94          #ifdef NONE_CONFED_203

   \                                 In  segment EEPROM_I, align 1, keep-with-next
     95            __eeprom unsigned char ee_KO_last[4] = {'0','2','0','3'};
   \                     ee_KO_last:
   \   00000000   32303330           DC8 48, 50, 48, 51

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
     96            const unsigned char flash_KO[4] = {'0','2','0','3'};
   \                     flash_KO:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for flash_KO>`

   \                                 In  segment EEPROM_I, align 1, keep-with-next
     97            __eeprom unsigned char ee_KO[4] = {'0','2','0','3'};
   \                     ee_KO:
   \   00000000   32303330           DC8 48, 50, 48, 51
     98          
     99          #ifdef LM018

   \                                 In  segment EEPROM_I, align 1, keep-with-next
    100          	__eeprom struct s_parameter ee_parameter={'0','F','2','0','2','0',
   \                     ee_parameter:
   \   00000000   463030323032       DC8 48, 70, 50, 48, 50, 48, 48, 49, 48, 48, 48, 48, 48, 49, 48, 57, 50
   \              313030303030
   \              3130393032  
   \   00000011   38                 DC8 56
    101          																						'0','1','0','0','0','0',		//software version
    102          																						'0','1','0','9','2','8'};		//hardware version
    103          #endif
    104          	
    105          #ifdef LM056
    106          	__eeprom struct s_parameter ee_parameter={'0','F','2','0','2','1',
    107          																						'0','1','0','0','0','0',
    108          																						'0','1','0','9','2','8'};
    109          #endif
    110          	
    111          #ifdef LM057
    112          	__eeprom struct s_parameter ee_parameter={'0','F','2','2','2','2',
    113          																						'0','1','0','0','0','0',
    114          																						'0','1','0','9','2','8'};
    115          #endif
    116          	
    117          #ifdef LM076
    118          	__eeprom struct s_parameter ee_parameter={'0','F','2','0','2','4',
    119          																						'0','1','0','0','0','0',
    120          																						'0','1','0','9','2','8'};
    121          #endif
    122          	
    123          #ifdef LM077
    124          	__eeprom struct s_parameter ee_parameter={'0','F','2','0','2','3',
    125          																						'0','1','0','0','0','0',
    126          																						'0','1','0','9','2','8'};
    127          #endif
    128          	
    129          #ifdef LM020
    130          	__eeprom struct s_parameter ee_parameter={'0','F','2','0','2','9',
    131          																						'0','1','0','0','0','0',
    132          																						'0','1','0','9','2','8'};
    133          #endif
    134          /*	
    135          #ifdef HARDWARE_PIR
    136          	__eeprom struct s_parameter ee_parameter={'0','5','2','0','2','0',
    137          																						'0','1','0','1','0','1',
    138          																						'0','1','0','1','0','1'};
    139          #endif
    140          	
    141          #ifdef HARDWARE_US
    142          	__eeprom struct s_parameter ee_parameter={'0','5','2','0','2','1',
    143          																						'0','1','0','1','0','1',
    144          																						'0','1','0','1','0','1'};
    145          #endif
    146          	
    147          #ifdef HARDWARE_PIR_US
    148            __eeprom struct s_parameter ee_parameter={'0','5','2','2','2','2',
    149          																						'0','1','0','1','0','1',
    150          																						'0','1','0','1','0','1'};
    151          #endif
    152          	
    153          #ifdef DAYLIGHT_ONLY
    154          	__eeprom struct s_parameter ee_parameter={'0','5','2','2','2','8',
    155          																						'0','1','0','1','0','1',
    156          																						'0','1','0','1','0','1'};
    157          #endif
    158          */
    159          #ifdef WALLCORNER
    160            __flash struct SKO_Configuration flash_KO_168=
    161            {
    162          	  0,	0,	1,	0,	0,	//4
    163          		0,	0,	0,	0,	0,	//9
    164          		0,	15,	0,	1,	0,	//14
    165          		0,	0,	0,	0,	0,	//19
    166          		3,	2,	10,	0,	10,	//24
    167          		60,	255,	0,	0,	2,	//29	default daylight 88 * 10 = 880(ADC value)
    168          		3,	4,	4,	0, 0				//34
    169          	};
    170          #else

   \                                 In  segment NEAR_F, align 1, keep-with-next
    171          	__flash struct SKO_Configuration flash_KO_168=
   \                     flash_KO_168:
   \   00000000   000000010000       DC8 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 1, 0, 0, 0, 0, 0, 0, 3, 2
   \              000000000F00
   \              010000000000
   \              00000203    
   \   00000016   0032640A00FF       DC8 50, 0, 10, 100, 255, 0, 0, 2, 3, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              020004030004
   \              000000000000
   \              000000      
   \   0000002B   000000000000       DC8 0, 0, 0, 0, 0, 0, 0
   \              00          
    172            {
    173          	  0,	0,	1,	0,	0,	//4
    174          		0,	0,	0,	0,	0,	//9
    175          		0,	15,	0,	1,	0,	//14
    176          		0,	0,	0,	0,	0,	//19
    177          		3,	2,	50,	0,	10,	//24
    178          		100,	255,	0,	0,	2,	//29	default daylight 88 * 10 = 880(ADC value)
    179          		3,	4,	4,	0, 0				//34
    180          	};
    181          #endif
    182          

   \                                 In  segment NEAR_F, align 1, keep-with-next
    183            __flash struct SKO_Configuration flash_KO_166=
   \                     flash_KO_166:
   \   00000000   000000010000       DC8 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000017   000000000000       DC8 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000100000000
   \              000000000000
   \              0000        
   \   0000002B   000000000000       DC8 0, 0, 0, 0, 0, 0, 0
   \              00          
    184            {
    185          	  0,	0,	1,	0,	0,	//4
    186          		0,	0,	0,	0,	0,	//9
    187          		0,	0,	0,	0,	0,	//14
    188          		0,	0,	0,	0,	0,	//19
    189          		0,	0,	0,	0,	0,	//24
    190          		0,	0,	0,	0,	1,	//29	default daylight 88 * 10 = 880(ADC value)
    191          		0,	0,	0,	0, 0				//34
    192          	};
    193          
    194          #ifdef WALLCORNER
    195            __flash struct SKO_Configuration flash_KO_119=
    196            {
    197          	  0,	0,	1,	0,	0,	//4
    198          		0,	0,	0,	0,	0,	//9
    199          		0,	15,	0,	1,	0,	//14
    200          		0,	0,	0,	0,	0,	//19
    201          		3,	2,	1,	0,	10,	//24
    202          		60,	255,	0,	0,	2,	//29	default daylight 88 * 10 = 880(ADC value)
    203          		3,	4,	4,	0,  0				//34
    204          	};
    205          #else

   \                                 In  segment NEAR_F, align 1, keep-with-next
    206          	__flash struct SKO_Configuration flash_KO_119=
   \                     flash_KO_119:
   \   00000000   000000010000       DC8 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 1, 0, 0, 0, 0, 0, 0, 3, 2
   \              000000000F00
   \              010000000000
   \              00000203    
   \   00000016   0005640A00FF       DC8 5, 0, 10, 100, 255, 0, 0, 2, 3, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              020004030004
   \              000000000000
   \              000000      
   \   0000002B   000000000000       DC8 0, 0, 0, 0, 0, 0, 0
   \              00          
    207            {
    208          	  0,	0,	1,	0,	0,	//4
    209          		0,	0,	0,	0,	0,	//9
    210          		0,	15,	0,	1,	0,	//14
    211          		0,	0,	0,	0,	0,	//19
    212          		3,	2,	5,	0,	10,	//24
    213          		100,	255,	0,	0,	2,	//29	default daylight 88 * 10 = 880(ADC value)
    214          		3,	4,	4,	0,  0				//34
    215          	};
    216          #endif
    217          

   \                                 In  segment NEAR_F, align 1, keep-with-next
    218            __flash struct SKO_Configuration flash_KO_128=
   \                     flash_KO_128:
   \   00000000   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 1, 1
   \              000000000000
   \              001E00000000
   \              00000101    
   \   00000016   000400000000       DC8 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              000000      
   \   0000002B   000000000000       DC8 0, 0, 0, 0, 0, 0, 0
   \              00          
    219            {
    220          	  0,	0,	0,	0,	0,	//4
    221          		0,	0,	0,	0,	0,	//9
    222          		0,	0,	30,	0,	0,	//14
    223          		0,	0,	0,	0,	0,	//19
    224          		1,	1,	4,	0,	0,	//24
    225          		0,	0,	0,	0,	0,	//29	default daylight 88 * 10 = 880(ADC value)
    226          		0,	0,	0,	0, 0				//34
    227          	};
    228          

   \                                 In  segment NEAR_F, align 1, keep-with-next
    229            __flash struct SKO_Configuration flash_KO_165=
   \                     flash_KO_165:
   \   00000000   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 1, 1
   \              000000000000
   \              001E00000000
   \              00000101    
   \   00000016   000400000000       DC8 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              000000      
   \   0000002B   000000000000       DC8 0, 0, 0, 0, 0, 0, 0
   \              00          
    230            {
    231          	  0,	0,	0,	0,	0,	//4
    232          		0,	0,	0,	0,	0,	//9
    233          		0,	0,	30,	0,	0,	//14
    234          		0,	0,	0,	0,	0,	//19
    235          		1,	1,	4,	0,	0,	//24
    236          		0,	0,	0,	0,	0,	//29	default daylight 88 * 10 = 880(ADC value)
    237          		0,	0,	0,	0, 0				//34
    238          	};
    239          	

   \                                 In  segment NEAR_F, align 1, keep-with-next
    240          	__flash struct SKO_Configuration flash_KO_515=
   \                     flash_KO_515:
   \   00000000   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000017   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000        
   \   0000002B   000000000000       DC8 0, 0, 0, 0, 0, 0, 0
   \              00          
    241            {
    242          	  0,	0,	0,	0,	0,	//4
    243          		0,	0,	0,	0,	0,	//9
    244          		0,	0,	0,	0,	0,	//14
    245          		0,	0,	0,	0,	0,	//19
    246          		0,	0,	0,	0,	0,	//24
    247          		0,	0,	0,	0,	0,	//29	default daylight 88 * 10 = 880(ADC value)
    248          		0,	0,	0,	0, 0				//34
    249          	};
    250          #endif
    251          
    252           #ifdef NONE_CONFED_204
    253            const unsigned char flash_KO[4] = {'0','2','0','4'};
    254             __eeprom unsigned char ee_KO[4] = {'0','2','0','4'};
    255             __eeprom struct s_parameter ee_parameter={'0','5','2','0','2','0',
    256          																							'0','1','0','1','0','1',
    257          																							'0','1','0','1','0','1'};
    258           #endif
    259          
    260          #ifdef NONE_CONFED_1FF
    261             const unsigned char flash_KO[4] = {'0','1','F','F'};
    262             __eeprom unsigned char ee_KO[4] = {'0','1','F','F'};
    263             __eeprom struct s_parameter ee_parameter={'0','5','2','0','2','1',
    264          																							'0','1','0','1','0','1',
    265          																							'0','1','0','1','0','1'};
    266          #endif
    267          

   \                                 In  segment EEPROM_I, align 1, keep-with-next
    268          __eeprom struct SConfigurators ee_configurators=
   \                     ee_configurators:
   \   00000000   303030303030       DC8 48, 48, 48, 48, 48, 48
    269          {
    270            '0','0','0','0','0','0'
    271          };
    272          
    273          #ifdef LM018

   \                                 In  segment EEPROM_I, align 1, keep-with-next
    274          __eeprom struct SKO_Configuration ee_KO_conf=
   \                     ee_KO_conf:
   \   00000000   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0
   \              000000000F00
   \              000000000000
   \              00000003    
   \   00000016   0005640A00FF       DC8 5, 0, 10, 100, 255, 0, 0, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              020001010001
   \              000000000000
   \              000000      
   \   0000002B   000000000000       DC8 0, 0, 0, 0, 0, 0, 0
   \              00          
    275          {
    276            0,	0,	0,	0,	0,	//4
    277          	0,	0,	0,	0,	0,	//9
    278          	0,	15,	0,	0,	0,	//14
    279          	0,	0,	0,	0,	0,	//19
    280          	3,	0,	5,	0,	10,	//24
    281          	100,	255,	0,	0,	2,	//29	default daylight 88 * 10 = 880(ADC value)
    282          	1,	1,	1,	0, 0		//34
    283          };
    284          #endif
    285          
    286          #ifdef LM057
    287          __eeprom struct SKO_Configuration ee_KO_conf=
    288          {
    289            0,	0,	0,	0,	0,	//4
    290          	0,	0,	0,	0,	0,	//9
    291          	0,	15,	0,	0,	0,	//14
    292          	0,	0,	0,	0,	0,	//19
    293          	3,	2,	5,	0,	10,	//24
    294          	100,	255,	0,	0,	2,	//29	default daylight 88 * 10 = 880(ADC value)
    295          	3,	4,	4,	0, 0		//34
    296          };
    297          #endif
    298          
    299          #ifdef LM056
    300          __eeprom struct SKO_Configuration ee_KO_conf=
    301          {
    302            0,	0,	0,	0,	0,	//4
    303          	0,	0,	0,	0,	0,	//9
    304          	0,	15,	0,	0,	0,	//14
    305          	0,	0,	0,	0,	0,	//19
    306          	3,	2,	5,	0,	10,	//24
    307          	100,	255,	0,	0,	2,	//29	default daylight 88 * 10 = 880(ADC value)
    308          	2,	2,	2,	0, 0		//34
    309          };
    310          #endif
    311          
    312          #ifdef LM077
    313          __eeprom struct SKO_Configuration ee_KO_conf=
    314          {
    315            0,	0,	0,	0,	0,	//4
    316          	0,	0,	0,	0,	0,	//9
    317          	0,	15,	0,	0,	0,	//14
    318          	0,	0,	0,	0,	0,	//19
    319          	3,	2,	1,	0,	10,	//24
    320          	60,	255,	0,	0,	2,	//29	default daylight 88 * 10 = 880(ADC value)
    321          	3,	4,	4,	0, 0		//34
    322          };
    323          #endif
    324          
    325          #ifdef LM076
    326          __eeprom struct SKO_Configuration ee_KO_conf=
    327          {
    328            0,	0,	0,	0,	0,	//4
    329          	0,	0,	0,	0,	0,	//9
    330          	0,	15,	0,	0,	0,	//14
    331          	0,	0,	0,	0,	0,	//19
    332          	3,	2,	1,	0,	10,	//24
    333          	60,	255,	0,	0,	2,	//29	default daylight 88 * 10 = 880(ADC value)
    334          	1,	1,	1,	0, 0		//34
    335          };
    336          #endif
    337          
    338          #ifdef LM020
    339          __eeprom struct SKO_Configuration ee_KO_conf=
    340          {
    341            0,	0,	0,	0,	0,	//4
    342          	0,	0,	0,	0,	0,	//9
    343          	0,	15,	0,	0,	0,	//14
    344          	0,	0,	0,	0,	0,	//19
    345          	3,	0,	5,	0,	10,	//24
    346          	100,	255,	0,	0,	2,	//29	default daylight 88 * 10 = 880(ADC value)
    347          	1,	1,	1,	0, 0		//34
    348          };
    349          #endif
    350          
    351          #ifdef LM028
    352          __eeprom struct SKO_Configuration ee_KO_conf=
    353          {
    354            0,	0,	0,	0,	0,	//4
    355          	0,	0,	0,	0,	0,	//9
    356          	0,	15,	0,	0,	0,	//14
    357          	0,	0,	0,	0,	0,	//19
    358          	3,	0,	5,	0,	10,	//24
    359          	100,	255,	0,	0,	2,	//29	default daylight 88 * 10 = 880(ADC value)
    360          	1,	1,	1,	0, 0		//34
    361          };
    362          #endif
    363          

   \                                 In  segment EEPROM_I, align 1, keep-with-next
    364          __eeprom volatile unsigned char ee_ID[9] = {'0','0','0','5','5','4','F','E','0'};
   \                     ee_ID:
   \   00000000   303035303435       DC8 48, 48, 48, 53, 53, 52, 70, 69, 48
   \              454630      

   \                                 In  segment EEPROM_I, align 1, keep-with-next
    365          __eeprom struct S_product_information ee_product_information =
   \                     ee_product_information:
   \   00000000   000230300000       DC8 2, 0, 48, 48, 0, 0, 0
   \              00          
    366          {
    367            2,0,'0','0',0,0
    368          };
    369          

   \                                 In  segment EEPROM_I, align 1, keep-with-next
    370          __eeprom unsigned char ee_scenario_index = 0;
   \                     ee_scenario_index:
   \   00000000   00                 DC8 0
    371          

   \                                 In  segment EEPROM_I, align 1, keep-with-next
    372          __eeprom struct s_scenario  ee_scenario[SCENARIO_NUMBER] =
   \                     ee_scenario:
   \   00000000   010100000000       DC8 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1
   \              010000010000
   \              000001010000
   \              0000010001  
   \   00000017   000000000100       DC8 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0
   \              000100000000
   \              010100000000
   \              0100000100  
   \   0000002E   000001000001       DC8 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0
   \              000000000101
   \              000000000100
   \              0001000000  
   \   00000045   010000010000       DC8 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1
   \              000001010000
   \              000001000001
   \              0000000001  
   \   0000005C   000100000000       DC8 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0
   \              010100000000
   \              010000010000
   \              0000        
    373          {
    374            1,1,0,0,0,0,0,
    375          	1,1,0,0,0,0,0,
    376          	1,1,0,0,0,0,0,
    377          	1,1,0,0,0,0,0,
    378          	1,1,0,0,0,0,0,
    379          	1,1,0,0,0,0,0,
    380          	1,1,0,0,0,0,0,
    381          	1,1,0,0,0,0,0,
    382          	1,1,0,0,0,0,0,
    383          	1,1,0,0,0,0,0,
    384          	1,1,0,0,0,0,0,
    385          	1,1,0,0,0,0,0,
    386          	1,1,0,0,0,0,0,
    387          	1,1,0,0,0,0,0,
    388          	1,1,0,0,0,0,0,
    389          	1,1,0,0,0,0,0
    390          };
    391          

   \                                 In  segment EEPROM_I, align 1, keep-with-next
    392          __eeprom struct s_factory_variable ee_factory_variable = {0,0,0,0};
   \                     ee_factory_variable:
   \   00000000   000000000000       DC16 0, 0, 0, 0
   \              0000        
    393          

   \                                 In  segment EEPROM_I, align 1, keep-with-next
    394          __eeprom unsigned int ee_main_state = 0;
   \                     ee_main_state:
   \   00000000   0000               DC16 0
    395          double g_slope;

   \                                 In  segment EEPROM_I, align 1, keep-with-next
    396          __eeprom double ee_slope = 1;
   \                     ee_slope:
   \   00000000   00003F80           DD 3F800000H
    397          
    398          //************************** add by alan begin 	*****************************//
    399          

   \                                 In  segment EEPROM_I, align 1, keep-with-next
    400           	__eeprom unsigned int  eep_setpoint[4];
   \                     eep_setpoint:
   \   00000000   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        

   \                                 In  segment EEPROM_I, align 1, keep-with-next
    401           	__eeprom unsigned int  eep_factor;	
   \                     eep_factor:
   \   00000000   0000               DC8 0, 0

   \                                 In  segment EEPROM_I, align 1, keep-with-next
    402          	__eeprom unsigned char eep_M2_hour;	
   \                     eep_M2_hour:
   \   00000000   00                 DC8 0

   \                                 In  segment EEPROM_I, align 1, keep-with-next
    403           	__eeprom unsigned char eep_M2_min;	
   \                     eep_M2_min:
   \   00000000   00                 DC8 0

   \                                 In  segment EEPROM_I, align 1, keep-with-next
    404           	__eeprom unsigned char eep_M2_sec;
   \                     eep_M2_sec:
   \   00000000   00                 DC8 0

   \                                 In  segment EEPROM_I, align 1, keep-with-next
    405           	__eeprom unsigned char eep_M2_sens;
   \                     eep_M2_sens:
   \   00000000   00                 DC8 0

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     IR_reception:
   \   00000000                      DS8 18
    406           	unsigned long int   M2_timer;
    407          	unsigned long int   M2_timer_count;
    408          	unsigned char 	  	M2_type;
    409          	unsigned char       motion_resutl;
    410          	unsigned int        set_point;
    411          	volatile unsigned long int Delay_Time_set;
    412          	unsigned char 	during_on_cnt;
    413           	unsigned char 	during_off_cnt;
    414          	unsigned char 	Walk_Through_flag;
    415           	unsigned char 	First_detection_enable;
    416          
    417          	struct SSensor_mode Sensor_mode;
   \                     Sensor_mode:
   \   00000012                      DS8 10
   \                     state:
   \   0000001C                      DS8 7
   \                     flags:
   \   00000023                      DS8 14
   \                     key_result:
   \   00000031                      DS8 2
   \                     us_result:
   \   00000033                      DS8 1
   \                     flags_muti_step:
   \   00000034                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     g_reception_buffer:
   \   00000000                      DS8 17

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     g_asc_reception_buffer:
   \   00000000                      DS8 8

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     g_short_buffer:
   \   00000000                      DS8 8

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     g_asc_short_buffer:
   \   00000000                      DS8 4

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     g_ir_reception:
   \   00000000                      DS8 14

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     product_info:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     flag_timer:
   \   00000000                      DS8 4

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     DLL:
   \   00000000                      DS8 215

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     Time_delay:
   \   00000000                      DS8 314

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     pir:
   \   00000000                      DS8 4

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     pir_total:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     us_total:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     motion_total:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     US_detection_en:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     modality0_delay_ms:
   \   00000000                      DS8 4

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     g_key_value:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     g_virtual_basci_configuration_flag:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     PIR_detection_en:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     tx1_buffer:
   \   00000000                      DS8 14

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     tx1_wr_index:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     tx1_rd_index:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     tx1_counter:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     eventflag2_g:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     cell_W:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     cell_H:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     vx:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     vy:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     avg_x:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     avg_y:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     xmin:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     ymin:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     xmax:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     ymax:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     x_para:
   \   00000000                      DS8 4

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     y_para:
   \   00000000                      DS8 4

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     Menu_status:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     product_information:
   \   00000000                      DS8 7

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     temp_product_information:
   \   00000000                      DS8 7

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     KO:
   \   00000000                      DS8 4

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     parameters:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     temp_variable:
   \   00000000                      DS8 20

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     g_slope:
   \   00000000                      DS8 4

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     M2_timer:
   \   00000000                      DS8 4

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     M2_timer_count:
   \   00000000                      DS8 4

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     M2_type:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     motion_resutl:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     set_point:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     Delay_Time_set:
   \   00000000                      DS8 4

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     during_on_cnt:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     during_off_cnt:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     Walk_Through_flag:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     First_detection_enable:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
    418          	struct SSCS_received SCS_received;
   \                     SCS_received:
   \   00000000                      DS8 5
    419          
    420          
    421          //************************** add by alan end	***************************//
    422          	

   \                                 In  segment CODE, align 2, keep-with-next
    423          void global_variable_initial()
   \                     global_variable_initial:
    424          {
   \   00000000   2F3B               MOV     R19, R27
   \   00000002   2F6A               MOV     R22, R26
    425          	unsigned char i;
    426          	unsigned char j;
    427          
    428          	for(i=0;i<DEEP;i++)
   \   00000004   E040               LDI     R20, 0
   \   00000006   C008               RJMP    ??global_variable_initial_0
    429          	{
    430          		scs_frame[i].next = 0;
    431          		scs_frame[i].finished = 0;
    432          		scs_frame[i].decoded = 0;
    433          		for(j = 0;j< NUMBER_BYTE_SCS;j++)
    434          		{
    435          			scs_frame[i].byte[j] = 0;
   \                     ??global_variable_initial_1:
   \   00000008   01DF               MOVW    R27:R26, R31:R30
   \   0000000A   0FA0               ADD     R26, R16
   \   0000000C   1FB5               ADC     R27, R21
   \   0000000E   935C               ST      X, R21
    436          		}
   \   00000010   9503               INC     R16
   \                     ??global_variable_initial_2:
   \   00000012   3104               CPI     R16, 20
   \   00000014   F3C8               BRCS    ??global_variable_initial_1
   \   00000016   9543               INC     R20
   \                     ??global_variable_initial_0:
   \   00000018   3243               CPI     R20, 35
   \   0000001A   F470               BRCC    ??global_variable_initial_3
   \   0000001C   E050               LDI     R21, 0
   \   0000001E   E108               LDI     R16, 24
   \   00000020   E010               LDI     R17, 0
   \   00000022   ........           CALL    ?S_EC_MUL_L02
   \   00000026   ....               LDI     R30, LOW(scs_frame)
   \   00000028   ....               LDI     R31, (scs_frame) >> 8
   \   0000002A   0FE0               ADD     R30, R16
   \   0000002C   1FF1               ADC     R31, R17
   \   0000002E   E000               LDI     R16, 0
   \   00000030   8B55               STD     Z+21, R21
   \   00000032   8B56               STD     Z+22, R21
   \   00000034   8B57               STD     Z+23, R21
   \   00000036   CFED               RJMP    ??global_variable_initial_2
    437          	}
    438          
    439          	state.programming = 0;
   \                     ??global_variable_initial_3:
   \   00000038   ....               LDI     R30, LOW(IR_reception)
   \   0000003A   ....               LDI     R31, (IR_reception) >> 8
   \   0000003C   8D04               LDD     R16, Z+28
   \   0000003E   8D15               LDD     R17, Z+29
   \   00000040   7F0E               ANDI    R16, 0xFE
   \   00000042   8F15               STD     Z+29, R17
   \   00000044   8F04               STD     Z+28, R16
    440          	state.test = 0;
   \   00000046   8D04               LDD     R16, Z+28
   \   00000048   8D15               LDD     R17, Z+29
   \   0000004A   7F0D               ANDI    R16, 0xFD
   \   0000004C   8F15               STD     Z+29, R17
   \   0000004E   8F04               STD     Z+28, R16
    441          	state.normal = 0;
   \   00000050   8D04               LDD     R16, Z+28
   \   00000052   8D15               LDD     R17, Z+29
   \   00000054   7F0B               ANDI    R16, 0xFB
   \   00000056   8F15               STD     Z+29, R17
   \   00000058   8F04               STD     Z+28, R16
    442          
    443          	//frame_extended_type.D0 = 0;
    444          	//frame_extended_type.D1 = 0;
    445          	//frame_extended_type.D2 = 0;
    446          	//frame_extended_type.D5 = 0;
    447          
    448          	IR_reception.CRC_OK = 0;
   \   0000005A   E000               LDI     R16, 0
   \   0000005C   8B01               STD     Z+17, R16
    449          
    450          	Time_delay.timer_20s.count = 0;
   \   0000005E   E020               LDI     R18, 0
   \   00000060   ....               LDI     R26, LOW((Time_delay + 83))
   \   00000062   ....               LDI     R27, HIGH((Time_delay + 83))
   \   00000064   930D               ST      X+, R16
   \   00000066   930D               ST      X+, R16
   \   00000068   930D               ST      X+, R16
   \   0000006A   930C               ST      X, R16
    451          	Time_delay.timer_20s.time_out = 0;
   \   0000006C   9300....           STS     (Time_delay + 91), R16
    452          	Time_delay.timer_20s.enabled = 0;
   \   00000070   9300....           STS     (Time_delay + 92), R16
    453          	Time_delay.timer_20s.started = 0;
   \   00000074   9300....           STS     (Time_delay + 93), R16
    454          
    455          	Time_delay.timer_5m.count = 0;
   \   00000078   ....               LDI     R26, LOW((Time_delay + 72))
   \   0000007A   ....               LDI     R27, HIGH((Time_delay + 72))
   \   0000007C   930D               ST      X+, R16
   \   0000007E   930D               ST      X+, R16
   \   00000080   930D               ST      X+, R16
   \   00000082   930C               ST      X, R16
    456          	Time_delay.timer_5m.time_out = 0;
   \   00000084   9300....           STS     (Time_delay + 80), R16
    457          	Time_delay.timer_5m.enabled = 0;
   \   00000088   9300....           STS     (Time_delay + 81), R16
    458          	Time_delay.timer_5m.started = 0;
   \   0000008C   9300....           STS     (Time_delay + 82), R16
    459          
    460          	DLL.first_detect = 0;
   \   00000090   9300....           STS     (DLL + 22), R16
    461          	us_result = 0;
   \   00000094   AB03               STD     Z+51, R16
    462          
    463          	Time_delay.LPB.count = 0;
   \   00000096   ....               LDI     R26, LOW((Time_delay + 116))
   \   00000098   ....               LDI     R27, HIGH((Time_delay + 116))
   \   0000009A   930D               ST      X+, R16
   \   0000009C   930D               ST      X+, R16
   \   0000009E   930D               ST      X+, R16
   \   000000A0   930C               ST      X, R16
    464          	Time_delay.LPB.time_out = 0;
   \   000000A2   9300....           STS     (Time_delay + 124), R16
    465          	Time_delay.LPB.enabled = 0;
   \   000000A6   9300....           STS     (Time_delay + 125), R16
    466          	Time_delay.LPB.started = 0;
   \   000000AA   9300....           STS     (Time_delay + 126), R16
    467          
    468          	key_result.short_pressed = 0;
   \   000000AE   AB01               STD     Z+49, R16
    469          	key_result.long_pressed = 0;
   \   000000B0   AB02               STD     Z+50, R16
    470          
    471          	state.programming = 0;
   \   000000B2   8D04               LDD     R16, Z+28
   \   000000B4   8D15               LDD     R17, Z+29
   \   000000B6   7F0E               ANDI    R16, 0xFE
   \   000000B8   8F15               STD     Z+29, R17
   \   000000BA   8F04               STD     Z+28, R16
    472          	state.test = 0;
   \   000000BC   8D04               LDD     R16, Z+28
   \   000000BE   8D15               LDD     R17, Z+29
   \   000000C0   7F0D               ANDI    R16, 0xFD
   \   000000C2   8F15               STD     Z+29, R17
   \   000000C4   8F04               STD     Z+28, R16
    473          	state.normal = 0;
   \   000000C6   8D04               LDD     R16, Z+28
   \   000000C8   8D15               LDD     R17, Z+29
   \   000000CA   7F0B               ANDI    R16, 0xFB
   \   000000CC   8F15               STD     Z+29, R17
   \   000000CE   8F04               STD     Z+28, R16
    474          	state.configuration_method = 0;
   \   000000D0   8D04               LDD     R16, Z+28
   \   000000D2   8D15               LDD     R17, Z+29
   \   000000D4   7E07               ANDI    R16, 0xE7
   \   000000D6   8F04               STD     Z+28, R16
   \   000000D8   8F15               STD     Z+29, R17
    475          	state.main_state = NORMAL;
   \   000000DA   8F26               STD     Z+30, R18
   \   000000DC   8F27               STD     Z+31, R18
    476          	state.pnl_slave = 0;
   \   000000DE   A320               STD     Z+32, R18
    477          
    478          	//g_ns_index = 0;
    479          
    480          	flags.id_confed = 0;
   \   000000E0   A103               LDD     R16, Z+35
   \   000000E2   A114               LDD     R17, Z+36
   \   000000E4   7F0E               ANDI    R16, 0xFE
   \   000000E6   A314               STD     Z+36, R17
   \   000000E8   A303               STD     Z+35, R16
    481          	flags.id_ack = 0;
   \   000000EA   A103               LDD     R16, Z+35
   \   000000EC   A114               LDD     R17, Z+36
   \   000000EE   7F0D               ANDI    R16, 0xFD
   \   000000F0   A314               STD     Z+36, R17
   \   000000F2   A303               STD     Z+35, R16
    482          	flags.id_request_enabled = 1;
   \   000000F4   A103               LDD     R16, Z+35
   \   000000F6   A114               LDD     R17, Z+36
   \   000000F8   6004               ORI     R16, 0x04
   \   000000FA   A314               STD     Z+36, R17
   \   000000FC   A303               STD     Z+35, R16
    483          	flags.request_83 = 0;
   \   000000FE   A103               LDD     R16, Z+35
   \   00000100   A114               LDD     R17, Z+36
   \   00000102   7F07               ANDI    R16, 0xF7
   \   00000104   A314               STD     Z+36, R17
   \   00000106   A303               STD     Z+35, R16
    484          	flags.virtul_configuration_right = 0;
   \   00000108   A103               LDD     R16, Z+35
   \   0000010A   A114               LDD     R17, Z+36
   \   0000010C   7B0F               ANDI    R16, 0xBF
   \   0000010E   A314               STD     Z+36, R17
   \   00000110   A303               STD     Z+35, R16
    485            flags.KO_conf_right = 0;
   \   00000112   A105               LDD     R16, Z+37
   \   00000114   A116               LDD     R17, Z+38
   \   00000116   7F0D               ANDI    R16, 0xFD
   \   00000118   A316               STD     Z+38, R17
   \   0000011A   A305               STD     Z+37, R16
    486          
    487            flags_muti_step.cen_system_step = 0;
   \   0000011C   AB24               STD     Z+52, R18
    488          	
    489          	flags.parameter_write_right = 0;
   \   0000011E   A105               LDD     R16, Z+37
   \   00000120   A116               LDD     R17, Z+38
   \   00000122   770F               ANDI    R16, 0x7F
   \   00000124   A316               STD     Z+38, R17
   \   00000126   A305               STD     Z+37, R16
    490          	flags.KO_erase_all = 0;
   \   00000128   A105               LDD     R16, Z+37
   \   0000012A   A116               LDD     R17, Z+38
   \   0000012C   7F0B               ANDI    R16, 0xFB
   \   0000012E   A316               STD     Z+38, R17
   \   00000130   A305               STD     Z+37, R16
    491          	flags.KO_erase_main = 0;
   \   00000132   A105               LDD     R16, Z+37
   \   00000134   A116               LDD     R17, Z+38
   \   00000136   7F07               ANDI    R16, 0xF7
   \   00000138   A316               STD     Z+38, R17
   \   0000013A   A305               STD     Z+37, R16
    492          	flags.KO_erase_scenario = 0;
   \   0000013C   A105               LDD     R16, Z+37
   \   0000013E   A116               LDD     R17, Z+38
   \   00000140   7E0F               ANDI    R16, 0xEF
   \   00000142   A316               STD     Z+38, R17
   \   00000144   A305               STD     Z+37, R16
    493          	
    494          	Time_delay.pir_wait_40s = 0;
   \   00000146   9320....           STS     (Time_delay + 8), R18
   \   0000014A   9320....           STS     (Time_delay + 9), R18
    495          	Time_delay.pir_warmup_ok = 0;
   \   0000014E   ....               LDI     R26, LOW((Time_delay + 7))
   \   00000150   ....               LDI     R27, HIGH((Time_delay + 7))
   \   00000152   910C               LD      R16, X
   \   00000154   7F0E               ANDI    R16, 0xFE
   \   00000156   930C               ST      X, R16
    496          	
    497          	DLL.calc_OK_flag = 0; //reyno 0610
   \   00000158   9320....           STS     (DLL + 23), R18
    498          	Time_delay.IR.time_out = 1;//reyno 0616
   \   0000015C   E001               LDI     R16, 1
   \   0000015E   9300....           STS     (Time_delay + 234), R16
    499          	Sensor_mode.flag_leader_group = 0;
   \   00000162   8907               LDD     R16, Z+23
   \   00000164   7F0D               ANDI    R16, 0xFD
   \   00000166   8B07               STD     Z+23, R16
    500          	Sensor_mode.init_OK = 0;
   \   00000168   8D01               LDD     R16, Z+25
   \   0000016A   770F               ANDI    R16, 0x7F
   \   0000016C   8F01               STD     Z+25, R16
    501          	flags.scenario_scs_confed = 0;
   \   0000016E   A105               LDD     R16, Z+37
   \   00000170   A116               LDD     R17, Z+38
   \   00000172   7B0F               ANDI    R16, 0xBF
   \   00000174   A316               STD     Z+38, R17
   \   00000176   A305               STD     Z+37, R16
    502          	Time_delay.relay.time_out = 1;
   \   00000178   E001               LDI     R16, 1
   \   0000017A   9300....           STS     (Time_delay + 300), R16
    503          	
    504          	flags.id_confed = ee_product_information.ID_factory_assigned;
   \   0000017E   ....               LDI     R20, LOW((ee_product_information + 5))
   \   00000180   ....               LDI     R21, HIGH((ee_product_information + 5))
   \   00000182   ........           CALL    __eeget16_16
   \   00000186   FB00               BST     R16, 0
   \   00000188   A103               LDD     R16, Z+35
   \   0000018A   A114               LDD     R17, Z+36
   \   0000018C   F900               BLD     R16, 0
   \   0000018E   A314               STD     Z+36, R17
   \   00000190   A303               STD     Z+35, R16
    505          }
   \   00000192   2FA6               MOV     R26, R22
   \   00000194   2FB3               MOV     R27, R19
   \   00000196   9508               RET

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for g_soft>`:
   \   00000000   303030303030       DC8 "000000"
   \              00          

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for g_hard>`:
   \   00000000   303000             DC8 "00"

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for g_year>`:
   \   00000000   303000             DC8 "00"

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for g_week>`:
   \   00000000   303000             DC8 "00"

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for g_model>`:
   \   00000000   303030303030       DC8 "000000"
   \              00          

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for stru_sensor>`:
   \   00000000   3930303500         DC8 "0950"
   \   00000005   303035303030       DC8 "00050000"
   \              303000      
   \   0000000E   32300030           DC8 "020"
   \   00000012   323000             DC8 "02"
   \   00000015   313000             DC8 "01"
   \   00000018   313036303030       DC8 "010600"
   \              00          
   \   0000001F   343035303332       DC8 "040523"
   \              00          

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for daylight_motion>`:
   \   00000000   020300A800A6       DC16 515, 168, 166, 119, 128, 164, 165
   \              0077008000A4
   \              00A5        

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for daylight>`:
   \   00000000   020400A600A4       DC16 516, 166, 164

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for motion>`:
   \   00000000   01FF007700A5       DC16 511, 119, 165, 122
   \              007A        

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for flash_KO>`:
   \   00000000   32303330           DC8 48, 50, 48, 51
    506                                                		

   Maximum stack usage in bytes:

     Function                CSTACK RSTACK
     --------                ------ ------
     global_variable_initial     0      4


   Segment part sizes:

     Function/Label                     Bytes
     --------------                     -----
     g_soft                                7
     g_hard                                3
     g_year                                3
     g_week                                3
     g_model                               7
     ee_soft                               7
     ee_hard                               3
     ee_year                               3
     ee_week                               3
     ee_model                              7
     ee_printed_id                         9
     error_109                            14
     g_page_buffer                       256
     stru_sensor                          38
     ee_page                               2
     ee_page_address                       2
     g_dataflash_page_address              2
     g_lux                                 5
     g_timer2_flag                         1
     g_temp                                1
     scs_frame                           840
     g_configurator                        5
     Configurators                         6
     KO_conf                              50
     daylight_motion                      14
     daylight                              6
     motion                                8
     g_ns_index                            1
     ee_flags                              2
     ee_variable                           2
     ee_KO_last                            4
     flash_KO                              4
     ee_KO                                 4
     ee_parameter                         18
     flash_KO_168                         50
     flash_KO_166                         50
     flash_KO_119                         50
     flash_KO_128                         50
     flash_KO_165                         50
     flash_KO_515                         50
     ee_configurators                      6
     ee_KO_conf                           50
     ee_ID                                 9
     ee_product_information                7
     ee_scenario_index                     1
     ee_scenario                         112
     ee_factory_variable                   8
     ee_main_state                         2
     ee_slope                              4
     eep_setpoint                          8
     eep_factor                            2
     eep_M2_hour                           1
     eep_M2_min                            1
     eep_M2_sec                            1
     eep_M2_sens                           1
     IR_reception                         53
     Sensor_mode
     state
     flags
     key_result
     us_result
     flags_muti_step
     g_reception_buffer                   17
     g_asc_reception_buffer                8
     g_short_buffer                        8
     g_asc_short_buffer                    4
     g_ir_reception                       14
     product_info                          2
     flag_timer                            4
     DLL                                 215
     Time_delay                          314
     pir                                   4
     pir_total                             2
     us_total                              2
     motion_total                          2
     US_detection_en                       1
     modality0_delay_ms                    4
     g_key_value                           1
     g_virtual_basci_configuration_flag
                                           1
     PIR_detection_en                      1
     tx1_buffer                           14
     tx1_wr_index                          1
     tx1_rd_index                          1
     tx1_counter                           1
     eventflag2_g                          1
     cell_W                                2
     cell_H                                2
     vx                                    2
     vy                                    2
     avg_x                                 2
     avg_y                                 2
     xmin                                  2
     ymin                                  2
     xmax                                  2
     ymax                                  2
     x_para                                4
     y_para                                4
     Menu_status                           1
     product_information                   7
     temp_product_information              7
     KO                                    4
     parameters                            1
     temp_variable                        20
     g_slope                               4
     M2_timer                              4
     M2_timer_count                        4
     M2_type                               1
     motion_resutl                         1
     set_point                             2
     Delay_Time_set                        4
     during_on_cnt                         1
     during_off_cnt                        1
     Walk_Through_flag                     1
     First_detection_enable                1
     SCS_received                          5
     global_variable_initial             408
     ?<Initializer for g_soft>             7
     ?<Initializer for g_hard>             3
     ?<Initializer for g_year>             3
     ?<Initializer for g_week>             3
     ?<Initializer for g_model>            7
     ?<Initializer for stru_sensor>       38
     ?<Initializer for daylight_motion>   14
     ?<Initializer for daylight>           6
     ?<Initializer for motion>             8
     ?<Initializer for flash_KO>           4
      Others                              12

 
   408 bytes in segment CODE
   280 bytes in segment EEPROM_I
    12 bytes in segment INITTAB
   314 bytes in segment NEAR_F
    93 bytes in segment NEAR_I
    93 bytes in segment NEAR_ID
 1 938 bytes in segment NEAR_Z
 
   815 bytes of CODE  memory (+ 12 bytes shared)
 2 031 bytes of DATA  memory
   280 bytes of XDATA memory

Errors: none
Warnings: none
