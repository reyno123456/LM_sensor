###############################################################################
#                                                                             #
# IAR C/C++ Compiler V5.30.0.50166/W32 for Atmel AVR    11/Dec/2009  23:21:33 #
# Copyright 1996-2009 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  D:\avr\LM_Finial_Test\decode_scs_next.c                  #
#    Command line =  D:\avr\LM_Finial_Test\decode_scs_next.c --cpu=m644p -ms  #
#                    -o D:\avr\LM_Finial_Test\Release\Obj\ -D NDEBUG -D       #
#                    LM018 -D FINAL_VERSION2 -lCN                             #
#                    D:\avr\LM_Finial_Test\Release\List\ -lA                  #
#                    D:\avr\LM_Finial_Test\Release\List\ --diag_suppress      #
#                    Pa082,Pe167,Pe186 --initializers_in_flash -z6            #
#                    --no_inline --no_cross_call --no_tbaa                    #
#                    -DENABLE_BIT_DEFINITIONS -e -I "C:\Program Files\IAR     #
#                    Systems\Embedded Workbench 5.3\avr\INC\" -I "C:\Program  #
#                    Files\IAR Systems\Embedded Workbench 5.3\avr\INC\CLIB\"  #
#                    --eeprom_size 2048                                       #
#    List file    =  D:\avr\LM_Finial_Test\Release\List\decode_scs_next.lst   #
#    Object file  =  D:\avr\LM_Finial_Test\Release\Obj\decode_scs_next.r90    #
#                                                                             #
#                                                                             #
###############################################################################

D:\avr\LM_Finial_Test\decode_scs_next.c
      1          #include <ioavr.h>
      2          #include <inavr.h>
      3          #include <stdio.h>
      4          #include "usart.h"
      5          #include "board.h"
      6          #include "moudle_SCS.h"
      7          #include "decode_scs.h"
      8          #include "stdlib.h"
      9          #include "global_variable.h"
     10          #include "decode_scs_next.h"
     11          #include "application.h"
     12          #include <string.h>
     13          #include "configuration.h"
     14          #include "function_service.h"
     15          #include "PIR.h"
     16          #include "US.h"
     17          

   \                                 In  segment CODE, align 2, keep-with-next
     18          void send_frame_pp(char *data, unsigned int ms)
   \                     send_frame_pp:
     19          {
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   972D               SBIW    R29:R28, 13
   \   00000006   01D9               MOVW    R27:R26, R19:R18
     20          	unsigned char i;
     21          	unsigned char buffer[13];
     22          	unsigned char temp;
     23          
     24          	buffer[0] = '$';
   \   00000008   E224               LDI     R18, 36
   \   0000000A   8328               ST      Y, R18
     25          	buffer[1] = '0';
   \   0000000C   E320               LDI     R18, 48
   \   0000000E   8329               STD     Y+1, R18
     26          	buffer[2] = '3';
   \   00000010   E323               LDI     R18, 51
   \   00000012   832A               STD     Y+2, R18
     27          	for(i=0;i<8;i++)
   \   00000014   E080               LDI     R24, 0
   \   00000016   C00A               RJMP    ??send_frame_pp_0
     28          	{
     29          		buffer[i+3] = *(data+i);
   \                     ??send_frame_pp_1:
   \   00000018   E090               LDI     R25, 0
   \   0000001A   01F8               MOVW    R31:R30, R17:R16
   \   0000001C   0FE8               ADD     R30, R24
   \   0000001E   1FF9               ADC     R31, R25
   \   00000020   8120               LD      R18, Z
   \   00000022   01FE               MOVW    R31:R30, R29:R28
   \   00000024   0FE8               ADD     R30, R24
   \   00000026   1FF9               ADC     R31, R25
   \   00000028   8323               STD     Z+3, R18
     30          	}
   \   0000002A   9583               INC     R24
   \                     ??send_frame_pp_0:
   \   0000002C   3088               CPI     R24, 8
   \   0000002E   F3A0               BRCS    ??send_frame_pp_1
     31          
     32          	buffer[11] = 13;
   \   00000030   E00D               LDI     R16, 13
   \   00000032   870B               STD     Y+11, R16
     33          	buffer[12] = 0;
   \   00000034   E000               LDI     R16, 0
   \   00000036   870C               STD     Y+12, R16
     34          
     35          	put_s(buffer);
   \   00000038   018E               MOVW    R17:R16, R29:R28
   \   0000003A   ........           CALL    put_s
     36          	delay_ms(ms);
   \   0000003E   018D               MOVW    R17:R16, R27:R26
   \   00000040   ........           CALL    delay_ms
     37          	
     38          	for(i=0;i<125;i++)
   \   00000044   E080               LDI     R24, 0
   \   00000046   C004               RJMP    ??send_frame_pp_2
     39            {
     40          		temp = is_gateway_busy();
     41          		if(temp == 0x07 || temp == 0x01)
     42          		{
     43          			put_s(buffer);
   \                     ??send_frame_pp_3:
   \   00000048   018E               MOVW    R17:R16, R29:R28
   \   0000004A   ........           CALL    put_s
     44          		}
   \                     ??send_frame_pp_4:
   \   0000004E   9583               INC     R24
   \                     ??send_frame_pp_2:
   \   00000050   378D               CPI     R24, 125
   \   00000052   F440               BRCC    ??send_frame_pp_5
   \   00000054   ........           CALL    is_gateway_busy
   \   00000058   3007               CPI     R16, 7
   \   0000005A   F3B1               BREQ    ??send_frame_pp_3
   \   0000005C   3001               CPI     R16, 1
   \   0000005E   F3A1               BREQ    ??send_frame_pp_3
     45          		else if(temp == 0x02)
   \   00000060   3002               CPI     R16, 2
   \   00000062   F7A9               BRNE    ??send_frame_pp_4
     46          		{
     47          			break;
     48          		}
     49            }
     50          }
   \                     ??send_frame_pp_5:
   \   00000064   962D               ADIW    R29:R28, 13
   \   00000066   E0E4               LDI     R30, 4
   \   00000068   ........           JMP     ?EPILOGUE_B4_L09
     51          

   \                                 In  segment CODE, align 2, keep-with-next
     52          void send_frame_pp_broad(char *data, unsigned int ms)
   \                     send_frame_pp_broad:
     53          {
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   972D               SBIW    R29:R28, 13
   \   00000006   01D9               MOVW    R27:R26, R19:R18
     54          	unsigned char i;
     55          	unsigned char buffer[13];
     56          	unsigned char temp;
     57          
     58          	buffer[0] = '$';
   \   00000008   E224               LDI     R18, 36
   \   0000000A   8328               ST      Y, R18
     59          	buffer[1] = '0';
   \   0000000C   E320               LDI     R18, 48
   \   0000000E   8329               STD     Y+1, R18
     60          	buffer[2] = '4';
   \   00000010   E324               LDI     R18, 52
   \   00000012   832A               STD     Y+2, R18
     61          	for(i=0;i<8;i++)
   \   00000014   E080               LDI     R24, 0
   \   00000016   C00A               RJMP    ??send_frame_pp_broad_0
     62          	{
     63          		buffer[i+3] = *(data+i);
   \                     ??send_frame_pp_broad_1:
   \   00000018   E090               LDI     R25, 0
   \   0000001A   01F8               MOVW    R31:R30, R17:R16
   \   0000001C   0FE8               ADD     R30, R24
   \   0000001E   1FF9               ADC     R31, R25
   \   00000020   8120               LD      R18, Z
   \   00000022   01FE               MOVW    R31:R30, R29:R28
   \   00000024   0FE8               ADD     R30, R24
   \   00000026   1FF9               ADC     R31, R25
   \   00000028   8323               STD     Z+3, R18
     64          	}
   \   0000002A   9583               INC     R24
   \                     ??send_frame_pp_broad_0:
   \   0000002C   3088               CPI     R24, 8
   \   0000002E   F3A0               BRCS    ??send_frame_pp_broad_1
     65          
     66          	buffer[11] = 13;
   \   00000030   E00D               LDI     R16, 13
   \   00000032   870B               STD     Y+11, R16
     67          	buffer[12] = 0;
   \   00000034   E000               LDI     R16, 0
   \   00000036   870C               STD     Y+12, R16
     68          
     69          	put_s(buffer);
   \   00000038   018E               MOVW    R17:R16, R29:R28
   \   0000003A   ........           CALL    put_s
     70          	delay_ms(ms);
   \   0000003E   018D               MOVW    R17:R16, R27:R26
   \   00000040   ........           CALL    delay_ms
     71          	
     72          	for(i=0;i<250;i++)
   \   00000044   E080               LDI     R24, 0
   \   00000046   C004               RJMP    ??send_frame_pp_broad_2
     73            {
     74          		temp = is_gateway_busy();
     75          		if(temp == 0x07 || temp == 0x01)
     76          		{
     77          			put_s(buffer);
   \                     ??send_frame_pp_broad_3:
   \   00000048   018E               MOVW    R17:R16, R29:R28
   \   0000004A   ........           CALL    put_s
     78          		}
   \                     ??send_frame_pp_broad_4:
   \   0000004E   9583               INC     R24
   \                     ??send_frame_pp_broad_2:
   \   00000050   3F8A               CPI     R24, 250
   \   00000052   F440               BRCC    ??send_frame_pp_broad_5
   \   00000054   ........           CALL    is_gateway_busy
   \   00000058   3007               CPI     R16, 7
   \   0000005A   F3B1               BREQ    ??send_frame_pp_broad_3
   \   0000005C   3001               CPI     R16, 1
   \   0000005E   F3A1               BREQ    ??send_frame_pp_broad_3
     79          		else if(temp == 0x02)
   \   00000060   3002               CPI     R16, 2
   \   00000062   F7A9               BRNE    ??send_frame_pp_broad_4
     80          		{
     81          			break;
     82          		}
     83            }
     84          	
     85          }
   \                     ??send_frame_pp_broad_5:
   \   00000064   962D               ADIW    R29:R28, 13
   \   00000066   E0E4               LDI     R30, 4
   \   00000068   ........           JMP     ?EPILOGUE_B4_L09
     86          

   \                                 In  segment CODE, align 2, keep-with-next
     87          void send_frame_pp_ext(char *data, unsigned int ms)
   \                     send_frame_pp_ext:
     88          {
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   9765               SBIW    R29:R28, 21
   \   00000006   01C9               MOVW    R25:R24, R19:R18
     89          	unsigned char i;
     90          	unsigned char buffer[21];
     91          
     92          	buffer[0] = '$';
   \   00000008   E224               LDI     R18, 36
   \   0000000A   8328               ST      Y, R18
     93          	buffer[1] = '0';
   \   0000000C   E320               LDI     R18, 48
   \   0000000E   8329               STD     Y+1, R18
     94          	buffer[2] = '5';
   \   00000010   E325               LDI     R18, 53
   \   00000012   832A               STD     Y+2, R18
     95          	for(i=0;i<16;i++)
   \   00000014   E020               LDI     R18, 0
   \   00000016   C00A               RJMP    ??send_frame_pp_ext_0
     96          	{
     97          		buffer[i+3] = *(data+i);
   \                     ??send_frame_pp_ext_1:
   \   00000018   E030               LDI     R19, 0
   \   0000001A   01F8               MOVW    R31:R30, R17:R16
   \   0000001C   0FE2               ADD     R30, R18
   \   0000001E   1FF3               ADC     R31, R19
   \   00000020   8140               LD      R20, Z
   \   00000022   01FE               MOVW    R31:R30, R29:R28
   \   00000024   0FE2               ADD     R30, R18
   \   00000026   1FF3               ADC     R31, R19
   \   00000028   8343               STD     Z+3, R20
     98          	}
   \   0000002A   9523               INC     R18
   \                     ??send_frame_pp_ext_0:
   \   0000002C   3120               CPI     R18, 16
   \   0000002E   F3A0               BRCS    ??send_frame_pp_ext_1
     99          	buffer[19] = 13;
   \   00000030   E00D               LDI     R16, 13
   \   00000032   8B0B               STD     Y+19, R16
    100          	buffer[20] = 0;
   \   00000034   E000               LDI     R16, 0
   \   00000036   8B0C               STD     Y+20, R16
    101          
    102          	put_s(buffer);
   \   00000038   018E               MOVW    R17:R16, R29:R28
   \   0000003A   ........           CALL    put_s
    103          
    104          	delay_ms(ms);
   \   0000003E   018C               MOVW    R17:R16, R25:R24
   \   00000040   ........           CALL    delay_ms
    105          }
   \   00000044   9665               ADIW    R29:R28, 21
   \   00000046   9189               LD      R24, Y+
   \   00000048   9199               LD      R25, Y+
   \   0000004A   9508               RET
    106          

   \                                 In  segment CODE, align 2, keep-with-next
    107          void send_frame_pp_ext_broad(char *data, unsigned int ms)
   \                     send_frame_pp_ext_broad:
    108          {
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   9768               SBIW    R29:R28, 24
   \   00000006   01D9               MOVW    R27:R26, R19:R18
    109          	unsigned char i;
    110          	unsigned char buffer[21];
    111          	unsigned char buffer_char[3];
    112          	unsigned char temp = 0;
    113          
    114          	buffer[0] = '$';
   \   00000008   E224               LDI     R18, 36
   \   0000000A   832B               STD     Y+3, R18
    115          	buffer[1] = '0';
   \   0000000C   E320               LDI     R18, 48
   \   0000000E   832C               STD     Y+4, R18
    116          	buffer[2] = '6';
   \   00000010   E326               LDI     R18, 54
   \   00000012   832D               STD     Y+5, R18
    117          	for(i=0;i<16;i++)
   \   00000014   E080               LDI     R24, 0
   \   00000016   C00B               RJMP    ??send_frame_pp_ext_broad_0
    118          	{
    119          		buffer[i+3] = *(data+i);
   \                     ??send_frame_pp_ext_broad_1:
   \   00000018   E090               LDI     R25, 0
   \   0000001A   01F8               MOVW    R31:R30, R17:R16
   \   0000001C   0FE8               ADD     R30, R24
   \   0000001E   1FF9               ADC     R31, R25
   \   00000020   8120               LD      R18, Z
   \   00000022   01FE               MOVW    R31:R30, R29:R28
   \   00000024   9633               ADIW    R31:R30, 3
   \   00000026   0FE8               ADD     R30, R24
   \   00000028   1FF9               ADC     R31, R25
   \   0000002A   8323               STD     Z+3, R18
    120          	}
   \   0000002C   9583               INC     R24
   \                     ??send_frame_pp_ext_broad_0:
   \   0000002E   3180               CPI     R24, 16
   \   00000030   F398               BRCS    ??send_frame_pp_ext_broad_1
    121          	buffer[19] = 13;
   \   00000032   E00D               LDI     R16, 13
   \   00000034   8B0E               STD     Y+22, R16
   \   00000036   9100....           LDS     R16, product_information
   \   0000003A   3003               CPI     R16, 3
   \   0000003C   F419               BRNE    ??send_frame_pp_ext_broad_2
    122          
    123          	//add by 2009 02 18
    124          	if(product_information.conf_type == 3)
    125          	{
    126          		buffer[5] = '0';
   \                     ??send_frame_pp_ext_broad_3:
   \   0000003E   E300               LDI     R16, 48
   \   00000040   8708               STD     Y+8, R16
    127          		buffer[6] = '0';
   \   00000042   C018               RJMP    ??send_frame_pp_ext_broad_4
    128          	}
    129          	else if( product_information.conf_type == 2 )
   \                     ??send_frame_pp_ext_broad_2:
   \   00000044   9100....           LDS     R16, product_information
   \   00000048   3002               CPI     R16, 2
   \   0000004A   9100....           LDS     R16, (g_reception_buffer + 7)
   \   0000004E   F431               BRNE    ??send_frame_pp_ext_broad_5
    130          	{
    131          		if(g_reception_buffer[7] == '3')
   \   00000050   3303               CPI     R16, 51
   \   00000052   F3A9               BREQ    ??send_frame_pp_ext_broad_3
    132          		{
    133          			buffer[5] = '0';
    134          			buffer[6] = '0';
    135          		}
    136          		else
    137          		{
    138          			CharToStr( ee_KO_conf.GR, buffer_char);
   \   00000054   019E               MOVW    R19:R18, R29:R28
   \   00000056   ....               LDI     R20, LOW((ee_KO_conf + 6))
   \   00000058   ....               LDI     R21, HIGH((ee_KO_conf + 6))
   \   0000005A   C005               RJMP    ??send_frame_pp_ext_broad_6
    139          			buffer[5] = buffer_char[0];
    140          			buffer[6] = buffer_char[1];
    141          		}
    142          	}
    143          	else
    144          	{
    145          		if(g_reception_buffer[7] == '3')
   \                     ??send_frame_pp_ext_broad_5:
   \   0000005C   3303               CPI     R16, 51
   \   0000005E   F379               BREQ    ??send_frame_pp_ext_broad_3
    146          		{
    147          			buffer[5] = '0';
    148          			buffer[6] = '0';
    149          		}
    150          		else
    151          		{
    152          			CharToStr( ee_KO_conf.DesAdd , buffer_char);
   \   00000060   019E               MOVW    R19:R18, R29:R28
   \   00000062   ....               LDI     R20, LOW((ee_KO_conf + 2))
   \   00000064   ....               LDI     R21, HIGH((ee_KO_conf + 2))
   \                     ??send_frame_pp_ext_broad_6:
   \   00000066   ........           CALL    __eeget8_16
   \   0000006A   ........           CALL    CharToStr
    153          			buffer[5] = buffer_char[0];
   \   0000006E   8108               LD      R16, Y
   \   00000070   8708               STD     Y+8, R16
    154          			buffer[6] = buffer_char[1];
   \   00000072   8109               LDD     R16, Y+1
   \                     ??send_frame_pp_ext_broad_4:
   \   00000074   8709               STD     Y+9, R16
    155          		}
    156          	}
    157          
    158            if( product_information.cen_system == CEN )
   \   00000076   9100....           LDS     R16, (product_information + 4)
   \   0000007A   3001               CPI     R16, 1
   \   0000007C   F431               BRNE    ??send_frame_pp_ext_broad_7
    159            {
    160              buffer[5] = product_information.local_A;
   \   0000007E   9100....           LDS     R16, (product_information + 2)
   \   00000082   8708               STD     Y+8, R16
    161              buffer[6] = product_information.local_PL;
   \   00000084   9100....           LDS     R16, (product_information + 3)
   \   00000088   C002               RJMP    ??send_frame_pp_ext_broad_8
    162            }
    163            else
    164            {
    165              buffer[5] = '0';
   \                     ??send_frame_pp_ext_broad_7:
   \   0000008A   E300               LDI     R16, 48
   \   0000008C   8708               STD     Y+8, R16
    166          		buffer[6] = '0';
   \                     ??send_frame_pp_ext_broad_8:
   \   0000008E   8709               STD     Y+9, R16
    167            }
    168          
    169          	buffer[20] = 0;
   \   00000090   E000               LDI     R16, 0
   \   00000092   8B0F               STD     Y+23, R16
    170          	put_s(buffer);
   \   00000094   018E               MOVW    R17:R16, R29:R28
   \   00000096   5F0D               SUBI    R16, 253
   \   00000098   4F1F               SBCI    R17, 255
   \   0000009A   ........           CALL    put_s
    171            delay_ms(ms);
   \   0000009E   018D               MOVW    R17:R16, R27:R26
   \   000000A0   ........           CALL    delay_ms
    172            /*
    173            if(is_gateway_busy() != 0x02)
    174            {
    175              put_s(buffer);
    176              delay_ms(ms);
    177            }
    178          	delay_ms(ms);
    179            */
    180          
    181            for(i=0;i<250;i++)
   \   000000A4   E080               LDI     R24, 0
   \   000000A6   C006               RJMP    ??send_frame_pp_ext_broad_9
    182            {
    183          		temp = is_gateway_busy();
    184          		if(temp == 0x07 || temp == 0x01)
    185          		{
    186          			put_s(buffer);
   \                     ??send_frame_pp_ext_broad_10:
   \   000000A8   018E               MOVW    R17:R16, R29:R28
   \   000000AA   5F0D               SUBI    R16, 253
   \   000000AC   4F1F               SBCI    R17, 255
   \   000000AE   ........           CALL    put_s
    187          		}
   \                     ??send_frame_pp_ext_broad_11:
   \   000000B2   9583               INC     R24
   \                     ??send_frame_pp_ext_broad_9:
   \   000000B4   3F8A               CPI     R24, 250
   \   000000B6   F440               BRCC    ??send_frame_pp_ext_broad_12
   \   000000B8   ........           CALL    is_gateway_busy
   \   000000BC   3007               CPI     R16, 7
   \   000000BE   F3A1               BREQ    ??send_frame_pp_ext_broad_10
   \   000000C0   3001               CPI     R16, 1
   \   000000C2   F391               BREQ    ??send_frame_pp_ext_broad_10
    188          		else if(temp == 0x02)
   \   000000C4   3002               CPI     R16, 2
   \   000000C6   F7A9               BRNE    ??send_frame_pp_ext_broad_11
    189          		{
    190          			break;
    191          		}
    192            }
    193          }
   \                     ??send_frame_pp_ext_broad_12:
   \   000000C8   9668               ADIW    R29:R28, 24
   \   000000CA   E0E4               LDI     R30, 4
   \   000000CC   ........           JMP     ?EPILOGUE_B4_L09
    194          

   \                                 In  segment CODE, align 2, keep-with-next
    195          void  org_ext_broad(char *data, unsigned int ms)
   \                     org_ext_broad:
    196          {
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   9765               SBIW    R29:R28, 21
   \   00000006   01D9               MOVW    R27:R26, R19:R18
    197          	unsigned char i;
    198          	unsigned char buffer[21];
    199          	unsigned char temp = 0;
    200          	
    201          	buffer[0] = '$';
   \   00000008   E224               LDI     R18, 36
   \   0000000A   8328               ST      Y, R18
    202          	buffer[1] = '0';
   \   0000000C   E320               LDI     R18, 48
   \   0000000E   8329               STD     Y+1, R18
    203          	buffer[2] = '6';
   \   00000010   E326               LDI     R18, 54
   \   00000012   832A               STD     Y+2, R18
    204          	for(i=0;i<16;i++)
   \   00000014   E080               LDI     R24, 0
   \   00000016   C00A               RJMP    ??org_ext_broad_0
    205          	{
    206          		buffer[i+3] = *(data+i);
   \                     ??org_ext_broad_1:
   \   00000018   E090               LDI     R25, 0
   \   0000001A   01F8               MOVW    R31:R30, R17:R16
   \   0000001C   0FE8               ADD     R30, R24
   \   0000001E   1FF9               ADC     R31, R25
   \   00000020   8120               LD      R18, Z
   \   00000022   01FE               MOVW    R31:R30, R29:R28
   \   00000024   0FE8               ADD     R30, R24
   \   00000026   1FF9               ADC     R31, R25
   \   00000028   8323               STD     Z+3, R18
    207          	}
   \   0000002A   9583               INC     R24
   \                     ??org_ext_broad_0:
   \   0000002C   3180               CPI     R24, 16
   \   0000002E   F3A0               BRCS    ??org_ext_broad_1
    208          	buffer[19] = 13;
   \   00000030   E00D               LDI     R16, 13
   \   00000032   8B0B               STD     Y+19, R16
    209          
    210          	//add by 2009 02 18
    211          
    212          	put_s(buffer);
   \   00000034   018E               MOVW    R17:R16, R29:R28
   \   00000036   ........           CALL    put_s
    213          
    214          	delay_ms(ms);
   \   0000003A   018D               MOVW    R17:R16, R27:R26
   \   0000003C   ........           CALL    delay_ms
    215          
    216            for(i=0;i<250;i++)
   \   00000040   E080               LDI     R24, 0
   \   00000042   C004               RJMP    ??org_ext_broad_2
    217            {
    218          		temp = is_gateway_busy();
    219          		if(temp == 0x07 || temp == 0x01)
    220          		{
    221          			put_s(buffer);
   \                     ??org_ext_broad_3:
   \   00000044   018E               MOVW    R17:R16, R29:R28
   \   00000046   ........           CALL    put_s
    222          		}
   \                     ??org_ext_broad_4:
   \   0000004A   9583               INC     R24
   \                     ??org_ext_broad_2:
   \   0000004C   3F8A               CPI     R24, 250
   \   0000004E   F440               BRCC    ??org_ext_broad_5
   \   00000050   ........           CALL    is_gateway_busy
   \   00000054   3007               CPI     R16, 7
   \   00000056   F3B1               BREQ    ??org_ext_broad_3
   \   00000058   3001               CPI     R16, 1
   \   0000005A   F3A1               BREQ    ??org_ext_broad_3
    223          		else if(temp == 0x02)
   \   0000005C   3002               CPI     R16, 2
   \   0000005E   F7A9               BRNE    ??org_ext_broad_4
    224          		{
    225          			break;
    226          		}
    227            }
    228          }
   \                     ??org_ext_broad_5:
   \   00000060   9665               ADIW    R29:R28, 21
   \   00000062   E0E4               LDI     R30, 4
   \   00000064   ........           JMP     ?EPILOGUE_B4_L09
    229          

   \                                 In  segment CODE, align 2, keep-with-next
    230          void id_frame(void)
   \                     id_frame:
    231          {
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   9761               SBIW    R29:R28, 17
    232          	unsigned char i;
    233          	unsigned char buffer_tx[17];
    234          	static unsigned char ID_buffer[9] = "00000000";
    235          
    236          	strncpy(buffer_tx,"D000010400000000",17);
   \   00000006   E141               LDI     R20, 17
   \   00000008   E050               LDI     R21, 0
   \   0000000A   ....               LDI     R18, LOW(`?<Constant "D000010400000000">`)
   \   0000000C   ....               LDI     R19, (`?<Constant "D000010400000000">`) >> 8
   \   0000000E   018E               MOVW    R17:R16, R29:R28
   \   00000010   ........           CALL    strncpy
    237          	buffer_tx[16] = 0;
   \   00000014   E000               LDI     R16, 0
   \   00000016   8B08               STD     Y+16, R16
   \   00000018   ....               LDI     R20, LOW(ee_ID)
   \   0000001A   ....               LDI     R21, (ee_ID) >> 8
   \   0000001C   ........           CALL    __eeget8_16
   \   00000020   8708               STD     Y+8, R16
    238          
    239          	i = 8;
    240          	buffer_tx[i++] = ee_ID[0];
    241          	buffer_tx[i++] = ee_ID[1];
   \   00000022   ....               LDI     R20, LOW((ee_ID + 1))
   \   00000024   ....               LDI     R21, HIGH((ee_ID + 1))
   \   00000026   ........           CALL    __eeget8_16
   \   0000002A   8709               STD     Y+9, R16
    242          	buffer_tx[i++] = ee_ID[2];
   \   0000002C   ....               LDI     R20, LOW((ee_ID + 2))
   \   0000002E   ....               LDI     R21, HIGH((ee_ID + 2))
   \   00000030   ........           CALL    __eeget8_16
   \   00000034   870A               STD     Y+10, R16
    243          	buffer_tx[i++] = ee_ID[3];
   \   00000036   ....               LDI     R20, LOW((ee_ID + 3))
   \   00000038   ....               LDI     R21, HIGH((ee_ID + 3))
   \   0000003A   ........           CALL    __eeget8_16
   \   0000003E   870B               STD     Y+11, R16
    244          	buffer_tx[i++] = ee_ID[4];
   \   00000040   ....               LDI     R20, LOW((ee_ID + 4))
   \   00000042   ....               LDI     R21, HIGH((ee_ID + 4))
   \   00000044   ........           CALL    __eeget8_16
   \   00000048   870C               STD     Y+12, R16
    245          	buffer_tx[i++] = ee_ID[5];
   \   0000004A   ....               LDI     R20, LOW((ee_ID + 5))
   \   0000004C   ....               LDI     R21, HIGH((ee_ID + 5))
   \   0000004E   ........           CALL    __eeget8_16
   \   00000052   870D               STD     Y+13, R16
    246          	buffer_tx[i++] = ee_ID[6];
   \   00000054   ....               LDI     R20, LOW((ee_ID + 6))
   \   00000056   ....               LDI     R21, HIGH((ee_ID + 6))
   \   00000058   ........           CALL    __eeget8_16
   \   0000005C   870E               STD     Y+14, R16
    247          	buffer_tx[i++] = ee_ID[7];
   \   0000005E   ....               LDI     R20, LOW((ee_ID + 7))
   \   00000060   ....               LDI     R21, HIGH((ee_ID + 7))
   \   00000062   ........           CALL    __eeget8_16
   \   00000066   870F               STD     Y+15, R16
   \   00000068   9100....           LDS     R16, (g_reception_buffer + 7)
   \   0000006C   5302               SUBI    R16, 50
   \   0000006E   F0C1               BREQ    ??id_frame_0
   \   00000070   950A               DEC     R16
   \   00000072   F189               BREQ    ??id_frame_1
   \   00000074   5002               SUBI    R16, 2
   \   00000076   F409               BRNE    $+2+2
   \   00000078   C045               RJMP    ??id_frame_2
   \   0000007A   950A               DEC     R16
   \   0000007C   F409               BRNE    $+2+2
   \   0000007E   C0C6               RJMP    ??id_frame_3
   \   00000080   950A               DEC     R16
   \   00000082   F409               BRNE    $+2+2
   \   00000084   C139               RJMP    ??id_frame_4
   \   00000086   950A               DEC     R16
   \   00000088   F409               BRNE    $+2+2
   \   0000008A   C18D               RJMP    ??id_frame_5
   \   0000008C   950A               DEC     R16
   \   0000008E   F409               BRNE    $+2+2
   \   00000090   C19E               RJMP    ??id_frame_6
   \   00000092   5008               SUBI    R16, 8
   \   00000094   F409               BRNE    $+2+2
   \   00000096   C1B5               RJMP    ??id_frame_7
   \   00000098   950A               DEC     R16
   \   0000009A   F409               BRNE    $+2+2
   \   0000009C   C1C1               RJMP    ??id_frame_8
   \   0000009E   C1CC               RJMP    ??id_frame_9
    248          
    249          	switch(g_reception_buffer[7])
    250          	{
    251          		case '0':
    252          			//reserved
    253          		break;
    254          
    255          		case '1':
    256          			//reserved
    257          		break;
    258          
    259          		case '2':
    260          			//if(product_information.ID_factory_assigned == 0)
    261          			//{
    262          				for(i=0;i<8;i++)
   \                     ??id_frame_0:
   \   000000A0   E000               LDI     R16, 0
   \   000000A2   C00B               RJMP    ??id_frame_10
    263          				{
    264          					ID_buffer[i] = g_reception_buffer[i+8];
   \                     ??id_frame_11:
   \   000000A4   E010               LDI     R17, 0
   \   000000A6   ....               LDI     R30, LOW(g_reception_buffer)
   \   000000A8   ....               LDI     R31, (g_reception_buffer) >> 8
   \   000000AA   0FE0               ADD     R30, R16
   \   000000AC   1FF1               ADC     R31, R17
   \   000000AE   8520               LDD     R18, Z+8
   \   000000B0   01F8               MOVW    R31:R30, R17:R16
   \   000000B2   ....               SUBI    R30, LOW((-(??ID_buffer) & 0xFFFF))
   \   000000B4   ....               SBCI    R31, (-(??ID_buffer) & 0xFFFF) >> 8
   \   000000B6   8320               ST      Z, R18
    265          				}
   \   000000B8   9503               INC     R16
   \                     ??id_frame_10:
   \   000000BA   3008               CPI     R16, 8
   \   000000BC   F398               BRCS    ??id_frame_11
    266          				timer_flex_initial(10000);
   \   000000BE   E100               LDI     R16, 16
   \   000000C0   E217               LDI     R17, 39
   \   000000C2   E020               LDI     R18, 0
   \   000000C4   E030               LDI     R19, 0
   \   000000C6   ........           CALL    timer_flex_initial
    267          				state.id_setting = 1;
   \   000000CA   ....               LDI     R30, LOW(state)
   \   000000CC   ....               LDI     R31, (state) >> 8
   \   000000CE   8100               LD      R16, Z
   \   000000D0   8111               LDD     R17, Z+1
   \   000000D2   6800               ORI     R16, 0x80
   \   000000D4   C1AF               RJMP    ??id_frame_12
    268          			//}
    269          		break;
    270          
    271          		case '3':
    272          			//ID request
    273          			if(flags.id_ack == 0)
   \                     ??id_frame_1:
   \   000000D6   ....               LDI     R30, LOW(flags)
   \   000000D8   ....               LDI     R31, (flags) >> 8
   \   000000DA   8100               LD      R16, Z
   \   000000DC   8111               LDD     R17, Z+1
   \   000000DE   FD01               SBRC    R16, 1
   \   000000E0   C1AB               RJMP    ??id_frame_9
    274          			{
    275          				if(flags.id_request_enabled)
   \   000000E2   8100               LD      R16, Z
   \   000000E4   8111               LDD     R17, Z+1
   \   000000E6   FF02               SBRS    R16, 2
   \   000000E8   C1A7               RJMP    ??id_frame_9
    276          				{
    277          					if(ee_product_information.ID_confed)
   \   000000EA   ....               LDI     R20, LOW((ee_product_information + 1))
   \   000000EC   ....               LDI     R21, HIGH((ee_product_information + 1))
   \   000000EE   ........           CALL    __eeget8_16
   \   000000F2   2300               TST     R16
   \   000000F4   F409               BRNE    $+2+2
   \   000000F6   C1A0               RJMP    ??id_frame_9
    278          					{
    279          						asm("nop");
   \   000000F8   0000               nop
    280          						send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \                     ??id_frame_13:
   \   000000FA   E322               LDI     R18, 50
   \   000000FC   E030               LDI     R19, 0
   \   000000FE   018E               MOVW    R17:R16, R29:R28
   \   00000100   ....               RCALL   send_frame_pp_ext_broad
   \   00000102   C19A               RJMP    ??id_frame_9
    281          					}
    282          				}
    283          			}
    284          		break;
    285          
    286          		case '5':
    287          			//if(state.id_setting == 1 && product_information.ID_factory_assigned == 0)
    288          			if(state.id_setting == 1)
   \                     ??id_frame_2:
   \   00000104   ....               LDI     R30, LOW(state)
   \   00000106   ....               LDI     R31, (state) >> 8
   \   00000108   8100               LD      R16, Z
   \   0000010A   8111               LDD     R17, Z+1
   \   0000010C   FF07               SBRS    R16, 7
   \   0000010E   C194               RJMP    ??id_frame_9
    289          			{	
    290          				state.id_setting = 0;
   \   00000110   8100               LD      R16, Z
   \   00000112   8111               LDD     R17, Z+1
   \   00000114   770F               ANDI    R16, 0x7F
   \   00000116   8311               STD     Z+1, R17
   \   00000118   8300               ST      Z, R16
    291          				if((g_reception_buffer[8] == ID_buffer[0]) && (g_reception_buffer[9] == ID_buffer[1]) && (g_reception_buffer[10] == ID_buffer[2]) && (g_reception_buffer[11] == ID_buffer[3]) && (g_reception_buffer[12] == ID_buffer[4]) && (g_reception_buffer[13] == ID_buffer[5]) && (g_reception_buffer[14] == ID_buffer[6]) && (g_reception_buffer[15] == ID_buffer[7]))
   \   0000011A   ....               LDI     R26, LOW(??ID_buffer)
   \   0000011C   ....               LDI     R27, (??ID_buffer) >> 8
   \   0000011E   9100....           LDS     R16, (g_reception_buffer + 8)
   \   00000122   9110....           LDS     R17, ??ID_buffer
   \   00000126   1701               CP      R16, R17
   \   00000128   F009               BREQ    $+2+2
   \   0000012A   C064               RJMP    ??id_frame_14
   \   0000012C   9100....           LDS     R16, (g_reception_buffer + 9)
   \   00000130   9110....           LDS     R17, (??ID_buffer + 1)
   \   00000134   1701               CP      R16, R17
   \   00000136   F009               BREQ    $+2+2
   \   00000138   C05D               RJMP    ??id_frame_14
   \   0000013A   9100....           LDS     R16, (g_reception_buffer + 10)
   \   0000013E   9110....           LDS     R17, (??ID_buffer + 2)
   \   00000142   1701               CP      R16, R17
   \   00000144   F009               BREQ    $+2+2
   \   00000146   C056               RJMP    ??id_frame_14
   \   00000148   9100....           LDS     R16, (g_reception_buffer + 11)
   \   0000014C   9110....           LDS     R17, (??ID_buffer + 3)
   \   00000150   1701               CP      R16, R17
   \   00000152   F009               BREQ    $+2+2
   \   00000154   C04F               RJMP    ??id_frame_14
   \   00000156   9100....           LDS     R16, (g_reception_buffer + 12)
   \   0000015A   9110....           LDS     R17, (??ID_buffer + 4)
   \   0000015E   1701               CP      R16, R17
   \   00000160   F009               BREQ    $+2+2
   \   00000162   C048               RJMP    ??id_frame_14
   \   00000164   9100....           LDS     R16, (g_reception_buffer + 13)
   \   00000168   9110....           LDS     R17, (??ID_buffer + 5)
   \   0000016C   1701               CP      R16, R17
   \   0000016E   F009               BREQ    $+2+2
   \   00000170   C041               RJMP    ??id_frame_14
   \   00000172   9100....           LDS     R16, (g_reception_buffer + 14)
   \   00000176   9110....           LDS     R17, (??ID_buffer + 6)
   \   0000017A   1701               CP      R16, R17
   \   0000017C   F5D9               BRNE    ??id_frame_14
   \   0000017E   9100....           LDS     R16, (g_reception_buffer + 15)
   \   00000182   9110....           LDS     R17, (??ID_buffer + 7)
   \   00000186   1701               CP      R16, R17
   \   00000188   F5A9               BRNE    ??id_frame_14
    292          				{
    293          					ID_setting(ID_buffer);
   \   0000018A   018D               MOVW    R17:R16, R27:R26
   \   0000018C   ........           CALL    ID_setting
    294          					ee_product_information.ID_confed = 0x01;
   \   00000190   ....               LDI     R24, LOW(ee_product_information)
   \   00000192   ....               LDI     R25, (ee_product_information) >> 8
   \   00000194   E001               LDI     R16, 1
   \   00000196   ....               LDI     R20, LOW((ee_product_information + 1))
   \   00000198   ....               LDI     R21, HIGH((ee_product_information + 1))
   \   0000019A   ........           CALL    __eeput8_16
    295          					strncpy(buffer_tx,"D000010400000000",17);
   \   0000019E   E141               LDI     R20, 17
   \   000001A0   E050               LDI     R21, 0
   \   000001A2   ....               LDI     R18, LOW(`?<Constant "D000010400000000">`)
   \   000001A4   ....               LDI     R19, (`?<Constant "D000010400000000">`) >> 8
   \   000001A6   018E               MOVW    R17:R16, R29:R28
   \   000001A8   ........           CALL    strncpy
    296          					strncpy(&buffer_tx[8],ID_buffer,9);
   \   000001AC   E049               LDI     R20, 9
   \   000001AE   E050               LDI     R21, 0
   \   000001B0   019D               MOVW    R19:R18, R27:R26
   \   000001B2   018E               MOVW    R17:R16, R29:R28
   \   000001B4   5F08               SUBI    R16, 248
   \   000001B6   4F1F               SBCI    R17, 255
   \   000001B8   ........           CALL    strncpy
    297          					send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   000001BC   E322               LDI     R18, 50
   \   000001BE   E030               LDI     R19, 0
   \   000001C0   018E               MOVW    R17:R16, R29:R28
   \   000001C2   ....               RCALL   send_frame_pp_ext_broad
    298          					flags.id_confed = 1;
   \   000001C4   ....               LDI     R30, LOW(flags)
   \   000001C6   ....               LDI     R31, (flags) >> 8
   \   000001C8   8100               LD      R16, Z
   \   000001CA   8111               LDD     R17, Z+1
   \   000001CC   6001               ORI     R16, 0x01
   \   000001CE   8311               STD     Z+1, R17
   \   000001D0   8300               ST      Z, R16
    299          					ee_product_information.ID_factory_assigned = 1;
   \   000001D2   ....               LDI     R20, ((ee_product_information + 5) & 0xff) & 0xFF
   \   000001D4   ....               LDI     R21, (((ee_product_information + 5) >> 8) & 0xff) & 0xFF
   \   000001D6   ........           CALL    __eeget16_16
   \   000001DA   6001               ORI     R16, 0x01
   \   000001DC   9605               ADIW    R25:R24, 5
   \   000001DE   01AC               MOVW    R21:R20, R25:R24
   \   000001E0   ........           CALL    __eeput16_16
    300          					if( product_information.ID_factory_assigned == 0 ) system_reset();
   \   000001E4   ....               LDI     R30, LOW(product_information)
   \   000001E6   ....               LDI     R31, (product_information) >> 8
   \   000001E8   8105               LDD     R16, Z+5
   \   000001EA   FD00               SBRC    R16, 0
   \   000001EC   C125               RJMP    ??id_frame_9
   \   000001EE   ........           CALL    system_reset
   \   000001F2   C122               RJMP    ??id_frame_9
    301          				}
    302          				else
    303          				{
    304          					buffer_tx[7] = 'E';
   \                     ??id_frame_14:
   \   000001F4   E405               LDI     R16, 69
   \   000001F6   830F               STD     Y+7, R16
    305          					strncpy(&buffer_tx[8],"00000000",9);
   \   000001F8   E049               LDI     R20, 9
   \   000001FA   E050               LDI     R21, 0
   \   000001FC   ....               LDI     R18, LOW((`?<Constant "D000010400000000">` + 17))
   \   000001FE   ....               LDI     R19, HIGH((`?<Constant "D000010400000000">` + 17))
   \   00000200   018E               MOVW    R17:R16, R29:R28
   \   00000202   5F08               SUBI    R16, 248
   \   00000204   4F1F               SBCI    R17, 255
   \   00000206   ........           CALL    strncpy
    306          					send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   0000020A   CF77               RJMP    ??id_frame_13
    307          				}
    308          			}
    309          		break;
    310          
    311          		case '6':
    312          			if(ee_product_information.ID_confed)
   \                     ??id_frame_3:
   \   0000020C   ....               LDI     R20, LOW((ee_product_information + 1))
   \   0000020E   ....               LDI     R21, HIGH((ee_product_information + 1))
   \   00000210   ........           CALL    __eeget8_16
   \   00000214   2300               TST     R16
   \   00000216   F409               BRNE    $+2+2
   \   00000218   C10F               RJMP    ??id_frame_9
    313          			{
    314          				if((g_reception_buffer[8] == ee_ID[0])
    315          					&& (g_reception_buffer[9] == ee_ID[1])
    316          					&& (g_reception_buffer[10] == ee_ID[2])
    317          					&& (g_reception_buffer[11] == ee_ID[3])
    318          				 	&& (g_reception_buffer[12] == ee_ID[4])
    319          				 	&& (g_reception_buffer[13] == ee_ID[5])
    320          				 	&& (g_reception_buffer[14] == ee_ID[6])
    321          				 	&& (g_reception_buffer[15] == ee_ID[7]))
   \   0000021A   9110....           LDS     R17, (g_reception_buffer + 8)
   \   0000021E   ....               LDI     R20, LOW(ee_ID)
   \   00000220   ....               LDI     R21, (ee_ID) >> 8
   \   00000222   ........           CALL    __eeget8_16
   \   00000226   1710               CP      R17, R16
   \   00000228   F009               BREQ    $+2+2
   \   0000022A   C106               RJMP    ??id_frame_9
   \   0000022C   9110....           LDS     R17, (g_reception_buffer + 9)
   \   00000230   ....               LDI     R20, LOW((ee_ID + 1))
   \   00000232   ....               LDI     R21, HIGH((ee_ID + 1))
   \   00000234   ........           CALL    __eeget8_16
   \   00000238   1710               CP      R17, R16
   \   0000023A   F009               BREQ    $+2+2
   \   0000023C   C0FD               RJMP    ??id_frame_9
   \   0000023E   9110....           LDS     R17, (g_reception_buffer + 10)
   \   00000242   ....               LDI     R20, LOW((ee_ID + 2))
   \   00000244   ....               LDI     R21, HIGH((ee_ID + 2))
   \   00000246   ........           CALL    __eeget8_16
   \   0000024A   1710               CP      R17, R16
   \   0000024C   F009               BREQ    $+2+2
   \   0000024E   C0F4               RJMP    ??id_frame_9
   \   00000250   9110....           LDS     R17, (g_reception_buffer + 11)
   \   00000254   ....               LDI     R20, LOW((ee_ID + 3))
   \   00000256   ....               LDI     R21, HIGH((ee_ID + 3))
   \   00000258   ........           CALL    __eeget8_16
   \   0000025C   1710               CP      R17, R16
   \   0000025E   F009               BREQ    $+2+2
   \   00000260   C0EB               RJMP    ??id_frame_9
   \   00000262   9110....           LDS     R17, (g_reception_buffer + 12)
   \   00000266   ....               LDI     R20, LOW((ee_ID + 4))
   \   00000268   ....               LDI     R21, HIGH((ee_ID + 4))
   \   0000026A   ........           CALL    __eeget8_16
   \   0000026E   1710               CP      R17, R16
   \   00000270   F009               BREQ    $+2+2
   \   00000272   C0E2               RJMP    ??id_frame_9
   \   00000274   9110....           LDS     R17, (g_reception_buffer + 13)
   \   00000278   ....               LDI     R20, LOW((ee_ID + 5))
   \   0000027A   ....               LDI     R21, HIGH((ee_ID + 5))
   \   0000027C   ........           CALL    __eeget8_16
   \   00000280   1710               CP      R17, R16
   \   00000282   F009               BREQ    $+2+2
   \   00000284   C0D9               RJMP    ??id_frame_9
   \   00000286   9110....           LDS     R17, (g_reception_buffer + 14)
   \   0000028A   ....               LDI     R20, LOW((ee_ID + 6))
   \   0000028C   ....               LDI     R21, HIGH((ee_ID + 6))
   \   0000028E   ........           CALL    __eeget8_16
   \   00000292   1710               CP      R17, R16
   \   00000294   F009               BREQ    $+2+2
   \   00000296   C0D0               RJMP    ??id_frame_9
   \   00000298   9110....           LDS     R17, (g_reception_buffer + 15)
   \   0000029C   ....               LDI     R20, LOW((ee_ID + 7))
   \   0000029E   ....               LDI     R21, HIGH((ee_ID + 7))
   \   000002A0   ........           CALL    __eeget8_16
   \   000002A4   1710               CP      R17, R16
   \   000002A6   F009               BREQ    $+2+2
   \   000002A8   C0C7               RJMP    ??id_frame_9
    322          				{
    323          					// ID configuration
    324          					state.programming = 1;
   \   000002AA   ....               LDI     R30, LOW(state)
   \   000002AC   ....               LDI     R31, (state) >> 8
   \   000002AE   8100               LD      R16, Z
   \   000002B0   8111               LDD     R17, Z+1
   \   000002B2   6001               ORI     R16, 0x01
   \   000002B4   8311               STD     Z+1, R17
   \   000002B6   8300               ST      Z, R16
    325          					flags.png = 1;
   \   000002B8   ....               LDI     R30, LOW(flags)
   \   000002BA   ....               LDI     R31, (flags) >> 8
   \   000002BC   8100               LD      R16, Z
   \   000002BE   8111               LDD     R17, Z+1
   \   000002C0   6200               ORI     R16, 0x20
   \   000002C2   8311               STD     Z+1, R17
   \   000002C4   8300               ST      Z, R16
    326          					//send_frame_pp_ext_broad("D200013481040000",TRANS_DELAY);
    327                    state.main_state = STATE_PROGRAMMING;
   \   000002C6   E000               LDI     R16, 0
   \   000002C8   E210               LDI     R17, 32
   \   000002CA   9300....           STS     (state + 2), R16
   \   000002CE   9310....           STS     (state + 3), R17
    328          					//KO_SCENARIO_TRANS_DELAY = 80;
    329          					diagnostic_frame();
   \   000002D2   ....               RCALL   diagnostic_frame
    330          					//KO_SCENARIO_TRANS_DELAY = 80;
    331          					flags.AA_received = 0;
   \   000002D4   ....               LDI     R30, LOW(flags)
   \   000002D6   ....               LDI     R31, (flags) >> 8
   \   000002D8   8102               LDD     R16, Z+2
   \   000002DA   8113               LDD     R17, Z+3
   \   000002DC   7B1F               ANDI    R17, 0xBF
   \   000002DE   8313               STD     Z+3, R17
   \   000002E0   8302               STD     Z+2, R16
    332          					flags.parameter_setting_wrong = 0;
   \   000002E2   8104               LDD     R16, Z+4
   \   000002E4   8115               LDD     R17, Z+5
   \   000002E6   7F0D               ANDI    R16, 0xFD
   \   000002E8   8315               STD     Z+5, R17
   \   000002EA   8304               STD     Z+4, R16
    333          					flags.parameter_write_right = 0;
   \   000002EC   8102               LDD     R16, Z+2
   \   000002EE   8113               LDD     R17, Z+3
   \   000002F0   770F               ANDI    R16, 0x7F
   \   000002F2   8313               STD     Z+3, R17
   \   000002F4   8302               STD     Z+2, R16
   \   000002F6   C0A0               RJMP    ??id_frame_9
    334          					//png_dian
    335          				}
    336          			}
    337          		break;
    338          
    339          		case '7':
    340          			if(ee_product_information.ID_confed)
   \                     ??id_frame_4:
   \   000002F8   ....               LDI     R20, LOW((ee_product_information + 1))
   \   000002FA   ....               LDI     R21, HIGH((ee_product_information + 1))
   \   000002FC   ........           CALL    __eeget8_16
   \   00000300   2300               TST     R16
   \   00000302   F409               BRNE    $+2+2
   \   00000304   C099               RJMP    ??id_frame_9
    341          			{
    342          				if((g_reception_buffer[8] == ee_ID[0])
    343          					&& (g_reception_buffer[9] == ee_ID[1])
    344          					&& (g_reception_buffer[10] == ee_ID[2])
    345          					&& (g_reception_buffer[11] == ee_ID[3])
    346          				 	&& (g_reception_buffer[12] == ee_ID[4])
    347          				 	&& (g_reception_buffer[13] == ee_ID[5])
    348          				 	&& (g_reception_buffer[14] == ee_ID[6])
    349          				 	&& (g_reception_buffer[15] == ee_ID[7]))
   \   00000306   9110....           LDS     R17, (g_reception_buffer + 8)
   \   0000030A   ....               LDI     R20, LOW(ee_ID)
   \   0000030C   ....               LDI     R21, (ee_ID) >> 8
   \   0000030E   ........           CALL    __eeget8_16
   \   00000312   1710               CP      R17, R16
   \   00000314   F009               BREQ    $+2+2
   \   00000316   C090               RJMP    ??id_frame_9
   \   00000318   9110....           LDS     R17, (g_reception_buffer + 9)
   \   0000031C   ....               LDI     R20, LOW((ee_ID + 1))
   \   0000031E   ....               LDI     R21, HIGH((ee_ID + 1))
   \   00000320   ........           CALL    __eeget8_16
   \   00000324   1710               CP      R17, R16
   \   00000326   F009               BREQ    $+2+2
   \   00000328   C087               RJMP    ??id_frame_9
   \   0000032A   9110....           LDS     R17, (g_reception_buffer + 10)
   \   0000032E   ....               LDI     R20, LOW((ee_ID + 2))
   \   00000330   ....               LDI     R21, HIGH((ee_ID + 2))
   \   00000332   ........           CALL    __eeget8_16
   \   00000336   1710               CP      R17, R16
   \   00000338   F009               BREQ    $+2+2
   \   0000033A   C07E               RJMP    ??id_frame_9
   \   0000033C   9110....           LDS     R17, (g_reception_buffer + 11)
   \   00000340   ....               LDI     R20, LOW((ee_ID + 3))
   \   00000342   ....               LDI     R21, HIGH((ee_ID + 3))
   \   00000344   ........           CALL    __eeget8_16
   \   00000348   1710               CP      R17, R16
   \   0000034A   F009               BREQ    $+2+2
   \   0000034C   C075               RJMP    ??id_frame_9
   \   0000034E   9110....           LDS     R17, (g_reception_buffer + 12)
   \   00000352   ....               LDI     R20, LOW((ee_ID + 4))
   \   00000354   ....               LDI     R21, HIGH((ee_ID + 4))
   \   00000356   ........           CALL    __eeget8_16
   \   0000035A   1710               CP      R17, R16
   \   0000035C   F009               BREQ    $+2+2
   \   0000035E   C06C               RJMP    ??id_frame_9
   \   00000360   9110....           LDS     R17, (g_reception_buffer + 13)
   \   00000364   ....               LDI     R20, LOW((ee_ID + 5))
   \   00000366   ....               LDI     R21, HIGH((ee_ID + 5))
   \   00000368   ........           CALL    __eeget8_16
   \   0000036C   1710               CP      R17, R16
   \   0000036E   F009               BREQ    $+2+2
   \   00000370   C063               RJMP    ??id_frame_9
   \   00000372   9110....           LDS     R17, (g_reception_buffer + 14)
   \   00000376   ....               LDI     R20, LOW((ee_ID + 6))
   \   00000378   ....               LDI     R21, HIGH((ee_ID + 6))
   \   0000037A   ........           CALL    __eeget8_16
   \   0000037E   1710               CP      R17, R16
   \   00000380   F009               BREQ    $+2+2
   \   00000382   C05A               RJMP    ??id_frame_9
   \   00000384   9110....           LDS     R17, (g_reception_buffer + 15)
   \   00000388   ....               LDI     R20, LOW((ee_ID + 7))
   \   0000038A   ....               LDI     R21, HIGH((ee_ID + 7))
   \   0000038C   ........           CALL    __eeget8_16
   \   00000390   1710               CP      R17, R16
   \   00000392   F009               BREQ    $+2+2
   \   00000394   C051               RJMP    ??id_frame_9
    350          				{
    351          					// ID configuration
    352          					// only send diagnostic frame
    353          					//TRANS_DELAY = 60;							//too big cause PnG timing error, too small cause interface chip lost frames
    354                    state.main_state = STATE_TEST;
   \   00000396   E001               LDI     R16, 1
   \   00000398   E210               LDI     R17, 32
   \   0000039A   9300....           STS     (state + 2), R16
   \   0000039E   9310....           STS     (state + 3), R17
    355          					diagnostic_frame();			//modified 2009 1 9
   \   000003A2   ....               RCALL   diagnostic_frame
   \   000003A4   C049               RJMP    ??id_frame_9
    356          				}
    357          			}
    358              break;
    359          
    360          		case '8':
    361          			//ID request not conf
    362          			if(flags.id_ack == 0)
   \                     ??id_frame_5:
   \   000003A6   ....               LDI     R30, LOW(flags)
   \   000003A8   ....               LDI     R31, (flags) >> 8
   \   000003AA   8100               LD      R16, Z
   \   000003AC   8111               LDD     R17, Z+1
   \   000003AE   FD01               SBRC    R16, 1
   \   000003B0   C043               RJMP    ??id_frame_9
    363          			{
    364          				if(flags.id_request_enabled)
   \   000003B2   8100               LD      R16, Z
   \   000003B4   8111               LDD     R17, Z+1
   \   000003B6   FF02               SBRS    R16, 2
   \   000003B8   C03F               RJMP    ??id_frame_9
    365          				{
    366          					if(product_information.ID_confed)
   \   000003BA   ....               LDI     R30, LOW(product_information)
   \   000003BC   ....               LDI     R31, (product_information) >> 8
   \   000003BE   8101               LDD     R16, Z+1
   \   000003C0   2300               TST     R16
   \   000003C2   F1D1               BREQ    ??id_frame_9
    367          					{
    368          						if(product_information.conf_type == 3 )
   \   000003C4   8100               LD      R16, Z
   \   000003C6   3003               CPI     R16, 3
   \   000003C8   F5B9               BRNE    ??id_frame_9
    369          						{
    370          							asm("nop");
   \   000003CA   0000               nop
    371          							send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   000003CC   CE96               RJMP    ??id_frame_13
    372          						}
    373          					}
    374          				}
    375          			}
    376          		break;
    377          
    378          		case '9':
    379          			//ID request conf
    380          			if(flags.id_ack == 0)
   \                     ??id_frame_6:
   \   000003CE   ....               LDI     R30, LOW(flags)
   \   000003D0   ....               LDI     R31, (flags) >> 8
   \   000003D2   8100               LD      R16, Z
   \   000003D4   8111               LDD     R17, Z+1
   \   000003D6   FD01               SBRC    R16, 1
   \   000003D8   C02F               RJMP    ??id_frame_9
    381          			{
    382          				if(flags.id_request_enabled)
   \   000003DA   8100               LD      R16, Z
   \   000003DC   8111               LDD     R17, Z+1
   \   000003DE   FF02               SBRS    R16, 2
   \   000003E0   C02B               RJMP    ??id_frame_9
    383          				{
    384          					if(product_information.ID_confed)
   \   000003E2   ....               LDI     R30, LOW(product_information)
   \   000003E4   ....               LDI     R31, (product_information) >> 8
   \   000003E6   8101               LDD     R16, Z+1
   \   000003E8   2300               TST     R16
   \   000003EA   F131               BREQ    ??id_frame_9
    385          					{
    386          						if(product_information.conf_type == 0 || product_information.conf_type == 1 || product_information.conf_type == 2)
   \   000003EC   8100               LD      R16, Z
   \   000003EE   2300               TST     R16
   \   000003F0   F031               BREQ    ??id_frame_15
   \   000003F2   8100               LD      R16, Z
   \   000003F4   3001               CPI     R16, 1
   \   000003F6   F019               BREQ    ??id_frame_15
   \   000003F8   8100               LD      R16, Z
   \   000003FA   3002               CPI     R16, 2
   \   000003FC   F4E9               BRNE    ??id_frame_9
    387          						{
    388          							asm("nop");
   \                     ??id_frame_15:
   \   000003FE   0000               nop
    389          							send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   00000400   CE7C               RJMP    ??id_frame_13
    390          						}
    391          					}
    392          				}
    393          			}
    394          		break;
    395          
    396          		case 'A':
    397          			if(strcmp(&buffer_tx[8],&g_reception_buffer[8]) == 0)
   \                     ??id_frame_7:
   \   00000402   ....               LDI     R18, LOW((g_reception_buffer + 8))
   \   00000404   ....               LDI     R19, HIGH((g_reception_buffer + 8))
   \   00000406   018E               MOVW    R17:R16, R29:R28
   \   00000408   5F08               SUBI    R16, 248
   \   0000040A   4F1F               SBCI    R17, 255
   \   0000040C   ........           CALL    strcmp
   \   00000410   2B01               OR      R16, R17
   \   00000412   F491               BRNE    ??id_frame_9
    398          				flags.id_ack = 1;
   \   00000414   ....               LDI     R30, LOW(flags)
   \   00000416   ....               LDI     R31, (flags) >> 8
   \   00000418   8100               LD      R16, Z
   \   0000041A   8111               LDD     R17, Z+1
   \   0000041C   6002               ORI     R16, 0x02
   \   0000041E   C00A               RJMP    ??id_frame_12
    399          		break;
    400          
    401          		case 'B':
    402          		  flags.id_ack = 0;
   \                     ??id_frame_8:
   \   00000420   ....               LDI     R30, LOW(flags)
   \   00000422   ....               LDI     R31, (flags) >> 8
   \   00000424   8100               LD      R16, Z
   \   00000426   8111               LDD     R17, Z+1
   \   00000428   7F0D               ANDI    R16, 0xFD
   \   0000042A   8311               STD     Z+1, R17
   \   0000042C   8300               ST      Z, R16
    403          
    404          			flags.id_request_enabled = 1;
   \   0000042E   8100               LD      R16, Z
   \   00000430   8111               LDD     R17, Z+1
   \   00000432   6004               ORI     R16, 0x04
   \                     ??id_frame_12:
   \   00000434   8311               STD     Z+1, R17
   \   00000436   8300               ST      Z, R16
    405          			if( product_information.conf_type == 3 )
    406          			{
    407          				//send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
    408          			}
    409          		break;
    410          /*
    411          		case 'C':
    412          			if(g_asc_reception_buffer[4] == 0x00 && g_asc_reception_buffer[5] == 0x00 && g_asc_reception_buffer[6] == 0x00 && g_asc_reception_buffer[7] == 0x00)
    413          			{
    414          				product_information.ID_factory_assigned = 0; // for reassigned ID
    415          			}
    416          		break;
    417          */		
    418          		default: break;
    419          	}
    420          }
   \                     ??id_frame_9:
   \   00000438   9661               ADIW    R29:R28, 17
   \   0000043A   E0E4               LDI     R30, 4
   \   0000043C   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     ??ID_buffer:
   \   00000000                      DS8 9
   \   00000009                      REQUIRE `?<Initializer for ID_buffer>`
    421          

   \                                 In  segment CODE, align 2, keep-with-next
    422          void parameter_set(unsigned char data)
   \                     parameter_set:
    423          {
    424          	switch(data)
    425          	{
    426          		//case 0x80:
    427          			
    428          	}
    429          }
   \   00000000   9508               RET
    430          

   \                                 In  segment CODE, align 2, keep-with-next
    431          void diagnostic_frame(void)
   \                     diagnostic_frame:
    432          {
   \   00000000   9761               SBIW    R29:R28, 17
    433          	unsigned char i;
    434          	unsigned char buffer_tx[17] = "D000010400059876";
   \   00000002   019E               MOVW    R19:R18, R29:R28
   \   00000004   0189               MOVW    R17:R16, R19:R18
   \   00000006   ....               LDI     R30, LOW(`?<Constant "D000010400059876">`)
   \   00000008   ....               LDI     R31, (`?<Constant "D000010400059876">`) >> 8
   \   0000000A   E141               LDI     R20, 17
   \   0000000C   E050               LDI     R21, 0
   \   0000000E   ........           CALL    ?ML_FLASH_SRAM_16EC_16_L07
    435          
    436            __disable_interrupt();
   \   00000012   94F8               CLI
    437          	flags.diagnostic = 1;
   \   00000014   ....               LDI     R30, LOW(flags)
   \   00000016   ....               LDI     R31, (flags) >> 8
   \   00000018   8100               LD      R16, Z
   \   0000001A   8111               LDD     R17, Z+1
   \   0000001C   6100               ORI     R16, 0x10
   \   0000001E   8311               STD     Z+1, R17
   \   00000020   8300               ST      Z, R16
    438          	//configuration_answer_frame(0x80);
    439          	//send_frame_pp_ext_broad("D200013480052322",1);
    440          	configuration_answer_frame(0x80);
   \   00000022   E800               LDI     R16, 128
   \   00000024   ....               RCALL   configuration_answer_frame
    441          	configuration_answer_frame(0x81);
   \   00000026   E801               LDI     R16, 129
   \   00000028   ....               RCALL   configuration_answer_frame
    442          	configuration_answer_frame(0x83);
   \   0000002A   E803               LDI     R16, 131
   \   0000002C   ....               RCALL   configuration_answer_frame
    443          	configuration_answer_frame(0x86);
   \   0000002E   E806               LDI     R16, 134
   \   00000030   ....               RCALL   configuration_answer_frame
    444          	//id_frame('3',1);
    445            for(i=0;i<8;i++)
   \   00000032   E020               LDI     R18, 0
   \   00000034   C00C               RJMP    ??diagnostic_frame_0
    446            {
    447              buffer_tx[8+i] = ee_ID[i];
   \                     ??diagnostic_frame_1:
   \   00000036   E030               LDI     R19, 0
   \   00000038   ....               LDI     R20, LOW(ee_ID)
   \   0000003A   ....               LDI     R21, (ee_ID) >> 8
   \   0000003C   0F42               ADD     R20, R18
   \   0000003E   1F53               ADC     R21, R19
   \   00000040   ........           CALL    __eeget8_16
   \   00000044   01FE               MOVW    R31:R30, R29:R28
   \   00000046   0FE2               ADD     R30, R18
   \   00000048   1FF3               ADC     R31, R19
   \   0000004A   8700               STD     Z+8, R16
    448            }
   \   0000004C   9523               INC     R18
   \                     ??diagnostic_frame_0:
   \   0000004E   3028               CPI     R18, 8
   \   00000050   F390               BRCS    ??diagnostic_frame_1
    449          	send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   00000052   E322               LDI     R18, 50
   \   00000054   E030               LDI     R19, 0
   \   00000056   018E               MOVW    R17:R16, R29:R28
   \   00000058   ....               RCALL   send_frame_pp_ext_broad
    450            ko_answer_all();
   \   0000005A   ........           CALL    ko_answer_all
    451          	configuration_answer_frame(0x8C);
   \   0000005E   E80C               LDI     R16, 140
   \   00000060   ....               RCALL   configuration_answer_frame
    452          	frame_buffer_clear();
   \   00000062   ....               RCALL   frame_buffer_clear
    453            __enable_interrupt();
   \   00000064   9478               SEI
    454          	flags.diagnostic = 0;
   \   00000066   ....               LDI     R30, LOW(flags)
   \   00000068   ....               LDI     R31, (flags) >> 8
   \   0000006A   8100               LD      R16, Z
   \   0000006C   8111               LDD     R17, Z+1
   \   0000006E   7E0F               ANDI    R16, 0xEF
   \   00000070   8311               STD     Z+1, R17
   \   00000072   8300               ST      Z, R16
    455          }
   \   00000074   9661               ADIW    R29:R28, 17
   \   00000076   9508               RET
    456          
    457          //unsigned char data[7];

   \                                 In  segment CODE, align 2, keep-with-next
    458          void configuration_setting_frame(unsigned char value)
   \                     configuration_setting_frame:
    459          {
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   9761               SBIW    R29:R28, 17
    460          	unsigned char i;
    461          	unsigned char buffer_tx[17];			// 20090216
    462          	unsigned int write_parameter_resutl = 1;
    463            unsigned char flag_configurator;
    464          	//unsigned char *p_KO = &KO_conf;
    465          	//unsigned char *p_ee_KO = &ee_KO_conf;
    466          
    467          	switch (value)
   \   00000006   5800               SUBI    R16, 128
   \   00000008   F409               BRNE    $+2+2
   \   0000000A   C0B3               RJMP    ??configuration_setting_frame_0
   \   0000000C   950A               DEC     R16
   \   0000000E   F409               BRNE    $+2+2
   \   00000010   C0C6               RJMP    ??configuration_setting_frame_1
   \   00000012   950A               DEC     R16
   \   00000014   F409               BRNE    $+2+2
   \   00000016   C0D9               RJMP    ??configuration_setting_frame_2
   \   00000018   950A               DEC     R16
   \   0000001A   F409               BRNE    $+2+2
   \   0000001C   C0EE               RJMP    ??configuration_setting_frame_3
   \   0000001E   5008               SUBI    R16, 8
   \   00000020   F409               BRNE    $+2+2
   \   00000022   C133               RJMP    ??configuration_setting_frame_4
   \   00000024   950A               DEC     R16
   \   00000026   F409               BRNE    $+2+2
   \   00000028   C13C               RJMP    ??configuration_setting_frame_5
   \   0000002A   950A               DEC     R16
   \   0000002C   F409               BRNE    $+2+2
   \   0000002E   C13C               RJMP    ??configuration_setting_frame_6
   \   00000030   5808               SUBI    R16, 136
   \   00000032   F019               BREQ    ??configuration_setting_frame_7
   \   00000034   950A               DEC     R16
   \   00000036   F191               BREQ    ??configuration_setting_frame_8
   \   00000038   C1D6               RJMP    ??configuration_setting_frame_9
   \                     ??configuration_setting_frame_7:
   \   0000003A   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   0000003E   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   00000042   3004               CPI     R16, 4
   \   00000044   F008               BRCS    $+2+2
   \   00000046   C1CF               RJMP    ??configuration_setting_frame_9
   \   00000048   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   0000004C   9300....           STS     (KO_conf + 20), R16
    468          	{
    469          		case 0x15:
    470          			if(g_asc_reception_buffer[7] >= 0 && g_asc_reception_buffer[7] <= 3)
    471          			{
    472          				KO_conf.PirSens = g_asc_reception_buffer[7];
    473          				ee_KO_conf.PirSens = g_asc_reception_buffer[7];
   \   00000050   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   00000054   ....               LDI     R20, LOW((ee_KO_conf + 20))
   \   00000056   ....               LDI     R21, HIGH((ee_KO_conf + 20))
   \   00000058   ........           CALL    __eeput8_16
    474          				KO_conf.USSens = g_asc_reception_buffer[7];
   \   0000005C   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   00000060   9300....           STS     (KO_conf + 21), R16
    475          				ee_KO_conf.USSens = g_asc_reception_buffer[7];
   \   00000064   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   00000068   ....               LDI     R20, LOW((ee_KO_conf + 21))
   \   0000006A   ....               LDI     R21, HIGH((ee_KO_conf + 21))
   \   0000006C   ........           CALL    __eeput8_16
    476          				PIR_SENSE_SET();
   \   00000070   ........           CALL    PIR_SENSE_SET
    477          				US_SENSE_SET();
   \   00000074   ........           CALL    US_SENSE_SET
    478          				strncpy(buffer_tx,"D200013415000000",17);
   \   00000078   E141               LDI     R20, 17
   \   0000007A   E050               LDI     R21, 0
   \   0000007C   ....               LDI     R18, LOW(`?<Constant "D200013415000000">`)
   \   0000007E   ....               LDI     R19, (`?<Constant "D200013415000000">`) >> 8
   \   00000080   018E               MOVW    R17:R16, R29:R28
   \   00000082   ........           CALL    strncpy
    479          				buffer_tx[14] = g_reception_buffer[14];
   \   00000086   ....               LDI     R30, LOW(g_reception_buffer)
   \   00000088   ....               LDI     R31, (g_reception_buffer) >> 8
   \   0000008A   8506               LDD     R16, Z+14
   \   0000008C   870E               STD     Y+14, R16
    480          				buffer_tx[15] = g_reception_buffer[15];
   \   0000008E   8507               LDD     R16, Z+15
   \   00000090   870F               STD     Y+15, R16
    481          				send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \                     ??configuration_setting_frame_10:
   \   00000092   E322               LDI     R18, 50
   \   00000094   E030               LDI     R19, 0
   \   00000096   018E               MOVW    R17:R16, R29:R28
   \   00000098   ....               RCALL   send_frame_pp_ext_broad
   \   0000009A   C1A5               RJMP    ??configuration_setting_frame_9
    482          			}
   \                     ??configuration_setting_frame_8:
   \   0000009C   9100....           LDS     R16, (g_asc_reception_buffer + 6)
   \   000000A0   330C               CPI     R16, 60
   \   000000A2   F008               BRCS    $+2+2
   \   000000A4   C1A0               RJMP    ??configuration_setting_frame_9
   \   000000A6   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   000000AA   330C               CPI     R16, 60
   \   000000AC   F008               BRCS    $+2+2
   \   000000AE   C19B               RJMP    ??configuration_setting_frame_9
    483          		break;
    484          		
    485          		case 0x16:
    486          			//#define INDEX_HOURS 10
    487          			//#define INDEX_MINUTES 11
    488          			//#define INDEX_SECONDS 12
    489          			if(g_asc_reception_buffer[6] <= 0x3B && g_asc_reception_buffer[7] <= 0x3B)
    490          			{
    491          				write_KO(INDEX_HOURS,g_asc_reception_buffer[5]);
   \   000000B0   9110....           LDS     R17, (g_asc_reception_buffer + 5)
   \   000000B4   E00A               LDI     R16, 10
   \   000000B6   ........           CALL    write_KO
    492          				write_ee_KO(INDEX_HOURS,g_asc_reception_buffer[5]);
   \   000000BA   9110....           LDS     R17, (g_asc_reception_buffer + 5)
   \   000000BE   E00A               LDI     R16, 10
   \   000000C0   ........           CALL    write_ee_KO
    493          				
    494          				write_KO(INDEX_MINUTES,g_asc_reception_buffer[6]);
   \   000000C4   9110....           LDS     R17, (g_asc_reception_buffer + 6)
   \   000000C8   E00B               LDI     R16, 11
   \   000000CA   ........           CALL    write_KO
    495          				write_ee_KO(INDEX_MINUTES,g_asc_reception_buffer[6]);
   \   000000CE   9110....           LDS     R17, (g_asc_reception_buffer + 6)
   \   000000D2   E00B               LDI     R16, 11
   \   000000D4   ........           CALL    write_ee_KO
    496          				
    497          				write_KO(INDEX_SECONDS,g_asc_reception_buffer[7]);
   \   000000D8   9110....           LDS     R17, (g_asc_reception_buffer + 7)
   \   000000DC   E00C               LDI     R16, 12
   \   000000DE   ........           CALL    write_KO
    498          				write_ee_KO(INDEX_SECONDS,g_asc_reception_buffer[7]);
   \   000000E2   9110....           LDS     R17, (g_asc_reception_buffer + 7)
   \   000000E6   E00C               LDI     R16, 12
   \   000000E8   ........           CALL    write_ee_KO
    499          				
    500          				strncpy(buffer_tx,"D200013416000000",17);
   \   000000EC   E141               LDI     R20, 17
   \   000000EE   E050               LDI     R21, 0
   \   000000F0   ....               LDI     R18, LOW((`?<Constant "D200013415000000">` + 17))
   \   000000F2   ....               LDI     R19, HIGH((`?<Constant "D200013415000000">` + 17))
   \   000000F4   018E               MOVW    R17:R16, R29:R28
   \   000000F6   ........           CALL    strncpy
    501          				strncpy(&buffer_tx[10],&g_reception_buffer[10],7);
   \   000000FA   E047               LDI     R20, 7
   \   000000FC   E050               LDI     R21, 0
   \   000000FE   ....               LDI     R18, LOW((g_reception_buffer + 10))
   \   00000100   ....               LDI     R19, HIGH((g_reception_buffer + 10))
   \   00000102   018E               MOVW    R17:R16, R29:R28
   \   00000104   5F06               SUBI    R16, 246
   \   00000106   4F1F               SBCI    R17, 255
   \   00000108   ........           CALL    strncpy
   \   0000010C   9180....           LDS     R24, (KO_conf + 12)
   \   00000110   E090               LDI     R25, 0
   \   00000112   E0A0               LDI     R26, 0
   \   00000114   E0B0               LDI     R27, 0
   \   00000116   9140....           LDS     R20, (KO_conf + 11)
   \   0000011A   E050               LDI     R21, 0
   \   0000011C   E30C               LDI     R16, 60
   \   0000011E   E010               LDI     R17, 0
   \   00000120   ........           CALL    ?S_EC_MUL_L02
   \   00000124   2F21               MOV     R18, R17
   \   00000126   0F22               LSL     R18
   \   00000128   0B22               SBC     R18, R18
   \   0000012A   0F80               ADD     R24, R16
   \   0000012C   1F91               ADC     R25, R17
   \   0000012E   1FA2               ADC     R26, R18
   \   00000130   1FB2               ADC     R27, R18
   \   00000132   9100....           LDS     R16, (KO_conf + 10)
   \   00000136   E010               LDI     R17, 0
   \   00000138   E020               LDI     R18, 0
   \   0000013A   E030               LDI     R19, 0
   \   0000013C   E140               LDI     R20, 16
   \   0000013E   E05E               LDI     R21, 14
   \   00000140   E060               LDI     R22, 0
   \   00000142   E070               LDI     R23, 0
   \   00000144   ........           CALL    ?L_EC_MUL_L03
   \   00000148   0F80               ADD     R24, R16
   \   0000014A   1F91               ADC     R25, R17
   \   0000014C   1FA2               ADC     R26, R18
   \   0000014E   1FB3               ADC     R27, R19
   \   00000150   ....               LDI     R30, LOW(Delay_Time_set)
   \   00000152   ....               LDI     R31, (Delay_Time_set) >> 8
   \   00000154   8380               ST      Z, R24
   \   00000156   8391               STD     Z+1, R25
   \   00000158   83A2               STD     Z+2, R26
   \   0000015A   83B3               STD     Z+3, R27
    502          
    503          				Delay_Time_set =  KO_conf.Seconds + (unsigned long int)(KO_conf.Minutes*60) + (unsigned long int)(KO_conf.Hours)*3600;
    504          				Time_delay.timer_delay_set.count = Delay_Time_set;
   \   0000015C   8100               LD      R16, Z
   \   0000015E   8111               LDD     R17, Z+1
   \   00000160   8122               LDD     R18, Z+2
   \   00000162   8133               LDD     R19, Z+3
   \   00000164   ....               LDI     R30, LOW(Time_delay)
   \   00000166   ....               LDI     R31, (Time_delay) >> 8
   \   00000168   8F02               STD     Z+26, R16
   \   0000016A   8F13               STD     Z+27, R17
   \   0000016C   8F24               STD     Z+28, R18
   \   0000016E   8F35               STD     Z+29, R19
    505          				
    506          				send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   00000170   CF90               RJMP    ??configuration_setting_frame_10
    507          			}
    508          			
    509          		break;
    510          		
    511              case 0x80:
    512          			if(product_information.ID_factory_assigned == 0)
   \                     ??configuration_setting_frame_0:
   \   00000172   ....               LDI     R30, LOW(product_information)
   \   00000174   ....               LDI     R31, (product_information) >> 8
   \   00000176   8105               LDD     R16, Z+5
   \   00000178   FD00               SBRC    R16, 0
   \   0000017A   C135               RJMP    ??configuration_setting_frame_9
    513          			{
    514                	for(i=0;i<6;i++)
   \   0000017C   E020               LDI     R18, 0
   \                     ??configuration_setting_frame_11:
   \   0000017E   3026               CPI     R18, 6
   \   00000180   F008               BRCS    $+2+2
   \   00000182   C131               RJMP    ??configuration_setting_frame_9
    515                	{
    516                  	ee_parameter.device_modle[i] = g_reception_buffer[i+10];
   \   00000184   E030               LDI     R19, 0
   \   00000186   01F9               MOVW    R31:R30, R19:R18
   \   00000188   ....               SUBI    R30, LOW((-(g_reception_buffer) & 0xFFFF))
   \   0000018A   ....               SBCI    R31, (-(g_reception_buffer) & 0xFFFF) >> 8
   \   0000018C   8502               LDD     R16, Z+10
   \   0000018E   ....               LDI     R20, LOW(ee_parameter)
   \   00000190   ....               LDI     R21, (ee_parameter) >> 8
   \   00000192   0F42               ADD     R20, R18
   \   00000194   1F53               ADC     R21, R19
   \   00000196   ........           CALL    __eeput8_16
    517                	}
   \   0000019A   9523               INC     R18
   \   0000019C   CFF0               RJMP    ??configuration_setting_frame_11
    518          			}
    519              break;
    520          
    521          		case 0x81:
    522          			if(product_information.ID_factory_assigned == 0)
   \                     ??configuration_setting_frame_1:
   \   0000019E   ....               LDI     R30, LOW(product_information)
   \   000001A0   ....               LDI     R31, (product_information) >> 8
   \   000001A2   8105               LDD     R16, Z+5
   \   000001A4   FD00               SBRC    R16, 0
   \   000001A6   C11F               RJMP    ??configuration_setting_frame_9
    523          			{
    524          				for(i=0;i<6;i++)
   \   000001A8   E020               LDI     R18, 0
   \                     ??configuration_setting_frame_12:
   \   000001AA   3026               CPI     R18, 6
   \   000001AC   F008               BRCS    $+2+2
   \   000001AE   C11B               RJMP    ??configuration_setting_frame_9
    525                	{
    526          					ee_parameter.software_version[i] = g_reception_buffer[i+10];
   \   000001B0   E030               LDI     R19, 0
   \   000001B2   01F9               MOVW    R31:R30, R19:R18
   \   000001B4   ....               SUBI    R30, LOW((-(g_reception_buffer) & 0xFFFF))
   \   000001B6   ....               SBCI    R31, (-(g_reception_buffer) & 0xFFFF) >> 8
   \   000001B8   8502               LDD     R16, Z+10
   \   000001BA   ....               LDI     R20, LOW((ee_parameter + 6))
   \   000001BC   ....               LDI     R21, HIGH((ee_parameter + 6))
   \   000001BE   0F42               ADD     R20, R18
   \   000001C0   1F53               ADC     R21, R19
   \   000001C2   ........           CALL    __eeput8_16
    527                	}
   \   000001C6   9523               INC     R18
   \   000001C8   CFF0               RJMP    ??configuration_setting_frame_12
    528          			}
    529          		break;
    530          
    531          		case 0x82:
    532          			if(product_information.ID_factory_assigned == 0)
   \                     ??configuration_setting_frame_2:
   \   000001CA   ....               LDI     R30, LOW(product_information)
   \   000001CC   ....               LDI     R31, (product_information) >> 8
   \   000001CE   8105               LDD     R16, Z+5
   \   000001D0   FD00               SBRC    R16, 0
   \   000001D2   C109               RJMP    ??configuration_setting_frame_9
    533          			{
    534          				for(i=0;i<6;i++)
   \   000001D4   E020               LDI     R18, 0
   \   000001D6   C00C               RJMP    ??configuration_setting_frame_13
    535                	{
    536          					ee_parameter.hardware_version[i] = g_reception_buffer[i+10];
   \                     ??configuration_setting_frame_14:
   \   000001D8   E030               LDI     R19, 0
   \   000001DA   01F9               MOVW    R31:R30, R19:R18
   \   000001DC   ....               SUBI    R30, LOW((-(g_reception_buffer) & 0xFFFF))
   \   000001DE   ....               SBCI    R31, (-(g_reception_buffer) & 0xFFFF) >> 8
   \   000001E0   8502               LDD     R16, Z+10
   \   000001E2   ....               LDI     R20, LOW((ee_parameter + 12))
   \   000001E4   ....               LDI     R21, HIGH((ee_parameter + 12))
   \   000001E6   0F42               ADD     R20, R18
   \   000001E8   1F53               ADC     R21, R19
   \   000001EA   ........           CALL    __eeput8_16
    537                	}
   \   000001EE   9523               INC     R18
   \                     ??configuration_setting_frame_13:
   \   000001F0   3026               CPI     R18, 6
   \   000001F2   F390               BRCS    ??configuration_setting_frame_14
    538                	configuration_answer_frame(0x82);
   \   000001F4   E802               LDI     R16, 130
   \   000001F6   ....               RCALL   configuration_answer_frame
   \   000001F8   C0F6               RJMP    ??configuration_setting_frame_9
    539          			}
    540          		break;
    541          
    542          		case 0x83:
    543          			switch(state.main_state)
   \                     ??configuration_setting_frame_3:
   \   000001FA   9100....           LDS     R16, (state + 2)
   \   000001FE   9110....           LDS     R17, (state + 3)
   \   00000202   3000               CPI     R16, 0
   \   00000204   E221               LDI     R18, 33
   \   00000206   0712               CPC     R17, R18
   \   00000208   F009               BREQ    $+2+2
   \   0000020A   C0ED               RJMP    ??configuration_setting_frame_9
    544          			{		
    545          				case STATE_PROGRAMMING_DURING:
    546          					strncpy(&temp_variable.configurators,&g_reception_buffer[10],7);
   \   0000020C   E047               LDI     R20, 7
   \   0000020E   E050               LDI     R21, 0
   \   00000210   ....               LDI     R18, LOW((g_reception_buffer + 10))
   \   00000212   ....               LDI     R19, HIGH((g_reception_buffer + 10))
   \   00000214   ....               LDI     R16, LOW((temp_variable + 7))
   \   00000216   ....               LDI     R17, HIGH((temp_variable + 7))
   \   00000218   ........           CALL    strncpy
    547                    //temp_variable.configurators[0] =
    548          					flag_configurator = configuration_checking(&temp_variable.configurators);
    549          					if(flag_configurator)
   \   0000021C   ....               LDI     R16, LOW((temp_variable + 7))
   \   0000021E   ....               LDI     R17, HIGH((temp_variable + 7))
   \   00000220   ........           CALL    configuration_checking
   \   00000224   2300               TST     R16
   \   00000226   ....               LDI     R30, LOW(flags)
   \   00000228   ....               LDI     R31, (flags) >> 8
   \   0000022A   8100               LD      R16, Z
   \   0000022C   8111               LDD     R17, Z+1
   \   0000022E   F0E1               BREQ    ??configuration_setting_frame_15
    550          					{
    551          						flags.virtul_configuration_right = 1;
   \   00000230   6400               ORI     R16, 0x40
   \   00000232   8311               STD     Z+1, R17
   \   00000234   8300               ST      Z, R16
    552          						strncpy(buffer_tx,"D200013483000000",17);
   \   00000236   E141               LDI     R20, 17
   \   00000238   E050               LDI     R21, 0
   \   0000023A   ....               LDI     R18, LOW((`?<Constant "D200013415000000">` + 34))
   \   0000023C   ....               LDI     R19, HIGH((`?<Constant "D200013415000000">` + 34))
   \   0000023E   018E               MOVW    R17:R16, R29:R28
   \   00000240   ........           CALL    strncpy
    553          						strncpy(&buffer_tx[10],&temp_variable.configurators,7);
   \   00000244   E047               LDI     R20, 7
   \   00000246   E050               LDI     R21, 0
   \   00000248   ....               LDI     R18, LOW((temp_variable + 7))
   \   0000024A   ....               LDI     R19, HIGH((temp_variable + 7))
   \   0000024C   018E               MOVW    R17:R16, R29:R28
   \   0000024E   5F06               SUBI    R16, 246
   \   00000250   4F1F               SBCI    R17, 255
   \   00000252   ........           CALL    strncpy
    554          						send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   00000256   E322               LDI     R18, 50
   \   00000258   E030               LDI     R19, 0
   \   0000025A   018E               MOVW    R17:R16, R29:R28
   \   0000025C   ....               RCALL   send_frame_pp_ext_broad
    555          						strncpy(buffer_tx,"D20001348C0000AA",17);
   \   0000025E   E141               LDI     R20, 17
   \   00000260   E050               LDI     R21, 0
   \   00000262   ....               LDI     R18, LOW((`?<Constant "D200013415000000">` + 51))
   \   00000264   ....               LDI     R19, HIGH((`?<Constant "D200013415000000">` + 51))
   \   00000266   C007               RJMP    ??configuration_setting_frame_16
    556          						send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
    557          					}
    558          					else
    559          					{
    560          						flags.virtul_configuration_right = 0;
   \                     ??configuration_setting_frame_15:
   \   00000268   7B0F               ANDI    R16, 0xBF
   \   0000026A   8311               STD     Z+1, R17
   \   0000026C   8300               ST      Z, R16
    561          						strncpy(buffer_tx,"D2000134830000EE",17);
   \   0000026E   E141               LDI     R20, 17
   \   00000270   E050               LDI     R21, 0
   \   00000272   ....               LDI     R18, LOW((`?<Constant "D200013415000000">` + 68))
   \   00000274   ....               LDI     R19, HIGH((`?<Constant "D200013415000000">` + 68))
   \                     ??configuration_setting_frame_16:
   \   00000276   018E               MOVW    R17:R16, R29:R28
   \   00000278   ........           CALL    strncpy
    562          						send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   0000027C   E322               LDI     R18, 50
   \   0000027E   E030               LDI     R19, 0
   \   00000280   018E               MOVW    R17:R16, R29:R28
   \   00000282   ....               RCALL   send_frame_pp_ext_broad
    563          					}
    564                    manual_reception_buffer_clear();
   \   00000284   ........           CALL    manual_reception_buffer_clear
   \   00000288   C0AE               RJMP    ??configuration_setting_frame_9
    565          				break;
    566          
    567          				default:break;
    568          			}
    569          		break;
    570          		
    571          		case 0x8B:
    572                if(state.main_state == STATE_PROGRAMMING_DURING)
   \                     ??configuration_setting_frame_4:
   \   0000028A   9100....           LDS     R16, (state + 2)
   \   0000028E   9110....           LDS     R17, (state + 3)
   \   00000292   3000               CPI     R16, 0
   \   00000294   E221               LDI     R18, 33
   \   00000296   0712               CPC     R17, R18
   \   00000298   F009               BREQ    $+2+2
   \   0000029A   C0A5               RJMP    ??configuration_setting_frame_9
    573          				KO_setting_procedure();
   \   0000029C   ........           CALL    KO_setting_procedure
   \   000002A0   C0A2               RJMP    ??configuration_setting_frame_9
    574          		break;
    575          		
    576          		case 0x8C:
    577          			configuration_procedure();
   \                     ??configuration_setting_frame_5:
   \   000002A2   ........           CALL    configuration_procedure
   \   000002A6   C09F               RJMP    ??configuration_setting_frame_9
    578          		break;
    579          
    580          		case 0x8D:
    581          			if(state.main_state == STATE_PROGRAMMING_DURING)
   \                     ??configuration_setting_frame_6:
   \   000002A8   9100....           LDS     R16, (state + 2)
   \   000002AC   9110....           LDS     R17, (state + 3)
   \   000002B0   3000               CPI     R16, 0
   \   000002B2   E221               LDI     R18, 33
   \   000002B4   0712               CPC     R17, R18
   \   000002B6   F009               BREQ    $+2+2
   \   000002B8   C096               RJMP    ??configuration_setting_frame_9
   \   000002BA   ....               LDI     R30, LOW(g_asc_reception_buffer)
   \   000002BC   ....               LDI     R31, (g_asc_reception_buffer) >> 8
   \   000002BE   8107               LDD     R16, Z+7
   \   000002C0   FD07               SBRC    R16, 7
   \   000002C2   C047               RJMP    ??configuration_setting_frame_17
    582          			{
    583                	if(GetBit(g_asc_reception_buffer[7],7) == 0)
    584                	{
    585                	  //parameter writing
    586          					if(g_asc_reception_buffer[CHANNEL] == 0x01)
   \   000002C4   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   000002C8   3001               CPI     R16, 1
   \   000002CA   F4F9               BRNE    ??configuration_setting_frame_18
    587          					{
    588          						if(product_information.conf_type == NONE_CONFED)
   \   000002CC   9100....           LDS     R16, product_information
   \   000002D0   3003               CPI     R16, 3
   \   000002D2   F411               BRNE    ??configuration_setting_frame_19
    589                	  	{
    590                	    	KO_answer_frame();
   \                     ??configuration_setting_frame_20:
   \   000002D4   ....               RCALL   KO_answer_frame
   \   000002D6   C087               RJMP    ??configuration_setting_frame_9
    591                	  	}
    592          						else
    593          						{
    594          							write_parameter_resutl = write_KO(g_asc_reception_buffer[6],g_asc_reception_buffer[5]);
   \                     ??configuration_setting_frame_19:
   \   000002D8   9110....           LDS     R17, (g_asc_reception_buffer + 5)
   \   000002DC   9100....           LDS     R16, (g_asc_reception_buffer + 6)
   \   000002E0   ........           CALL    write_KO
    595          							if(write_parameter_resutl == OK)
   \   000002E4   2F20               MOV     R18, R16
   \   000002E6   2B21               OR      R18, R17
   \   000002E8   ....               LDI     R30, LOW(flags)
   \   000002EA   ....               LDI     R31, (flags) >> 8
   \   000002EC   F431               BRNE    ??configuration_setting_frame_21
    596          							{
    597          								flags.parameter_write_right = 1;
   \   000002EE   8122               LDD     R18, Z+2
   \   000002F0   8133               LDD     R19, Z+3
   \   000002F2   6820               ORI     R18, 0x80
   \   000002F4   8333               STD     Z+3, R19
   \   000002F6   8322               STD     Z+2, R18
   \   000002F8   C005               RJMP    ??configuration_setting_frame_22
    598          							}
    599          							else
    600          							{
    601          								flags.parameter_setting_wrong = 1;
   \                     ??configuration_setting_frame_21:
   \   000002FA   8124               LDD     R18, Z+4
   \   000002FC   8135               LDD     R19, Z+5
   \   000002FE   6022               ORI     R18, 0x02
   \   00000300   8335               STD     Z+5, R19
   \   00000302   8324               STD     Z+4, R18
    602          							}
    603          							parameter_setting_error_answer(write_parameter_resutl);
   \                     ??configuration_setting_frame_22:
   \   00000304   ........           CALL    parameter_setting_error_answer
   \   00000308   C06E               RJMP    ??configuration_setting_frame_9
    604          						}
    605          					}
    606          					else if(g_asc_reception_buffer[CHANNEL] >= 0x02 && g_asc_reception_buffer[CHANNEL] <= 0x11)
   \                     ??configuration_setting_frame_18:
   \   0000030A   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   0000030E   3002               CPI     R16, 2
   \   00000310   F0E8               BRCS    ??configuration_setting_frame_23
   \   00000312   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   00000316   3102               CPI     R16, 18
   \   00000318   F4C8               BRCC    ??configuration_setting_frame_23
    607          					{
    608          						if(ee_scenario[g_asc_reception_buffer[CHANNEL] - 2].confed == 0 && flags.scenario_scs_confed == 0)
   \   0000031A   ....               LDI     R18, LOW((ee_scenario - 8))
   \   0000031C   ....               LDI     R19, HIGH((ee_scenario - 8))
   \   0000031E   9140....           LDS     R20, (g_asc_reception_buffer + 7)
   \   00000322   E050               LDI     R21, 0
   \   00000324   E007               LDI     R16, 7
   \   00000326   E010               LDI     R17, 0
   \   00000328   ........           CALL    ?S_EC_MUL_L02
   \   0000032C   0F20               ADD     R18, R16
   \   0000032E   1F31               ADC     R19, R17
   \   00000330   01A9               MOVW    R21:R20, R19:R18
   \   00000332   ........           CALL    __eeget8_16
   \   00000336   2300               TST     R16
   \   00000338   F431               BRNE    ??configuration_setting_frame_24
   \   0000033A   ....               LDI     R30, LOW(flags)
   \   0000033C   ....               LDI     R31, (flags) >> 8
   \   0000033E   8102               LDD     R16, Z+2
   \   00000340   8113               LDD     R17, Z+3
   \   00000342   FF06               SBRS    R16, 6
   \   00000344   CFC7               RJMP    ??configuration_setting_frame_20
    609          						{
    610          							KO_answer_frame();
    611          						}
    612          						else
    613          						{
    614          							write_parameter_resutl = write_parameter_scenario();
   \                     ??configuration_setting_frame_24:
   \   00000346   ........           CALL    write_parameter_scenario
    615          							parameter_setting_error_answer(write_parameter_resutl);
   \   0000034A   CFDC               RJMP    ??configuration_setting_frame_22
    616          						}
    617          					}
    618                	  else
    619                	  {
    620                	    parameter_setting_error_answer(write_parameter_resutl);
   \                     ??configuration_setting_frame_23:
   \   0000034C   E001               LDI     R16, 1
   \   0000034E   E010               LDI     R17, 0
   \   00000350   CFD9               RJMP    ??configuration_setting_frame_22
    621                	  }
    622          				}
    623                	else
    624                	{
    625                	  //address writing
    626                	  if(g_asc_reception_buffer[CHANNEL] == 0x81)
   \                     ??configuration_setting_frame_17:
   \   00000352   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   00000356   3801               CPI     R16, 129
   \   00000358   F009               BREQ    $+2+2
   \   0000035A   C043               RJMP    ??configuration_setting_frame_25
   \   0000035C   9100....           LDS     R16, product_information
   \   00000360   3003               CPI     R16, 3
   \   00000362   F1F9               BREQ    ??configuration_setting_frame_25
    627                	  {
    628                	    if(product_information.conf_type != NONE_CONFED)
    629                	    {
    630          							if( flags_muti_step.cen_system_step == 1 || product_information.cen_system )
   \   00000364   9100....           LDS     R16, flags_muti_step
   \   00000368   3001               CPI     R16, 1
   \   0000036A   F021               BREQ    ??configuration_setting_frame_26
   \   0000036C   9100....           LDS     R16, (product_information + 4)
   \   00000370   2300               TST     R16
   \   00000372   F1B9               BREQ    ??configuration_setting_frame_25
    631          							{
    632                	      	if(g_asc_reception_buffer[BYTE1] == 0x10)
   \                     ??configuration_setting_frame_26:
   \   00000374   9100....           LDS     R16, (g_asc_reception_buffer + 5)
   \   00000378   3100               CPI     R16, 16
   \   0000037A   F5A9               BRNE    ??configuration_setting_frame_9
    633                	      	{
    634                	        	if(g_asc_reception_buffer[BYTE2] >= 1 && g_asc_reception_buffer[BYTE2] <= 0xAF)
   \   0000037C   9100....           LDS     R16, (g_asc_reception_buffer + 6)
   \   00000380   2300               TST     R16
   \   00000382   F129               BREQ    ??configuration_setting_frame_27
   \   00000384   9100....           LDS     R16, (g_asc_reception_buffer + 6)
   \   00000388   3B00               CPI     R16, 176
   \   0000038A   F508               BRCC    ??configuration_setting_frame_27
   \   0000038C   ....               LDI     R16, LOW(temp_product_information)
   \   0000038E   ....               LDI     R17, (temp_product_information) >> 8
   \   00000390   ....               LDI     R30, LOW(product_information)
   \   00000392   ....               LDI     R31, (product_information) >> 8
   \   00000394   E047               LDI     R20, 7
   \   00000396   E050               LDI     R21, 0
   \   00000398   ........           CALL    ?ML_SRAM_SRAM_16_L07
    635                	        	{
    636                	          	temp_product_information = product_information;
    637                	          	temp_product_information.conf_type = ADVANCED;
   \   0000039C   E002               LDI     R16, 2
   \   0000039E   9300....           STS     temp_product_information, R16
    638                	          	temp_product_information.cen_system = 1;
   \   000003A2   E001               LDI     R16, 1
   \   000003A4   9300....           STS     (temp_product_information + 4), R16
    639                	          	temp_product_information.local_A = g_reception_buffer[12];
   \   000003A8   ....               LDI     R30, LOW(g_reception_buffer)
   \   000003AA   ....               LDI     R31, (g_reception_buffer) >> 8
   \   000003AC   8504               LDD     R16, Z+12
   \   000003AE   9300....           STS     (temp_product_information + 2), R16
    640                	          	temp_product_information.local_PL = g_reception_buffer[13];
   \   000003B2   8505               LDD     R16, Z+13
   \   000003B4   9300....           STS     (temp_product_information + 3), R16
    641                	          	flags_muti_step.cen_system_step = 2;
   \   000003B8   E002               LDI     R16, 2
   \   000003BA   9300....           STS     flags_muti_step, R16
    642                	          	flags.KO_conf_right = 1;
   \   000003BE   ....               LDI     R30, LOW(flags)
   \   000003C0   ....               LDI     R31, (flags) >> 8
   \   000003C2   8102               LDD     R16, Z+2
   \   000003C4   8113               LDD     R17, Z+3
   \   000003C6   6002               ORI     R16, 0x02
   \   000003C8   8313               STD     Z+3, R17
   \   000003CA   8302               STD     Z+2, R16
   \   000003CC   C00C               RJMP    ??configuration_setting_frame_9
    643                	        	}
    644                	        	else
    645                	        	{
    646                	          	address_setting_error_frame();
   \                     ??configuration_setting_frame_27:
   \   000003CE   ........           CALL    address_setting_error_frame
    647                	          	if(flags_muti_step.cen_system_step == 1)
   \   000003D2   9100....           LDS     R16, flags_muti_step
   \   000003D6   3001               CPI     R16, 1
   \   000003D8   F431               BRNE    ??configuration_setting_frame_9
    648                	            	flags_muti_step.cen_system_step = CONF_WRONG;
   \   000003DA   E004               LDI     R16, 4
   \   000003DC   9300....           STS     flags_muti_step, R16
   \   000003E0   C002               RJMP    ??configuration_setting_frame_9
    649                	        	}
    650                	      	}
    651                	    	}
    652          							else
    653          							{
    654          								address_setting_error_frame();
   \                     ??configuration_setting_frame_25:
   \   000003E2   ........           CALL    address_setting_error_frame
    655          							}
    656          						}
    657                	    else if(product_information.conf_type == NONE_CONFED)
    658                	    {
    659                	      address_setting_error_frame();
    660                	    }
    661                	  }
    662                	  else
    663                	  {
    664                	    address_setting_error_frame();
    665                	  }
    666                	
    667                	}
    668          			}
    669          		break;
    670          
    671          		default:break;
    672          	}
    673          }
   \                     ??configuration_setting_frame_9:
   \   000003E6   9661               ADIW    R29:R28, 17
   \   000003E8   E0E4               LDI     R30, 4
   \   000003EA   ........           JMP     ?EPILOGUE_B4_L09
    674          

   \                                 In  segment CODE, align 2, keep-with-next
    675          void configuration_answer_frame(unsigned char value)
   \                     configuration_answer_frame:
    676          {
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   976C               SBIW    R29:R28, 28
   \   00000006   2F80               MOV     R24, R16
    677          	unsigned char buffer_tx[17] = "D200013480000000";
   \   00000008   019E               MOVW    R19:R18, R29:R28
   \   0000000A   5F2D               SUBI    R18, 253
   \   0000000C   4F3F               SBCI    R19, 255
   \   0000000E   0189               MOVW    R17:R16, R19:R18
   \   00000010   ....               LDI     R30, LOW(`?<Constant "D200013480000000">`)
   \   00000012   ....               LDI     R31, (`?<Constant "D200013480000000">`) >> 8
   \   00000014   E141               LDI     R20, 17
   \   00000016   E050               LDI     R21, 0
   \   00000018   ........           CALL    ?ML_FLASH_SRAM_16EC_16_L07
    678          	unsigned char asc_buffer_tx[8];
    679          
    680          	unsigned char i;
    681          	unsigned char buffer[3];
    682          	
    683          	for(i=0;i<8;i++)
   \   0000001C   E0A0               LDI     R26, 0
   \   0000001E   C016               RJMP    ??configuration_answer_frame_0
    684          	{
    685          		buffer[0] = buffer_tx[i * 2];
   \                     ??configuration_answer_frame_1:
   \   00000020   01FE               MOVW    R31:R30, R29:R28
   \   00000022   9633               ADIW    R31:R30, 3
   \   00000024   E002               LDI     R16, 2
   \   00000026   9FA0               MUL     R26, R16
   \   00000028   0DE0               ADD     R30, R0
   \   0000002A   1DF1               ADC     R31, R1
   \   0000002C   8120               LD      R18, Z
   \   0000002E   8328               ST      Y, R18
    686          		buffer[1] = buffer_tx[i * 2 + 1];
   \   00000030   8101               LDD     R16, Z+1
   \   00000032   8309               STD     Y+1, R16
    687          		buffer[2] = 0;
   \   00000034   E000               LDI     R16, 0
   \   00000036   830A               STD     Y+2, R16
    688          		asc_buffer_tx[i] = StrToChar(buffer);
   \   00000038   018E               MOVW    R17:R16, R29:R28
   \   0000003A   ........           CALL    StrToChar
   \   0000003E   01FE               MOVW    R31:R30, R29:R28
   \   00000040   9674               ADIW    R31:R30, 20
   \   00000042   E0B0               LDI     R27, 0
   \   00000044   0FEA               ADD     R30, R26
   \   00000046   1FFB               ADC     R31, R27
   \   00000048   8300               ST      Z, R16
    689          	}
   \   0000004A   95A3               INC     R26
   \                     ??configuration_answer_frame_0:
   \   0000004C   30A8               CPI     R26, 8
   \   0000004E   F340               BRCS    ??configuration_answer_frame_1
    690          
    691          	if(value == 0x10 && GetBit(g_asc_reception_buffer[5],4) == 0)
   \   00000050   3180               CPI     R24, 16
   \   00000052   F5C9               BRNE    ??configuration_answer_frame_2
   \   00000054   ....               LDI     R30, LOW(g_asc_reception_buffer)
   \   00000056   ....               LDI     R31, (g_asc_reception_buffer) >> 8
   \   00000058   8105               LDD     R16, Z+5
   \   0000005A   FD04               SBRC    R16, 4
   \   0000005C   C034               RJMP    ??configuration_answer_frame_2
    692          	{
    693          		strncpy(buffer_tx,"D200013410100000",17);
   \   0000005E   E141               LDI     R20, 17
   \   00000060   E050               LDI     R21, 0
   \   00000062   ....               LDI     R18, LOW((`?<Constant "D200013415000000">` + 85))
   \   00000064   ....               LDI     R19, HIGH((`?<Constant "D200013415000000">` + 85))
   \   00000066   018E               MOVW    R17:R16, R29:R28
   \   00000068   5F0D               SUBI    R16, 253
   \   0000006A   4F1F               SBCI    R17, 255
   \   0000006C   ........           CALL    strncpy
   \   00000070   9100....           LDS     R16, (DLL + 18)
   \   00000074   9110....           LDS     R17, (DLL + 19)
   \   00000078   9300....           STS     (KO_conf + 35), R16
    694          		KO_conf.DayLightLevLux[0] = DLL.calc_level&0x00FF;		//  low byte
    695          		KO_conf.DayLightLevLux[1] = DLL.calc_level>>8;				//  higt byte
   \   0000007C   9100....           LDS     R16, (DLL + 18)
   \   00000080   9110....           LDS     R17, (DLL + 19)
   \   00000084   2F01               MOV     R16, R17
   \   00000086   9300....           STS     (KO_conf + 36), R16
    696          		CharToStr(DLL.calc_level&0x00FF,buffer);
   \   0000008A   019E               MOVW    R19:R18, R29:R28
   \   0000008C   9100....           LDS     R16, (DLL + 18)
   \   00000090   9110....           LDS     R17, (DLL + 19)
   \   00000094   ........           CALL    CharToStr
    697          		buffer_tx[14] = buffer[0];
   \   00000098   8108               LD      R16, Y
   \   0000009A   8B09               STD     Y+17, R16
    698          		buffer_tx[15] = buffer[1];
   \   0000009C   8109               LDD     R16, Y+1
   \   0000009E   8B0A               STD     Y+18, R16
    699          		CharToStr(DLL.calc_level>>8,buffer);
   \   000000A0   019E               MOVW    R19:R18, R29:R28
   \   000000A2   9100....           LDS     R16, (DLL + 18)
   \   000000A6   9110....           LDS     R17, (DLL + 19)
   \   000000AA   2F01               MOV     R16, R17
   \   000000AC   ........           CALL    CharToStr
    700          		buffer_tx[12] = buffer[0];
   \   000000B0   8108               LD      R16, Y
   \   000000B2   870F               STD     Y+15, R16
    701          		buffer_tx[13] = buffer[1];
   \   000000B4   8109               LDD     R16, Y+1
   \   000000B6   8B08               STD     Y+16, R16
    702          		send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \                     ??configuration_answer_frame_3:
   \   000000B8   E322               LDI     R18, 50
   \   000000BA   E030               LDI     R19, 0
   \   000000BC   018E               MOVW    R17:R16, R29:R28
   \   000000BE   5F0D               SUBI    R16, 253
   \   000000C0   4F1F               SBCI    R17, 255
   \   000000C2   ....               RCALL   send_frame_pp_ext_broad
   \   000000C4   C13C               RJMP    ??configuration_answer_frame_4
    703          	}
    704          	else if(value == 0x15)
   \                     ??configuration_answer_frame_2:
   \   000000C6   3185               CPI     R24, 21
   \   000000C8   F499               BRNE    ??configuration_answer_frame_5
    705          	{
    706          		strncpy(buffer_tx,"D200013415000000",17);
   \   000000CA   E141               LDI     R20, 17
   \   000000CC   E050               LDI     R21, 0
   \   000000CE   ....               LDI     R18, LOW(`?<Constant "D200013415000000">`)
   \   000000D0   ....               LDI     R19, (`?<Constant "D200013415000000">`) >> 8
   \   000000D2   018E               MOVW    R17:R16, R29:R28
   \   000000D4   5F0D               SUBI    R16, 253
   \   000000D6   4F1F               SBCI    R17, 255
   \   000000D8   ........           CALL    strncpy
    707          		CharToStr(KO_conf.PirSens,buffer);
   \   000000DC   019E               MOVW    R19:R18, R29:R28
   \   000000DE   9100....           LDS     R16, (KO_conf + 20)
   \                     ??configuration_answer_frame_6:
   \   000000E2   ........           CALL    CharToStr
    708          		buffer_tx[14] = buffer[0];
   \   000000E6   8108               LD      R16, Y
   \   000000E8   8B09               STD     Y+17, R16
    709          		buffer_tx[15] = buffer[1];
   \   000000EA   8109               LDD     R16, Y+1
   \                     ??configuration_answer_frame_7:
   \   000000EC   8B0A               STD     Y+18, R16
    710          		send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   000000EE   CFE4               RJMP    ??configuration_answer_frame_3
    711          	}
    712          	else if(value == 0x16)
   \                     ??configuration_answer_frame_5:
   \   000000F0   3186               CPI     R24, 22
   \   000000F2   F4F9               BRNE    ??configuration_answer_frame_8
    713          	{
    714          		strncpy(buffer_tx,"D200013416000000",17);
   \   000000F4   E141               LDI     R20, 17
   \   000000F6   E050               LDI     R21, 0
   \   000000F8   ....               LDI     R18, LOW((`?<Constant "D200013415000000">` + 17))
   \   000000FA   ....               LDI     R19, HIGH((`?<Constant "D200013415000000">` + 17))
   \   000000FC   018E               MOVW    R17:R16, R29:R28
   \   000000FE   5F0D               SUBI    R16, 253
   \   00000100   4F1F               SBCI    R17, 255
   \   00000102   ........           CALL    strncpy
   \   00000106   019E               MOVW    R19:R18, R29:R28
   \   00000108   9100....           LDS     R16, (KO_conf + 10)
    715          		CharToStr(KO_conf.Hours,buffer);
   \   0000010C   ........           CALL    CharToStr
    716          		buffer_tx[10] = buffer[0];
   \   00000110   8108               LD      R16, Y
   \   00000112   870D               STD     Y+13, R16
    717          		buffer_tx[11] = buffer[1];
   \   00000114   8109               LDD     R16, Y+1
   \   00000116   870E               STD     Y+14, R16
    718          		CharToStr(KO_conf.Minutes,buffer);
   \   00000118   019E               MOVW    R19:R18, R29:R28
   \   0000011A   9100....           LDS     R16, (KO_conf + 11)
   \   0000011E   ........           CALL    CharToStr
    719          		buffer_tx[12] = buffer[0];
   \   00000122   8108               LD      R16, Y
   \   00000124   870F               STD     Y+15, R16
    720          		buffer_tx[13] = buffer[1];
   \   00000126   8109               LDD     R16, Y+1
   \   00000128   8B08               STD     Y+16, R16
    721          		CharToStr(KO_conf.Seconds,buffer);
   \   0000012A   019E               MOVW    R19:R18, R29:R28
   \   0000012C   9100....           LDS     R16, (KO_conf + 12)
   \   00000130   CFD8               RJMP    ??configuration_answer_frame_6
    722          		buffer_tx[14] = buffer[0];
    723          		buffer_tx[15] = buffer[1];
    724          		send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
    725          	}
    726          	else if(value == 0x80)
   \                     ??configuration_answer_frame_8:
   \   00000132   3880               CPI     R24, 128
   \   00000134   F4A1               BRNE    ??configuration_answer_frame_9
    727          	{
    728          			buffer_tx[9] = '0';
   \   00000136   E300               LDI     R16, 48
   \   00000138   870C               STD     Y+12, R16
    729          			for(i=0;i<6;i++)
   \   0000013A   E0A0               LDI     R26, 0
   \   0000013C   C00D               RJMP    ??configuration_answer_frame_10
    730                {
    731                  buffer_tx[10+i] = ee_parameter.device_modle[i];
   \                     ??configuration_answer_frame_11:
   \   0000013E   E0B0               LDI     R27, 0
   \   00000140   ....               LDI     R20, LOW(ee_parameter)
   \   00000142   ....               LDI     R21, (ee_parameter) >> 8
   \   00000144   0F4A               ADD     R20, R26
   \   00000146   1F5B               ADC     R21, R27
   \   00000148   ........           CALL    __eeget8_16
   \   0000014C   01FE               MOVW    R31:R30, R29:R28
   \   0000014E   9633               ADIW    R31:R30, 3
   \   00000150   0FEA               ADD     R30, R26
   \   00000152   1FFB               ADC     R31, R27
   \   00000154   8702               STD     Z+10, R16
    732                }
   \   00000156   95A3               INC     R26
   \                     ??configuration_answer_frame_10:
   \   00000158   30A6               CPI     R26, 6
   \   0000015A   F388               BRCS    ??configuration_answer_frame_11
    733          			send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \                     ??configuration_answer_frame_12:
   \   0000015C   CFAD               RJMP    ??configuration_answer_frame_3
    734          	}
    735          	else if(value == 0x81)
   \                     ??configuration_answer_frame_9:
   \   0000015E   3881               CPI     R24, 129
   \   00000160   F499               BRNE    ??configuration_answer_frame_13
    736          	{
    737          			buffer_tx[9] = '1';
   \   00000162   E301               LDI     R16, 49
   \   00000164   870C               STD     Y+12, R16
    738          			for(i=0;i<6;i++)
   \   00000166   E0A0               LDI     R26, 0
   \                     ??configuration_answer_frame_14:
   \   00000168   30A6               CPI     R26, 6
   \   0000016A   F7C0               BRCC    ??configuration_answer_frame_12
    739                {
    740          				buffer_tx[10+i] = ee_parameter.software_version[i];
   \   0000016C   ....               LDI     R20, LOW((ee_parameter + 6))
   \   0000016E   ....               LDI     R21, HIGH((ee_parameter + 6))
   \   00000170   E0B0               LDI     R27, 0
   \   00000172   0F4A               ADD     R20, R26
   \   00000174   1F5B               ADC     R21, R27
   \   00000176   ........           CALL    __eeget8_16
   \   0000017A   01FE               MOVW    R31:R30, R29:R28
   \   0000017C   9633               ADIW    R31:R30, 3
   \   0000017E   0FEA               ADD     R30, R26
   \   00000180   1FFB               ADC     R31, R27
   \   00000182   8702               STD     Z+10, R16
    741                }
   \   00000184   95A3               INC     R26
   \   00000186   CFF0               RJMP    ??configuration_answer_frame_14
    742          			send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
    743          	}
    744          	else if(value == 0x82)
   \                     ??configuration_answer_frame_13:
   \   00000188   3882               CPI     R24, 130
   \   0000018A   F499               BRNE    ??configuration_answer_frame_15
    745          	{
    746          			buffer_tx[9] = '2';
   \   0000018C   E302               LDI     R16, 50
   \   0000018E   870C               STD     Y+12, R16
    747          			for(i=0;i<6;i++)
   \   00000190   E0A0               LDI     R26, 0
   \                     ??configuration_answer_frame_16:
   \   00000192   30A6               CPI     R26, 6
   \   00000194   F718               BRCC    ??configuration_answer_frame_12
    748                {
    749          				buffer_tx[10+i] = ee_parameter.hardware_version[i];
   \   00000196   ....               LDI     R20, LOW((ee_parameter + 12))
   \   00000198   ....               LDI     R21, HIGH((ee_parameter + 12))
   \   0000019A   E0B0               LDI     R27, 0
   \   0000019C   0F4A               ADD     R20, R26
   \   0000019E   1F5B               ADC     R21, R27
   \   000001A0   ........           CALL    __eeget8_16
   \   000001A4   01FE               MOVW    R31:R30, R29:R28
   \   000001A6   9633               ADIW    R31:R30, 3
   \   000001A8   0FEA               ADD     R30, R26
   \   000001AA   1FFB               ADC     R31, R27
   \   000001AC   8702               STD     Z+10, R16
    750                }
   \   000001AE   95A3               INC     R26
   \   000001B0   CFF0               RJMP    ??configuration_answer_frame_16
    751          			send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
    752          	}
    753          	else if(value == 0x83)
   \                     ??configuration_answer_frame_15:
   \   000001B2   3883               CPI     R24, 131
   \   000001B4   F481               BRNE    ??configuration_answer_frame_17
    754          	{
    755                buffer_tx[9] = '3';
   \   000001B6   E303               LDI     R16, 51
   \   000001B8   870C               STD     Y+12, R16
    756          			buffer_tx[10] = Configurators.A;
   \   000001BA   ....               LDI     R30, LOW(Configurators)
   \   000001BC   ....               LDI     R31, (Configurators) >> 8
   \   000001BE   8101               LDD     R16, Z+1
   \   000001C0   870D               STD     Y+13, R16
    757          			buffer_tx[11] = Configurators.PL;
   \   000001C2   8102               LDD     R16, Z+2
   \   000001C4   870E               STD     Y+14, R16
    758          			buffer_tx[12] = Configurators.M;
   \   000001C6   8103               LDD     R16, Z+3
   \   000001C8   870F               STD     Y+15, R16
    759          			buffer_tx[13] = Configurators.S;
   \   000001CA   8104               LDD     R16, Z+4
   \   000001CC   8B08               STD     Y+16, R16
    760          			buffer_tx[14] = Configurators.T;
   \   000001CE   8105               LDD     R16, Z+5
   \   000001D0   8B09               STD     Y+17, R16
    761          			buffer_tx[15] = '0';
   \   000001D2   E300               LDI     R16, 48
   \   000001D4   CF8B               RJMP    ??configuration_answer_frame_7
    762          			send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
    763                //send_frame_pp_ext_broad("D200013483000000",TRANS_DELAY);
    764          	}
    765          	else if(value == 0x84)
   \                     ??configuration_answer_frame_17:
   \   000001D6   3884               CPI     R24, 132
   \   000001D8   F451               BRNE    ??configuration_answer_frame_18
    766          	{
    767          			strncpy(&buffer_tx[8],"FFFFFFFF",9);
   \   000001DA   E049               LDI     R20, 9
   \   000001DC   E050               LDI     R21, 0
   \   000001DE   ....               LDI     R18, LOW((`?<Constant "D200013415000000">` + 102))
   \   000001E0   ....               LDI     R19, HIGH((`?<Constant "D200013415000000">` + 102))
   \   000001E2   018E               MOVW    R17:R16, R29:R28
   \   000001E4   5F05               SUBI    R16, 245
   \                     ??configuration_answer_frame_19:
   \   000001E6   4F1F               SBCI    R17, 255
   \   000001E8   ........           CALL    strncpy
    768          			send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   000001EC   CF65               RJMP    ??configuration_answer_frame_3
    769          	}
    770          	else if(value == 0x85)
   \                     ??configuration_answer_frame_18:
   \   000001EE   3885               CPI     R24, 133
   \   000001F0   F481               BRNE    ??configuration_answer_frame_20
    771          	{
    772          		//strncpy(&buffer_tx[0],"$24\r",5);
    773          		buffer_tx[0] = '$';
   \   000001F2   E204               LDI     R16, 36
   \   000001F4   830B               STD     Y+3, R16
    774          		buffer_tx[1] = '2';
   \   000001F6   E302               LDI     R16, 50
   \   000001F8   830C               STD     Y+4, R16
    775          		buffer_tx[2] = '4';
   \   000001FA   E304               LDI     R16, 52
   \   000001FC   830D               STD     Y+5, R16
    776          		buffer_tx[3] = 0x0D;
   \   000001FE   E00D               LDI     R16, 13
   \   00000200   830E               STD     Y+6, R16
    777          		buffer_tx[4] = 0;
   \   00000202   E000               LDI     R16, 0
   \   00000204   830F               STD     Y+7, R16
    778          		put_s(buffer_tx);
   \   00000206   018E               MOVW    R17:R16, R29:R28
   \   00000208   5F0D               SUBI    R16, 253
   \   0000020A   4F1F               SBCI    R17, 255
   \   0000020C   ........           CALL    put_s
   \   00000210   C096               RJMP    ??configuration_answer_frame_4
    779          			//delay_ms(100);
    780          			/*
    781          			for(i=0;i<DEEP;i++)
    782          			{
    783          				if(scs_frame[i].finished == 1)
    784          				{
    785          					scs_frame[i].finished = 0;
    786          					if((scs_frame[i].byte[1] == '2') && ((scs_frame[i].byte[2] == '5')))
    787          					{
    788          						strncpy(&buffer_tx[10],&scs_frame[i].byte[3],7);
    789          						break;
    790          					}
    791          				}
    792          			}
    793          			buffer_tx[9] = '5';
    794          			//strncpy(&buffer_tx[10],&g_reception_SCS.pipe[2],7);
    795          			send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
    796          			*/
    797          			
    798          	}
    799          	else if(value == 0x86)
   \                     ??configuration_answer_frame_20:
   \   00000212   3886               CPI     R24, 134
   \   00000214   F559               BRNE    ??configuration_answer_frame_21
    800          	{
    801          			SetBit(asc_buffer_tx[7],0);		//not busy
    802          			SetBit(asc_buffer_tx[7],1);	  //hardware failure
    803          			SetBit(asc_buffer_tx[7],2);		//wrong configuration
    804          			SetBit(asc_buffer_tx[7],3);		//system failure
    805          	
    806          			SetBit(asc_buffer_tx[7],5);			//device not disabled
    807          			SetBit(asc_buffer_tx[7],6);			//ID right
   \   00000216   8D0B               LDD     R16, Y+27
   \   00000218   660F               ORI     R16, 0x6F
   \   0000021A   8F0B               STD     Y+27, R16
    808          			
    809          			if( product_information.conf_type == BASIC_PHYSICAL )
   \   0000021C   9100....           LDS     R16, product_information
   \   00000220   2300               TST     R16
   \   00000222   F419               BRNE    ??configuration_answer_frame_22
    810          			{
    811                  SetBit(asc_buffer_tx[7],4);
    812          				SetBit(asc_buffer_tx[7],7);
   \   00000224   8D0B               LDD     R16, Y+27
   \   00000226   6900               ORI     R16, 0x90
   \   00000228   C00F               RJMP    ??configuration_answer_frame_23
    813          			}
    814          			else if(product_information.conf_type == BASIC_VIRTUAL)
   \                     ??configuration_answer_frame_22:
   \   0000022A   9100....           LDS     R16, product_information
   \   0000022E   3001               CPI     R16, 1
   \   00000230   F431               BRNE    ??configuration_answer_frame_24
    815          			{
    816          				ClrBit(asc_buffer_tx[7],4);
    817                  SetBit(asc_buffer_tx[7],7);
   \   00000232   8D0B               LDD     R16, Y+27
   \   00000234   7E0F               ANDI    R16, 0xEF
   \   00000236   8F0B               STD     Y+27, R16
   \   00000238   8D0B               LDD     R16, Y+27
   \   0000023A   6800               ORI     R16, 0x80
   \   0000023C   C005               RJMP    ??configuration_answer_frame_23
    818          			}
    819                else if(product_information.conf_type == ADVANCED)
   \                     ??configuration_answer_frame_24:
   \   0000023E   9100....           LDS     R16, product_information
   \   00000242   3002               CPI     R16, 2
   \   00000244   F411               BRNE    ??configuration_answer_frame_25
    820                {
    821                  ClrBit(asc_buffer_tx[7],4);
    822                  ClrBit(asc_buffer_tx[7],7);
   \   00000246   E60F               LDI     R16, 111
   \                     ??configuration_answer_frame_23:
   \   00000248   8F0B               STD     Y+27, R16
    823                }
    824          
    825          			buffer_tx[9] = '6';
   \                     ??configuration_answer_frame_25:
   \   0000024A   E306               LDI     R16, 54
   \   0000024C   870C               STD     Y+12, R16
    826          			buffer_tx[10] = 'F';
   \   0000024E   E406               LDI     R16, 70
   \   00000250   870D               STD     Y+13, R16
    827          			buffer_tx[11] = 'F';
   \   00000252   870E               STD     Y+14, R16
    828          			buffer_tx[12] = 'F';
   \   00000254   870F               STD     Y+15, R16
    829          			buffer_tx[13] = 'F';
   \   00000256   8B08               STD     Y+16, R16
    830                CharToStr(asc_buffer_tx[7],buffer);
   \   00000258   019E               MOVW    R19:R18, R29:R28
   \   0000025A   8D0B               LDD     R16, Y+27
   \   0000025C   ........           CALL    CharToStr
    831          			buffer_tx[14] = buffer[0];
   \   00000260   8108               LD      R16, Y
   \   00000262   8B09               STD     Y+17, R16
    832          			buffer_tx[15] = buffer[1];
   \   00000264   8109               LDD     R16, Y+1
   \   00000266   8B0A               STD     Y+18, R16
    833                asm("nop");
   \   00000268   0000               nop
    834          
    835          			//buffer_tx[15] = '1';		//manual		
    836          			//buffer_tx[14] = '6';
    837          			//buffer_tx[15] = 'F';	
    838          			send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   0000026A   CF26               RJMP    ??configuration_answer_frame_3
    839          	}
    840          	else if(value == 0x88)
   \                     ??configuration_answer_frame_21:
   \   0000026C   3888               CPI     R24, 136
   \   0000026E   F409               BRNE    $+2+2
   \   00000270   C066               RJMP    ??configuration_answer_frame_4
    841          	{
    842          			//strncpy(&buffer_tx[9],"8000000",8);
    843          			//send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
    844          	}
    845            else if(value == 0x89)
   \   00000272   3889               CPI     R24, 137
   \   00000274   F521               BRNE    ??configuration_answer_frame_26
    846            {
    847              SetBit(asc_buffer_tx[7],0);		//not busy
    848          			SetBit(asc_buffer_tx[7],1);	  //hardware failure
    849          			SetBit(asc_buffer_tx[7],2);		//wrong configuration
    850          			SetBit(asc_buffer_tx[7],3);		//system failure
    851          	
    852          			SetBit(asc_buffer_tx[7],5);			//device not disabled
    853          			SetBit(asc_buffer_tx[7],6);			//ID right
   \   00000276   8D0B               LDD     R16, Y+27
   \   00000278   660F               ORI     R16, 0x6F
   \   0000027A   8F0B               STD     Y+27, R16
    854          			
    855          			if( product_information.conf_type == BASIC_PHYSICAL )
   \   0000027C   9100....           LDS     R16, product_information
   \   00000280   2300               TST     R16
   \   00000282   F419               BRNE    ??configuration_answer_frame_27
    856          			{
    857                  SetBit(asc_buffer_tx[7],4);
    858          				SetBit(asc_buffer_tx[7],7);
   \   00000284   8D0B               LDD     R16, Y+27
   \   00000286   6900               ORI     R16, 0x90
   \   00000288   C00F               RJMP    ??configuration_answer_frame_28
    859          			}
    860          			else if(product_information.conf_type == BASIC_VIRTUAL)
   \                     ??configuration_answer_frame_27:
   \   0000028A   9100....           LDS     R16, product_information
   \   0000028E   3001               CPI     R16, 1
   \   00000290   F431               BRNE    ??configuration_answer_frame_29
    861          			{
    862          				ClrBit(asc_buffer_tx[7],4);
    863                  SetBit(asc_buffer_tx[7],7);
   \   00000292   8D0B               LDD     R16, Y+27
   \   00000294   7E0F               ANDI    R16, 0xEF
   \   00000296   8F0B               STD     Y+27, R16
   \   00000298   8D0B               LDD     R16, Y+27
   \   0000029A   6800               ORI     R16, 0x80
   \   0000029C   C005               RJMP    ??configuration_answer_frame_28
    864          			}
    865                else if(product_information.conf_type == ADVANCED)
   \                     ??configuration_answer_frame_29:
   \   0000029E   9100....           LDS     R16, product_information
   \   000002A2   3002               CPI     R16, 2
   \   000002A4   F411               BRNE    ??configuration_answer_frame_30
    866                {
    867                  ClrBit(asc_buffer_tx[7],4);
    868                  ClrBit(asc_buffer_tx[7],7);
   \   000002A6   E60F               LDI     R16, 111
   \                     ??configuration_answer_frame_28:
   \   000002A8   8F0B               STD     Y+27, R16
    869                }
    870          
    871          			buffer_tx[9] = '9';
   \                     ??configuration_answer_frame_30:
   \   000002AA   E309               LDI     R16, 57
   \   000002AC   870C               STD     Y+12, R16
    872          			buffer_tx[10] = 'F';
   \   000002AE   E406               LDI     R16, 70
   \   000002B0   870D               STD     Y+13, R16
    873          			buffer_tx[11] = 'F';
   \   000002B2   870E               STD     Y+14, R16
    874          			buffer_tx[12] = 'F';
   \   000002B4   870F               STD     Y+15, R16
    875          			buffer_tx[13] = 'F';
   \   000002B6   8B08               STD     Y+16, R16
    876                CharToStr(asc_buffer_tx[7],buffer);
   \   000002B8   019E               MOVW    R19:R18, R29:R28
   \   000002BA   8D0B               LDD     R16, Y+27
   \   000002BC   CF12               RJMP    ??configuration_answer_frame_6
    877          			buffer_tx[14] = buffer[0];
    878          			buffer_tx[15] = buffer[1];
    879          			send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
    880            }
    881          	else if(value == 0x8B)
   \                     ??configuration_answer_frame_26:
   \   000002BE   388B               CPI     R24, 139
   \   000002C0   F4C1               BRNE    ??configuration_answer_frame_31
    882          	{
    883              if(GetBit(g_asc_reception_buffer[5],1) == 0)    //every device
   \   000002C2   ....               LDI     R30, LOW(g_asc_reception_buffer)
   \   000002C4   ....               LDI     R31, (g_asc_reception_buffer) >> 8
   \   000002C6   8105               LDD     R16, Z+5
   \   000002C8   FD01               SBRC    R16, 1
   \   000002CA   C002               RJMP    ??configuration_answer_frame_32
    884              {
    885          		  KO_answer_frame();
   \                     ??configuration_answer_frame_33:
   \   000002CC   ....               RCALL   KO_answer_frame
   \   000002CE   C037               RJMP    ??configuration_answer_frame_4
    886              }
    887              else //device in programming/test state
    888              {
    889                if(state.main_state == STATE_PROGRAMMING_DURING || state.main_state == STATE_TEST_DURING)
   \                     ??configuration_answer_frame_32:
   \   000002D0   9100....           LDS     R16, (state + 2)
   \   000002D4   9110....           LDS     R17, (state + 3)
   \   000002D8   3000               CPI     R16, 0
   \   000002DA   E221               LDI     R18, 33
   \   000002DC   0712               CPC     R17, R18
   \   000002DE   F3B1               BREQ    ??configuration_answer_frame_33
   \   000002E0   9100....           LDS     R16, (state + 2)
   \   000002E4   9110....           LDS     R17, (state + 3)
   \   000002E8   3002               CPI     R16, 2
   \   000002EA   E220               LDI     R18, 32
   \   000002EC   0712               CPC     R17, R18
   \   000002EE   F539               BRNE    ??configuration_answer_frame_4
   \   000002F0   CFED               RJMP    ??configuration_answer_frame_33
    890                {
    891                  KO_answer_frame();
    892                }
    893              }
    894          	}
    895          	else if(value == 0x8C)
   \                     ??configuration_answer_frame_31:
   \   000002F2   388C               CPI     R24, 140
   \   000002F4   F439               BRNE    ??configuration_answer_frame_34
    896          	{
    897          			strncpy(&buffer_tx[9],"C0000AA",8);
   \   000002F6   E048               LDI     R20, 8
   \   000002F8   E050               LDI     R21, 0
   \   000002FA   ....               LDI     R18, LOW((`?<Constant "D200013415000000">` + 111))
   \   000002FC   ....               LDI     R19, HIGH((`?<Constant "D200013415000000">` + 111))
   \   000002FE   018E               MOVW    R17:R16, R29:R28
   \   00000300   5F04               SUBI    R16, 244
   \   00000302   CF71               RJMP    ??configuration_answer_frame_19
    898          			send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
    899          	}
    900          	else if(value == 0x8D)
   \                     ??configuration_answer_frame_34:
   \   00000304   388D               CPI     R24, 141
   \   00000306   F4D9               BRNE    ??configuration_answer_frame_4
    901          	{
    902          			if(GetBit(g_asc_reception_buffer[7],7)) //address answer
   \   00000308   ....               LDI     R30, LOW(g_asc_reception_buffer)
   \   0000030A   ....               LDI     R31, (g_asc_reception_buffer) >> 8
   \   0000030C   8107               LDD     R16, Z+7
   \   0000030E   FF07               SBRS    R16, 7
   \   00000310   C015               RJMP    ??configuration_answer_frame_35
    903          			{
    904                  if(GetBit(g_asc_reception_buffer[5],1))
   \   00000312   8105               LDD     R16, Z+5
   \   00000314   FF01               SBRS    R16, 1
   \   00000316   C010               RJMP    ??configuration_answer_frame_36
    905                  {
    906                    if(state.main_state == STATE_PROGRAMMING_DURING || state.main_state == STATE_TEST_DURING)
   \   00000318   9100....           LDS     R16, (state + 2)
   \   0000031C   9110....           LDS     R17, (state + 3)
   \   00000320   3000               CPI     R16, 0
   \   00000322   E221               LDI     R18, 33
   \   00000324   0712               CPC     R17, R18
   \   00000326   F041               BREQ    ??configuration_answer_frame_36
   \   00000328   9100....           LDS     R16, (state + 2)
   \   0000032C   9110....           LDS     R17, (state + 3)
   \   00000330   3002               CPI     R16, 2
   \   00000332   E220               LDI     R18, 32
   \   00000334   0712               CPC     R17, R18
   \   00000336   F419               BRNE    ??configuration_answer_frame_4
    907                    {
    908                      address_answer_frame();
   \                     ??configuration_answer_frame_36:
   \   00000338   ....               RCALL   address_answer_frame
   \   0000033A   C001               RJMP    ??configuration_answer_frame_4
    909                    }
    910                  }
    911                  else
    912                  {
    913                    address_answer_frame();
    914                  }
    915                }
    916          			else //parameter request
    917          			{
    918          				parameter_answer_frame();
   \                     ??configuration_answer_frame_35:
   \   0000033C   ....               RCALL   parameter_answer_frame
    919          			}
    920          	}
    921          }
   \                     ??configuration_answer_frame_4:
   \   0000033E   966C               ADIW    R29:R28, 28
   \   00000340   E0E4               LDI     R30, 4
   \   00000342   ........           JMP     ?EPILOGUE_B4_L09
    922          

   \                                 In  segment CODE, align 2, keep-with-next
    923          void configuration_receive_answer_frame(void)
   \                     configuration_receive_answer_frame:
    924          {
   \   00000000   93BA               ST      -Y, R27
   \   00000002   93AA               ST      -Y, R26
    925          	switch(g_asc_reception_buffer[4])
   \   00000004   ....               LDI     R30, LOW(g_asc_reception_buffer)
   \   00000006   ....               LDI     R31, (g_asc_reception_buffer) >> 8
   \   00000008   8104               LDD     R16, Z+4
   \   0000000A   5800               SUBI    R16, 128
   \   0000000C   F019               BREQ    ??configuration_receive_answer_frame_0
   \   0000000E   580D               SUBI    R16, 141
   \   00000010   F119               BREQ    ??configuration_receive_answer_frame_1
   \   00000012   C05C               RJMP    ??configuration_receive_answer_frame_2
    926          	{
    927          		case 0x80:
    928                state.main_state = STATE_NORMAL;
   \                     ??configuration_receive_answer_frame_0:
   \   00000014   E000               LDI     R16, 0
   \   00000016   9300....           STS     (state + 2), R16
   \   0000001A   9300....           STS     (state + 3), R16
    929          			led_blinking_normal();
   \   0000001E   ........           CALL    led_blinking_normal
    930          			if(state.main_state == STATE_TEST_DURING)
   \   00000022   9100....           LDS     R16, (state + 2)
   \   00000026   9110....           LDS     R17, (state + 3)
   \   0000002A   3002               CPI     R16, 2
   \   0000002C   E220               LDI     R18, 32
   \   0000002E   0712               CPC     R17, R18
   \   00000030   F431               BRNE    ??configuration_receive_answer_frame_3
    931          			{
    932          				send_frame_pp_ext_broad("D20001348C0001FA",TRANS_DELAY);
   \   00000032   E322               LDI     R18, 50
   \   00000034   E030               LDI     R19, 0
   \   00000036   ....               LDI     R16, LOW(`?<Constant "D20001348C0001FA">`)
   \   00000038   ....               LDI     R17, (`?<Constant "D20001348C0001FA">`) >> 8
   \                     ??configuration_receive_answer_frame_4:
   \   0000003A   ....               RCALL   send_frame_pp_ext_broad
   \   0000003C   C047               RJMP    ??configuration_receive_answer_frame_2
    933          			}
    934                else if(state.main_state == STATE_PROGRAMMING_DURING)
   \                     ??configuration_receive_answer_frame_3:
   \   0000003E   9100....           LDS     R16, (state + 2)
   \   00000042   9110....           LDS     R17, (state + 3)
   \   00000046   3000               CPI     R16, 0
   \   00000048   E221               LDI     R18, 33
   \   0000004A   0712               CPC     R17, R18
   \   0000004C   F5F9               BRNE    ??configuration_receive_answer_frame_2
    935                {
    936                  send_frame_pp_ext_broad("D20001348C0000FA",TRANS_DELAY);
   \   0000004E   E322               LDI     R18, 50
   \   00000050   E030               LDI     R19, 0
   \   00000052   ....               LDI     R16, LOW((`?<Constant "D20001348C0001FA">` + 17))
   \   00000054   ....               LDI     R17, HIGH((`?<Constant "D20001348C0001FA">` + 17))
   \   00000056   CFF1               RJMP    ??configuration_receive_answer_frame_4
    937                }
   \                     ??configuration_receive_answer_frame_1:
   \   00000058   9100....           LDS     R16, (KO_conf + 1)
   \   0000005C   3002               CPI     R16, 2
   \   0000005E   F429               BRNE    ??configuration_receive_answer_frame_5
   \   00000060   9100....           LDS     R16, (KO_conf + 5)
   \   00000064   8111               LDD     R17, Z+1
   \   00000066   1701               CP      R16, R17
   \   00000068   F049               BREQ    ??configuration_receive_answer_frame_6
   \                     ??configuration_receive_answer_frame_5:
   \   0000006A   9100....           LDS     R16, (KO_conf + 1)
   \   0000006E   2300               TST     R16
   \   00000070   F569               BRNE    ??configuration_receive_answer_frame_2
   \   00000072   9100....           LDS     R16, (KO_conf + 2)
   \   00000076   8111               LDD     R17, Z+1
   \   00000078   1701               CP      R16, R17
   \   0000007A   F541               BRNE    ??configuration_receive_answer_frame_2
    938          		break;
    939          		
    940          		case 0x0D:
    941          		  if(((KO_conf.AddressType ==2)&&(KO_conf.Reference == g_asc_reception_buffer[1]))
    942          					||((KO_conf.AddressType ==0)&&(KO_conf.DesAdd == g_asc_reception_buffer[1])))
    943          			{
    944          				//if(Time_delay.regulation.time_out == 1)
    945          				//{
    946          				//	Time_delay.regulation.time_out = 0;
    947          				//	DLL.start_regulation = 0;
    948          				//	ClrBit(KO_conf.status[0],Status_Regulationing);
    949          				//}
    950          				if((g_asc_reception_buffer[5] ==0x00)||(g_asc_reception_buffer[5] ==0x01))	
   \                     ??configuration_receive_answer_frame_6:
   \   0000007C   8105               LDD     R16, Z+5
   \   0000007E   2300               TST     R16
   \   00000080   F019               BREQ    ??configuration_receive_answer_frame_7
   \   00000082   8105               LDD     R16, Z+5
   \   00000084   3001               CPI     R16, 1
   \   00000086   F479               BRNE    ??configuration_receive_answer_frame_8
    951          				{
    952          						if(g_asc_reception_buffer[5] == 0x00)
   \                     ??configuration_receive_answer_frame_7:
   \   00000088   8105               LDD     R16, Z+5
   \   0000008A   2300               TST     R16
   \   0000008C   ....               LDI     R26, LOW((Sensor_mode + 7))
   \   0000008E   ....               LDI     R27, HIGH((Sensor_mode + 7))
   \   00000090   910C               LD      R16, X
   \   00000092   F421               BRNE    ??configuration_receive_answer_frame_9
    953          						{
    954          							Sensor_mode.power_on_flag = 1;
   \   00000094   6200               ORI     R16, 0x20
   \   00000096   930C               ST      X, R16
    955          							KO_conf.status[1] = g_asc_reception_buffer[6];		//reyno 0616
   \   00000098   8106               LDD     R16, Z+6
   \   0000009A   C003               RJMP    ??configuration_receive_answer_frame_10
    956          						}
    957          						else
    958          						{
    959          							Sensor_mode.power_on_flag = 0;
   \                     ??configuration_receive_answer_frame_9:
   \   0000009C   7D0F               ANDI    R16, 0xDF
   \   0000009E   930C               ST      X, R16
    960          							KO_conf.status[1] = Status_OFF;		//reyno 0616
   \   000000A0   E000               LDI     R16, 0
   \                     ??configuration_receive_answer_frame_10:
   \   000000A2   9300....           STS     (KO_conf + 46), R16
    961          						}
    962          						///////////////////////////////////////////////
    963          				}
    964          				if(g_asc_reception_buffer[5] == 0x0D)							
   \                     ??configuration_receive_answer_frame_8:
   \   000000A6   8105               LDD     R16, Z+5
   \   000000A8   300D               CPI     R16, 13
   \   000000AA   F481               BRNE    ??configuration_receive_answer_frame_2
    965          				{
    966          					//reyno 0612/////////////////////////////////////
    967          					Sensor_mode.power_on_flag = 1;
   \   000000AC   ....               LDI     R26, LOW((Sensor_mode + 7))
   \   000000AE   ....               LDI     R27, HIGH((Sensor_mode + 7))
   \   000000B0   910C               LD      R16, X
   \   000000B2   6200               ORI     R16, 0x20
   \   000000B4   930C               ST      X, R16
    968          					KO_conf.status[1] = g_asc_reception_buffer[6];
   \   000000B6   8106               LDD     R16, Z+6
   \   000000B8   9300....           STS     (KO_conf + 46), R16
    969          					/////////////////////////////////////////////////
    970          					SCS_received.P2P_dimmer_flag = 1;
   \   000000BC   ....               LDI     R30, LOW(SCS_received)
   \   000000BE   ....               LDI     R31, (SCS_received) >> 8
   \   000000C0   8102               LDD     R16, Z+2
   \   000000C2   6002               ORI     R16, 0x02
   \   000000C4   8302               STD     Z+2, R16
    971          					SCS_received.P2P_actuator_flag = 0;
   \   000000C6   8102               LDD     R16, Z+2
   \   000000C8   7F0E               ANDI    R16, 0xFE
   \   000000CA   8302               STD     Z+2, R16
    972          				}
    973          			}
    974          		break;
    975          
    976          		default:break;
    977          	}
    978          }
   \                     ??configuration_receive_answer_frame_2:
   \   000000CC   91A9               LD      R26, Y+
   \   000000CE   91B9               LD      R27, Y+
   \   000000D0   9508               RET
    979          

   \                                 In  segment CODE, align 2, keep-with-next
    980          void KO_answer_frame(void)
   \                     KO_answer_frame:
    981          {
   \   00000000   938A               ST      -Y, R24
   \   00000002   9764               SBIW    R29:R28, 20
    982            unsigned char i;
    983            unsigned char temp;
    984            volatile unsigned char buffer_tx[17];
    985            unsigned char buffer[3];
    986            unsigned char ko_channel = g_asc_reception_buffer[7];
   \   00000004   9180....           LDS     R24, (g_asc_reception_buffer + 7)
    987          
    988            ClrBit(ko_channel,7);
   \   00000008   778F               ANDI    R24, 0x7F
    989          
    990          	strncpy(buffer_tx,"D20001348B020381",17);
   \   0000000A   E141               LDI     R20, 17
   \   0000000C   E050               LDI     R21, 0
   \   0000000E   ....               LDI     R18, LOW(`?<Constant "D20001348B020381">`)
   \   00000010   ....               LDI     R19, (`?<Constant "D20001348B020381">`) >> 8
   \   00000012   018E               MOVW    R17:R16, R29:R28
   \   00000014   5F0D               SUBI    R16, 253
   \   00000016   4F1F               SBCI    R17, 255
   \   00000018   ........           CALL    strncpy
    991            if(ko_channel > NUM_KO_TOTAL)
   \   0000001C   3182               CPI     R24, 18
   \   0000001E   F0C8               BRCS    ??KO_answer_frame_0
    992            {
    993              buffer_tx[10] = 'F';
   \   00000020   E406               LDI     R16, 70
   \   00000022   870D               STD     Y+13, R16
    994              buffer_tx[11] = 'F';
   \   00000024   870E               STD     Y+14, R16
    995              buffer_tx[12] = '0';
   \   00000026   E300               LDI     R16, 48
   \   00000028   870F               STD     Y+15, R16
    996              buffer_tx[13] = '4';
   \   0000002A   E304               LDI     R16, 52
   \   0000002C   8B08               STD     Y+16, R16
    997              temp = g_asc_reception_buffer[7];
   \   0000002E   9160....           LDS     R22, (g_asc_reception_buffer + 7)
    998              SetBit(temp,7);
    999              CharToStr(temp,buffer);
   \   00000032   019E               MOVW    R19:R18, R29:R28
   \   00000034   6860               ORI     R22, 0x80
   \   00000036   2F06               MOV     R16, R22
   \   00000038   ........           CALL    CharToStr
   1000              buffer_tx[14] = buffer[0];
   \   0000003C   8108               LD      R16, Y
   \   0000003E   8B09               STD     Y+17, R16
   1001              buffer_tx[15] = buffer[1];
   \   00000040   8109               LDD     R16, Y+1
   \   00000042   8B0A               STD     Y+18, R16
   1002              send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   00000044   E322               LDI     R18, 50
   \   00000046   E030               LDI     R19, 0
   \   00000048   018E               MOVW    R17:R16, R29:R28
   \   0000004A   5F0D               SUBI    R16, 253
   \   0000004C   4F1F               SBCI    R17, 255
   \   0000004E   ....               RCALL   send_frame_pp_ext_broad
   \   00000050   C0B8               RJMP    ??KO_answer_frame_1
   1003            }
   1004            else
   1005            {
   1006              //if( GetBit(g_asc_reception_buffer[7],7) == 0 )
   1007          		//{
   1008          			if(ko_channel == 0x00)
   \                     ??KO_answer_frame_0:
   \   00000052   2388               TST     R24
   \   00000054   F009               BREQ    $+2+2
   \   00000056   C059               RJMP    ??KO_answer_frame_2
   1009          			{
   1010          				strncpy(buffer_tx,"D20001348B020381",17);
   \   00000058   E141               LDI     R20, 17
   \   0000005A   E050               LDI     R21, 0
   \   0000005C   ....               LDI     R18, LOW(`?<Constant "D20001348B020381">`)
   \   0000005E   ....               LDI     R19, (`?<Constant "D20001348B020381">`) >> 8
   \   00000060   018E               MOVW    R17:R16, R29:R28
   \   00000062   5F0D               SUBI    R16, 253
   \   00000064   4F1F               SBCI    R17, 255
   \   00000066   ........           CALL    strncpy
   1011                  buffer_tx[10] = KO[0];
   \   0000006A   ....               LDI     R30, LOW(KO)
   \   0000006C   ....               LDI     R31, (KO) >> 8
   \   0000006E   8100               LD      R16, Z
   \   00000070   870D               STD     Y+13, R16
   1012                  buffer_tx[11] = KO[1];
   \   00000072   8101               LDD     R16, Z+1
   \   00000074   870E               STD     Y+14, R16
   1013                  buffer_tx[12] = KO[2];
   \   00000076   8102               LDD     R16, Z+2
   \   00000078   870F               STD     Y+15, R16
   1014                  buffer_tx[13] = KO[3];
   \   0000007A   8103               LDD     R16, Z+3
   \   0000007C   8B08               STD     Y+16, R16
   1015          				if( product_information.conf_type == 3 )
   \   0000007E   9100....           LDS     R16, product_information
   \   00000082   3003               CPI     R16, 3
   \   00000084   F049               BREQ    ??KO_answer_frame_3
   1016          				{
   1017          					send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1018          				}
   1019          				else
   1020          				{
   1021          					strncpy(&buffer_tx[14],"01",3);
   \   00000086   E043               LDI     R20, 3
   \   00000088   E050               LDI     R21, 0
   \   0000008A   ....               LDI     R18, LOW((`?<Constant "D20001348B020381">` + 17))
   \   0000008C   ....               LDI     R19, HIGH((`?<Constant "D20001348B020381">` + 17))
   \   0000008E   018E               MOVW    R17:R16, R29:R28
   \   00000090   5E0F               SUBI    R16, 239
   \   00000092   4F1F               SBCI    R17, 255
   \   00000094   ........           CALL    strncpy
   1022          					send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \                     ??KO_answer_frame_3:
   \   00000098   E322               LDI     R18, 50
   \   0000009A   E030               LDI     R19, 0
   \   0000009C   018E               MOVW    R17:R16, R29:R28
   \   0000009E   5F0D               SUBI    R16, 253
   \   000000A0   4F1F               SBCI    R17, 255
   \   000000A2   ....               RCALL   send_frame_pp_ext_broad
   1023          				}
   1024          
   1025          				strncpy(buffer_tx,"D20001348B01AF02",17);
   \   000000A4   E141               LDI     R20, 17
   \   000000A6   E050               LDI     R21, 0
   \   000000A8   ....               LDI     R18, LOW((`?<Constant "D20001348B020381">` + 20))
   \   000000AA   ....               LDI     R19, HIGH((`?<Constant "D20001348B020381">` + 20))
   \   000000AC   018E               MOVW    R17:R16, R29:R28
   \   000000AE   5F0D               SUBI    R16, 253
   \   000000B0   4F1F               SBCI    R17, 255
   \   000000B2   ........           CALL    strncpy
   1026                  temp = 0;
   1027          				for(i=0;i<16;i++)
   \   000000B6   E080               LDI     R24, 0
   \   000000B8   C012               RJMP    ??KO_answer_frame_4
   1028          				{
   1029          					temp = 0x02 + i;
   1030          					
   1031          					if( ee_scenario[i].confed == 0)             //
   1032          					{																																		//
   1033          						SetBit(temp,7);																										//
   1034          					}																																		//
   1035          					else																																/////////////////
   1036          					{																																		/////////////////
   1037          						ClrBit(temp,7);																										/////////////////
   \                     ??KO_answer_frame_5:
   \   000000BA   776F               ANDI    R22, 0x7F
   1038          					}																																		
   1039          					
   1040          					CharToStr(temp,buffer);
   \                     ??KO_answer_frame_6:
   \   000000BC   019E               MOVW    R19:R18, R29:R28
   \   000000BE   2F06               MOV     R16, R22
   \   000000C0   ........           CALL    CharToStr
   1041          					buffer_tx[14] = buffer[0];
   \   000000C4   8108               LD      R16, Y
   \   000000C6   8B09               STD     Y+17, R16
   1042          					buffer_tx[15] = buffer[1];
   \   000000C8   8109               LDD     R16, Y+1
   \   000000CA   8B0A               STD     Y+18, R16
   1043          /*
   1044          					/////////////////////////////////////////////////////////////////////////////////////
   1045          					//             For solve the bug that interface always lost the first frame        //
   1046          					if((temp == 0x02) || (temp == 0x82))																										/////////////////
   1047          					{																																		/////////////////
   1048          						if( ee_scenario[i].confed  == 0)						/////////////////
   1049          							send_frame_pp_ext_broad("D20001348B01AF82",KO_SCENARIO_TRANS_DELAY);				/////////////////
   1050          						else																															/////////////////
   1051          							send_frame_pp_ext_broad("D20001348B01AF02",KO_SCENARIO_TRANS_DELAY);				/////////////////
   1052          					}																																		/////////////////
   1053          					/////////////////////////////////////////////////////////////////////////////////////
   1054          */
   1055          
   1056          					send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);	
   \   000000CC   E322               LDI     R18, 50
   \   000000CE   E030               LDI     R19, 0
   \   000000D0   018E               MOVW    R17:R16, R29:R28
   \   000000D2   5F0D               SUBI    R16, 253
   \   000000D4   4F1F               SBCI    R17, 255
   \   000000D6   ....               RCALL   send_frame_pp_ext_broad
   1057                    //frame_buffer_clear();
   1058                    manual_reception_buffer_clear();
   \   000000D8   ........           CALL    manual_reception_buffer_clear
   \   000000DC   9583               INC     R24
   \                     ??KO_answer_frame_4:
   \   000000DE   3180               CPI     R24, 16
   \   000000E0   F008               BRCS    $+2+2
   \   000000E2   C06F               RJMP    ??KO_answer_frame_1
   \   000000E4   2F68               MOV     R22, R24
   \   000000E6   5F6E               SUBI    R22, 254
   \   000000E8   ....               LDI     R18, LOW((ee_scenario + 6))
   \   000000EA   ....               LDI     R19, HIGH((ee_scenario + 6))
   \   000000EC   2F48               MOV     R20, R24
   \   000000EE   E050               LDI     R21, 0
   \   000000F0   E007               LDI     R16, 7
   \   000000F2   E010               LDI     R17, 0
   \   000000F4   ........           CALL    ?S_EC_MUL_L02
   \   000000F8   0F20               ADD     R18, R16
   \   000000FA   1F31               ADC     R19, R17
   \   000000FC   01A9               MOVW    R21:R20, R19:R18
   \   000000FE   ........           CALL    __eeget8_16
   \   00000102   2300               TST     R16
   \   00000104   F6D1               BRNE    ??KO_answer_frame_5
   \   00000106   6860               ORI     R22, 0x80
   \   00000108   CFD9               RJMP    ??KO_answer_frame_6
   1059          				}
   1060          			}
   1061          			else
   1062          			{
   1063          				if(ko_channel == 0x01)
   \                     ??KO_answer_frame_2:
   \   0000010A   3081               CPI     R24, 1
   \   0000010C   F4E9               BRNE    ??KO_answer_frame_7
   1064          				{
   1065          					strncpy(buffer_tx,"D20001348B000000",17);
   \   0000010E   E141               LDI     R20, 17
   \   00000110   E050               LDI     R21, 0
   \   00000112   ....               LDI     R18, LOW((`?<Constant "D20001348B020381">` + 37))
   \   00000114   ....               LDI     R19, HIGH((`?<Constant "D20001348B020381">` + 37))
   \   00000116   018E               MOVW    R17:R16, R29:R28
   \   00000118   5F0D               SUBI    R16, 253
   \   0000011A   4F1F               SBCI    R17, 255
   \   0000011C   ........           CALL    strncpy
   1066                    buffer_tx[10] = KO[0];
   \   00000120   ....               LDI     R30, LOW(KO)
   \   00000122   ....               LDI     R31, (KO) >> 8
   \   00000124   8100               LD      R16, Z
   \   00000126   870D               STD     Y+13, R16
   1067                    buffer_tx[11] = KO[1];
   \   00000128   8101               LDD     R16, Z+1
   \   0000012A   870E               STD     Y+14, R16
   1068                    buffer_tx[12] = KO[2];
   \   0000012C   8102               LDD     R16, Z+2
   \   0000012E   870F               STD     Y+15, R16
   1069                    buffer_tx[13] = KO[3];
   \   00000130   8103               LDD     R16, Z+3
   \   00000132   8B08               STD     Y+16, R16
   1070          					if( product_information.conf_type == 3 )
   \   00000134   9100....           LDS     R16, product_information
   \   00000138   3003               CPI     R16, 3
   \   0000013A   F411               BRNE    ??KO_answer_frame_8
   1071          					{
   1072          						buffer_tx[14] = '8';
   \   0000013C   E308               LDI     R16, 56
   \   0000013E   C001               RJMP    ??KO_answer_frame_9
   1073                      buffer_tx[15] = '1';
   1074          					}
   1075          					else
   1076          					{
   1077          						buffer_tx[14] = '0';
   \                     ??KO_answer_frame_8:
   \   00000140   E300               LDI     R16, 48
   \                     ??KO_answer_frame_9:
   \   00000142   8B09               STD     Y+17, R16
   1078                      buffer_tx[15] = '1';
   \   00000144   E301               LDI     R16, 49
   \   00000146   C035               RJMP    ??KO_answer_frame_10
   1079          					}
   1080                    send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1081          				}
   1082                  else
   1083                  {
   1084                  if((ko_channel >= 2) && (ko_channel <= 17))
   \                     ??KO_answer_frame_7:
   \   00000148   3082               CPI     R24, 2
   \   0000014A   F110               BRCS    ??KO_answer_frame_11
   \   0000014C   3182               CPI     R24, 18
   \   0000014E   F500               BRCC    ??KO_answer_frame_11
   1085          				{
   1086          					strncpy(buffer_tx,"D20001348B01AF02",17);
   \   00000150   E141               LDI     R20, 17
   \   00000152   E050               LDI     R21, 0
   \   00000154   ....               LDI     R18, LOW((`?<Constant "D20001348B020381">` + 20))
   \   00000156   ....               LDI     R19, HIGH((`?<Constant "D20001348B020381">` + 20))
   \   00000158   018E               MOVW    R17:R16, R29:R28
   \   0000015A   5F0D               SUBI    R16, 253
   \   0000015C   4F1F               SBCI    R17, 255
   \   0000015E   ........           CALL    strncpy
   1087          					temp = ko_channel - 2;
   \   00000162   5082               SUBI    R24, 2
   \   00000164   2F68               MOV     R22, R24
   1088          					if( ee_scenario[temp].confed  == 0)
   \   00000166   ....               LDI     R18, LOW((ee_scenario + 6))
   \   00000168   ....               LDI     R19, HIGH((ee_scenario + 6))
   \   0000016A   2F46               MOV     R20, R22
   \   0000016C   E050               LDI     R21, 0
   \   0000016E   E007               LDI     R16, 7
   \   00000170   E010               LDI     R17, 0
   \   00000172   ........           CALL    ?S_EC_MUL_L02
   \   00000176   0F20               ADD     R18, R16
   \   00000178   1F31               ADC     R19, R17
   \   0000017A   01A9               MOVW    R21:R20, R19:R18
   \   0000017C   ........           CALL    __eeget8_16
   \   00000180   2300               TST     R16
   \   00000182   F411               BRNE    ??KO_answer_frame_12
   1089          					{						
   1090          						SetBit(temp,7);
   \   00000184   6860               ORI     R22, 0x80
   \   00000186   C001               RJMP    ??KO_answer_frame_13
   1091          					}
   1092          					else
   1093          					{
   1094          						ClrBit(temp,7);
   \                     ??KO_answer_frame_12:
   \   00000188   776F               ANDI    R22, 0x7F
   1095          					}
   1096                    temp += 2;
   1097          					CharToStr(temp,buffer);
   \                     ??KO_answer_frame_13:
   \   0000018A   019E               MOVW    R19:R18, R29:R28
   \   0000018C   5F6E               SUBI    R22, 254
   \   0000018E   C00B               RJMP    ??KO_answer_frame_14
   1098          					buffer_tx[14] = buffer[0];
   1099          					buffer_tx[15] = buffer[1];
   1100          					//if(i == 2)
   1101          					//{
   1102          						//send_frame_pp_ext_broad(buffer_tx,0);
   1103          					//}
   1104          					send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1105          				}
   1106                  else
   1107                  {
   1108                    buffer_tx[10] = 'F';
   \                     ??KO_answer_frame_11:
   \   00000190   E406               LDI     R16, 70
   \   00000192   870D               STD     Y+13, R16
   1109                    buffer_tx[11] = 'F';
   \   00000194   870E               STD     Y+14, R16
   1110                    buffer_tx[12] = '0';
   \   00000196   E300               LDI     R16, 48
   \   00000198   870F               STD     Y+15, R16
   1111                    buffer_tx[13] = '4';
   \   0000019A   E304               LDI     R16, 52
   \   0000019C   8B08               STD     Y+16, R16
   1112                    temp = g_asc_reception_buffer[7];
   \   0000019E   9160....           LDS     R22, (g_asc_reception_buffer + 7)
   1113                    SetBit(temp,7);
   1114                    CharToStr(temp,buffer);
   \   000001A2   019E               MOVW    R19:R18, R29:R28
   \   000001A4   6860               ORI     R22, 0x80
   \                     ??KO_answer_frame_14:
   \   000001A6   2F06               MOV     R16, R22
   \   000001A8   ........           CALL    CharToStr
   1115                    buffer_tx[14] = buffer[0];
   \   000001AC   8108               LD      R16, Y
   \   000001AE   8B09               STD     Y+17, R16
   1116                    buffer_tx[15] = buffer[1];
   \   000001B0   8109               LDD     R16, Y+1
   \                     ??KO_answer_frame_10:
   \   000001B2   8B0A               STD     Y+18, R16
   1117                    send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   000001B4   E322               LDI     R18, 50
   \   000001B6   E030               LDI     R19, 0
   \   000001B8   018E               MOVW    R17:R16, R29:R28
   \   000001BA   5F0D               SUBI    R16, 253
   \   000001BC   4F1F               SBCI    R17, 255
   \   000001BE   ....               RCALL   send_frame_pp_ext_broad
   1118                  }
   1119                  }
   1120                  //delay_ms(50);
   1121                  //manual_reception_buffer_clear();
   1122                  asm("nop");
   \   000001C0   0000               nop
   1123          			}
   1124          		//}
   1125            }
   1126          }
   \                     ??KO_answer_frame_1:
   \   000001C2   9664               ADIW    R29:R28, 20
   \   000001C4   9189               LD      R24, Y+
   \   000001C6   9508               RET
   1127          

   \                                 In  segment CODE, align 2, keep-with-next
   1128          void parameter_answer_frame(void)
   \                     parameter_answer_frame:
   1129          {
   1130          	if(GetBit(g_asc_reception_buffer[5],1)) //ask for the programming or test state answer
   \   00000000   ....               LDI     R30, LOW(g_asc_reception_buffer)
   \   00000002   ....               LDI     R31, (g_asc_reception_buffer) >> 8
   \   00000004   8105               LDD     R16, Z+5
   \   00000006   FF01               SBRS    R16, 1
   \   00000008   C01C               RJMP    ??parameter_answer_frame_0
   1131          	{
   1132          		if(state.main_state == STATE_TEST_DURING || state.main_state == STATE_PROGRAMMING_DURING)
   \   0000000A   9100....           LDS     R16, (state + 2)
   \   0000000E   9110....           LDS     R17, (state + 3)
   \   00000012   3002               CPI     R16, 2
   \   00000014   E220               LDI     R18, 32
   \   00000016   0712               CPC     R17, R18
   \   00000018   F041               BREQ    ??parameter_answer_frame_1
   \   0000001A   9100....           LDS     R16, (state + 2)
   \   0000001E   9110....           LDS     R17, (state + 3)
   \   00000022   3000               CPI     R16, 0
   \   00000024   E221               LDI     R18, 33
   \   00000026   0712               CPC     R17, R18
   \   00000028   F4A1               BRNE    ??parameter_answer_frame_2
   1133          		{
   1134          			if(g_asc_reception_buffer[7] == 0x00) //every key object
   \                     ??parameter_answer_frame_1:
   \   0000002A   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   0000002E   2300               TST     R16
   \   00000030   F411               BRNE    ??parameter_answer_frame_3
   1135          			{
   1136          	      parameter_all_answer();
   \                     ??parameter_answer_frame_4:
   \   00000032   ....               RCALL   parameter_all_answer
   \   00000034   9508               RET
   1137          	    }
   1138          			else if(g_asc_reception_buffer[7] <= NUM_KO_TOTAL)
   \                     ??parameter_answer_frame_3:
   \   00000036   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   0000003A   3102               CPI     R16, 18
   \   0000003C   F450               BRCC    ??parameter_answer_frame_2
   1139          			{
   1140          				parameter_specified_index_answer();
   \                     ??parameter_answer_frame_5:
   \   0000003E   ....               RCALL   parameter_specified_index_answer
   \   00000040   9508               RET
   1141          			}
   1142          		}
   1143          	}
   1144          	else
   1145          	{
   1146          		if(g_asc_reception_buffer[7] == 0x00) //every key object
   \                     ??parameter_answer_frame_0:
   \   00000042   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   00000046   2300               TST     R16
   \   00000048   F3A1               BREQ    ??parameter_answer_frame_4
   1147          		{
   1148          	    parameter_all_answer();
   1149          	  }
   1150          		else if(g_asc_reception_buffer[7] <= NUM_KO_TOTAL)
   \   0000004A   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   0000004E   3102               CPI     R16, 18
   \   00000050   F3B0               BRCS    ??parameter_answer_frame_5
   1151          		{
   1152          			parameter_specified_index_answer();
   1153          		}
   1154          	}
   1155          }
   \                     ??parameter_answer_frame_2:
   \   00000052   9508               RET
   1156          

   \                                 In  segment CODE, align 2, keep-with-next
   1157          void frame_buffer_clear(void)
   \                     frame_buffer_clear:
   1158          {
   \   00000000   019D               MOVW    R19:R18, R27:R26
   1159            for(unsigned char i=0;i<DEEP;i++)
   \   00000002   E040               LDI     R20, 0
   \   00000004   C008               RJMP    ??frame_buffer_clear_0
   1160          	{
   1161          		scs_frame[i].finished = 0;
   1162              for(unsigned char j=0;j<NUMBER_BYTE_SCS;j++)
   1163              {
   1164                scs_frame[i].byte[j] = 0;
   \                     ??frame_buffer_clear_1:
   \   00000006   01DF               MOVW    R27:R26, R31:R30
   \   00000008   0FA0               ADD     R26, R16
   \   0000000A   1FB5               ADC     R27, R21
   \   0000000C   935C               ST      X, R21
   1165              }
   \   0000000E   9503               INC     R16
   \                     ??frame_buffer_clear_2:
   \   00000010   3104               CPI     R16, 20
   \   00000012   F3C8               BRCS    ??frame_buffer_clear_1
   \   00000014   9543               INC     R20
   \                     ??frame_buffer_clear_0:
   \   00000016   3243               CPI     R20, 35
   \   00000018   F460               BRCC    ??frame_buffer_clear_3
   \   0000001A   E050               LDI     R21, 0
   \   0000001C   E108               LDI     R16, 24
   \   0000001E   E010               LDI     R17, 0
   \   00000020   ........           CALL    ?S_EC_MUL_L02
   \   00000024   ....               LDI     R30, LOW(scs_frame)
   \   00000026   ....               LDI     R31, (scs_frame) >> 8
   \   00000028   0FE0               ADD     R30, R16
   \   0000002A   1FF1               ADC     R31, R17
   \   0000002C   E000               LDI     R16, 0
   \   0000002E   8B56               STD     Z+22, R21
   \   00000030   CFEF               RJMP    ??frame_buffer_clear_2
   1166          	}
   1167          }
   \                     ??frame_buffer_clear_3:
   \   00000032   01D9               MOVW    R27:R26, R19:R18
   \   00000034   9508               RET
   1168          

   \                                 In  segment CODE, align 2, keep-with-next
   1169          void parameter_request_error_frame(void)
   \                     parameter_request_error_frame:
   1170          {
   \   00000000   9761               SBIW    R29:R28, 17
   1171          	unsigned char buffer_tx[17] = "D20001348D000000";
   \   00000002   019E               MOVW    R19:R18, R29:R28
   \   00000004   0189               MOVW    R17:R16, R19:R18
   \   00000006   ....               LDI     R30, LOW(`?<Constant "D20001348D000000">`)
   \   00000008   ....               LDI     R31, (`?<Constant "D20001348D000000">`) >> 8
   \   0000000A   E141               LDI     R20, 17
   \   0000000C   E050               LDI     R21, 0
   \   0000000E   ........           CALL    ?ML_FLASH_SRAM_16EC_16_L07
   1172          		
   1173          		buffer_tx[10] = g_reception_buffer[12];
   \   00000012   ....               LDI     R30, LOW(g_reception_buffer)
   \   00000014   ....               LDI     R31, (g_reception_buffer) >> 8
   \   00000016   8504               LDD     R16, Z+12
   \   00000018   870A               STD     Y+10, R16
   1174            	buffer_tx[11] = g_reception_buffer[13];
   \   0000001A   8505               LDD     R16, Z+13
   \   0000001C   870B               STD     Y+11, R16
   1175            	buffer_tx[12] = 'F';
   \   0000001E   E406               LDI     R16, 70
   \   00000020   870C               STD     Y+12, R16
   1176            	buffer_tx[13] = 'F';
   \   00000022   870D               STD     Y+13, R16
   1177            	buffer_tx[14] = g_reception_buffer[14];
   \   00000024   8506               LDD     R16, Z+14
   \   00000026   870E               STD     Y+14, R16
   1178            	buffer_tx[15] = g_reception_buffer[15];
   \   00000028   8507               LDD     R16, Z+15
   \   0000002A   870F               STD     Y+15, R16
   1179            	send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);	
   \   0000002C   E322               LDI     R18, 50
   \   0000002E   E030               LDI     R19, 0
   \   00000030   018E               MOVW    R17:R16, R29:R28
   \   00000032   ........           CALL    send_frame_pp_ext_broad
   1180          }
   \   00000036   9661               ADIW    R29:R28, 17
   \   00000038   9508               RET
   1181          

   \                                 In  segment CODE, align 2, keep-with-next
   1182          void not_allowed_response(unsigned char ko_channel)
   \                     not_allowed_response:
   1183          {
   \   00000000   9764               SBIW    R29:R28, 20
   \   00000002   2F60               MOV     R22, R16
   1184          	unsigned char buffer_tx[17] = "D20001348D000000";
   \   00000004   019E               MOVW    R19:R18, R29:R28
   \   00000006   5F2D               SUBI    R18, 253
   \   00000008   4F3F               SBCI    R19, 255
   \   0000000A   ....               LDI     R30, LOW(`?<Constant "D20001348D000000">_1`)
   \   0000000C   ....               LDI     R31, (`?<Constant "D20001348D000000">_1`) >> 8
   \   0000000E   0189               MOVW    R17:R16, R19:R18
   \   00000010   E141               LDI     R20, 17
   \   00000012   E050               LDI     R21, 0
   \   00000014   ........           CALL    ?ML_FLASH_SRAM_16EC_16_L07
   1185            unsigned char buffer[3];
   1186            unsigned char temp;
   1187            	
   1188            if(ko_channel == 0x01)
   \   00000018   3061               CPI     R22, 1
   \   0000001A   F481               BRNE    ??not_allowed_response_0
   1189            {
   1190            	buffer_tx[9] = 'B';
   \   0000001C   E402               LDI     R16, 66
   \   0000001E   870C               STD     Y+12, R16
   1191              buffer_tx[10] = KO[0];
   \   00000020   ....               LDI     R30, LOW(KO)
   \   00000022   ....               LDI     R31, (KO) >> 8
   \   00000024   8100               LD      R16, Z
   \   00000026   870D               STD     Y+13, R16
   1192              buffer_tx[11] = KO[1];
   \   00000028   8101               LDD     R16, Z+1
   \   0000002A   870E               STD     Y+14, R16
   1193              buffer_tx[12] = KO[2];
   \   0000002C   8102               LDD     R16, Z+2
   \   0000002E   870F               STD     Y+15, R16
   1194              buffer_tx[13] = KO[3];
   \   00000030   8103               LDD     R16, Z+3
   \   00000032   8B08               STD     Y+16, R16
   1195              buffer_tx[14] = '8';
   \   00000034   E308               LDI     R16, 56
   \   00000036   8B09               STD     Y+17, R16
   1196              buffer_tx[15] = '1';
   \   00000038   E301               LDI     R16, 49
   \   0000003A   C014               RJMP    ??not_allowed_response_1
   1197              send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1198            }
   1199            else if(ko_channel <= NUM_KO_TOTAL)
   \                     ??not_allowed_response_0:
   \   0000003C   3162               CPI     R22, 18
   \   0000003E   F4D0               BRCC    ??not_allowed_response_2
   1200            {
   1201          		buffer_tx[9] = 'B';
   \   00000040   E402               LDI     R16, 66
   \   00000042   870C               STD     Y+12, R16
   1202            	buffer_tx[10] = '0';
   \   00000044   E300               LDI     R16, 48
   \   00000046   870D               STD     Y+13, R16
   1203            	buffer_tx[11] = '1';
   \   00000048   E301               LDI     R16, 49
   \   0000004A   870E               STD     Y+14, R16
   1204            	buffer_tx[12] = 'A';
   \   0000004C   E401               LDI     R16, 65
   \   0000004E   870F               STD     Y+15, R16
   1205              buffer_tx[13] = 'F';
   \   00000050   E406               LDI     R16, 70
   \   00000052   8B08               STD     Y+16, R16
   1206              temp = ko_channel;
   1207              SetBit(temp,7);
   1208              CharToStr(temp,buffer);
   \   00000054   019E               MOVW    R19:R18, R29:R28
   \   00000056   6860               ORI     R22, 0x80
   \   00000058   2F06               MOV     R16, R22
   \   0000005A   ........           CALL    CharToStr
   1209              buffer_tx[14] = buffer[0];
   \   0000005E   8108               LD      R16, Y
   \   00000060   8B09               STD     Y+17, R16
   1210              buffer_tx[15] = buffer[1];
   \   00000062   8109               LDD     R16, Y+1
   \                     ??not_allowed_response_1:
   \   00000064   8B0A               STD     Y+18, R16
   1211              send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   00000066   E322               LDI     R18, 50
   \   00000068   E030               LDI     R19, 0
   \   0000006A   018E               MOVW    R17:R16, R29:R28
   \   0000006C   5F0D               SUBI    R16, 253
   \   0000006E   4F1F               SBCI    R17, 255
   \   00000070   ........           CALL    send_frame_pp_ext_broad
   1212            }
   1213          }
   \                     ??not_allowed_response_2:
   \   00000074   9664               ADIW    R29:R28, 20
   \   00000076   9508               RET
   1214          

   \                                 In  segment CODE, align 2, keep-with-next
   1215          void parameter_all_answer(void)
   \                     parameter_all_answer:
   1216          {
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   9764               SBIW    R29:R28, 20
   1217          	unsigned char buffer_tx[17] = "D20001348D000000";
   \   00000006   019E               MOVW    R19:R18, R29:R28
   \   00000008   5F2D               SUBI    R18, 253
   \   0000000A   4F3F               SBCI    R19, 255
   \   0000000C   0189               MOVW    R17:R16, R19:R18
   \   0000000E   ....               LDI     R30, LOW(`?<Constant "D20001348D000000">_2`)
   \   00000010   ....               LDI     R31, (`?<Constant "D20001348D000000">_2`) >> 8
   \   00000012   E141               LDI     R20, 17
   \   00000014   E050               LDI     R21, 0
   \   00000016   ........           CALL    ?ML_FLASH_SRAM_16EC_16_L07
   1218            unsigned char buffer[3];
   1219          	unsigned char i;
   1220          
   1221          				if(GetBit(g_asc_reception_buffer[5],2))
   \   0000001A   ....               LDI     R30, LOW(g_asc_reception_buffer)
   \   0000001C   ....               LDI     R31, (g_asc_reception_buffer) >> 8
   \   0000001E   8105               LDD     R16, Z+5
   \   00000020   FF02               SBRS    R16, 2
   \   00000022   C0E5               RJMP    ??parameter_all_answer_0
   1222          	      {
   1223          	        if(g_asc_reception_buffer[6] == 0x00)
   \   00000024   9100....           LDS     R16, (g_asc_reception_buffer + 6)
   \   00000028   2300               TST     R16
   \   0000002A   F009               BREQ    $+2+2
   \   0000002C   C1BB               RJMP    ??parameter_all_answer_1
   1224          	        {
   1225          	          //every managered parameter answer      eg: D2 00 01 43 8D 04 00 00
   1226          	          if(product_information.conf_type == 0x03)
   \   0000002E   9100....           LDS     R16, product_information
   \   00000032   3003               CPI     R16, 3
   \   00000034   F419               BRNE    ??parameter_all_answer_2
   1227          	          {
   1228          	          	not_allowed_response(0x01);	
   \   00000036   E001               LDI     R16, 1
   \   00000038   ....               RCALL   not_allowed_response
   \   0000003A   C02A               RJMP    ??parameter_all_answer_3
   1229          	          }
   1230          	          else
   1231          	         	{
   1232          	          	for(i=1;i<35;i++)
   \                     ??parameter_all_answer_2:
   \   0000003C   E081               LDI     R24, 1
   \   0000003E   C025               RJMP    ??parameter_all_answer_4
   1233          	          	{
   1234                          if(read_KO(i) != 0xFFFF)
   \                     ??parameter_all_answer_5:
   \   00000040   2F08               MOV     R16, R24
   \   00000042   ........           CALL    read_KO
   \   00000046   3F0F               CPI     R16, 255
   \   00000048   EF2F               LDI     R18, 255
   \   0000004A   0712               CPC     R17, R18
   \   0000004C   F0E9               BREQ    ??parameter_all_answer_6
   1235                          {
   1236          	                CharToStr(read_KO(i),buffer);
   \   0000004E   2F08               MOV     R16, R24
   \   00000050   ........           CALL    read_KO
   \   00000054   019E               MOVW    R19:R18, R29:R28
   \   00000056   ........           CALL    CharToStr
   1237          	                buffer_tx[10] = buffer[0];
   \   0000005A   8108               LD      R16, Y
   \   0000005C   870D               STD     Y+13, R16
   1238          	                buffer_tx[11] = buffer[1];
   \   0000005E   8109               LDD     R16, Y+1
   \   00000060   870E               STD     Y+14, R16
   1239          	
   1240          	                CharToStr(i,buffer);
   \   00000062   019E               MOVW    R19:R18, R29:R28
   \   00000064   2F08               MOV     R16, R24
   \   00000066   ........           CALL    CharToStr
   1241          	                buffer_tx[12] = buffer[0];
   \   0000006A   8108               LD      R16, Y
   \   0000006C   870F               STD     Y+15, R16
   1242          	                buffer_tx[13] = buffer[1];
   \   0000006E   8109               LDD     R16, Y+1
   \   00000070   8B08               STD     Y+16, R16
   1243          	
   1244          	                buffer_tx[14] = '0';
   \   00000072   E300               LDI     R16, 48
   \   00000074   8B09               STD     Y+17, R16
   1245          	                buffer_tx[15] = '1';
   \   00000076   E301               LDI     R16, 49
   \   00000078   8B0A               STD     Y+18, R16
   1246          	                send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   0000007A   E322               LDI     R18, 50
   \   0000007C   E030               LDI     R19, 0
   \   0000007E   018E               MOVW    R17:R16, R29:R28
   \   00000080   5F0D               SUBI    R16, 253
   \   00000082   4F1F               SBCI    R17, 255
   \   00000084   ........           CALL    send_frame_pp_ext_broad
   1247          									
   1248          									//if(++temp==3)
   1249          										//send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1250                          }
   1251          	          	}
   \                     ??parameter_all_answer_6:
   \   00000088   9583               INC     R24
   \                     ??parameter_all_answer_4:
   \   0000008A   3283               CPI     R24, 35
   \   0000008C   F2C8               BRCS    ??parameter_all_answer_5
   1252                        frame_buffer_clear();
   \   0000008E   ....               RCALL   frame_buffer_clear
   1253          	        	}	
   1254          	
   1255          	          for(i=0;i<16;i++)
   \                     ??parameter_all_answer_3:
   \   00000090   E080               LDI     R24, 0
   \   00000092   C003               RJMP    ??parameter_all_answer_7
   1256          	          {
   1257          	          	if(ee_scenario[i].confed)
   1258          	          	{
   1259          	                CharToStr(i+2,buffer);
   1260          	                buffer_tx[14] = buffer[0];
   1261          									buffer_tx[15] = buffer[1];
   1262          	
   1263          	                //parameter scenario number
   1264          	                CharToStr(ee_scenario[i].ns_number,buffer);
   1265          									buffer_tx[10] = buffer[0];
   1266          									buffer_tx[11] = buffer[1];
   1267          									buffer_tx[12] = '0';
   1268          									buffer_tx[13] = '1';
   1269          									send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1270          	                //parameter regutation type
   1271          									CharToStr(ee_scenario[i].reg_type,buffer);
   1272          									buffer_tx[10] = buffer[0];
   1273          									buffer_tx[11] = buffer[1];
   1274          									buffer_tx[12] = '0';
   1275          									buffer_tx[13] = '3';
   1276          									send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1277          	                //parameter ID1
   1278          									CharToStr(ee_scenario[i].id[0],buffer);
   1279          									buffer_tx[10] = buffer[0];
   1280          									buffer_tx[11] = buffer[1];
   1281          									buffer_tx[12] = '1';
   1282          									buffer_tx[13] = '4';
   1283          									send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1284          							    //parameter ID2
   1285          									CharToStr(ee_scenario[i].id[1],buffer);
   1286          									buffer_tx[10] = buffer[0];
   1287          									buffer_tx[11] = buffer[1];
   1288          									buffer_tx[12] = '1';
   1289          									buffer_tx[13] = '5';
   1290          									send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1291          	                //parameter ID3
   1292          									CharToStr(ee_scenario[i].id[2]>>4,buffer);
   1293          									buffer_tx[10] = buffer[0];
   1294          									buffer_tx[11] = buffer[1];
   1295          									buffer_tx[12] = '1';
   1296          									buffer_tx[13] = '6';
   1297          									send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1298          	                //parameter unit number
   1299          									CharToStr(ee_scenario[i].key_number,buffer);
   1300          									buffer_tx[10] = buffer[0];
   1301          									buffer_tx[11] = buffer[1];
   1302          									buffer_tx[12] = '1';
   1303          									buffer_tx[13] = '7';
   1304          									send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1305          							}
   1306          							else
   1307          							{
   1308          								not_allowed_response(i+2);	
   \                     ??parameter_all_answer_8:
   \   00000094   2F01               MOV     R16, R17
   \   00000096   ....               RCALL   not_allowed_response
   1309          							}
   \                     ??parameter_all_answer_9:
   \   00000098   9583               INC     R24
   \                     ??parameter_all_answer_7:
   \   0000009A   3180               CPI     R24, 16
   \   0000009C   F008               BRCS    $+2+2
   \   0000009E   C0A5               RJMP    ??parameter_all_answer_10
   \   000000A0   2F48               MOV     R20, R24
   \   000000A2   E050               LDI     R21, 0
   \   000000A4   E007               LDI     R16, 7
   \   000000A6   E010               LDI     R17, 0
   \   000000A8   ........           CALL    ?S_EC_MUL_L02
   \   000000AC   ....               LDI     R26, LOW(ee_scenario)
   \   000000AE   ....               LDI     R27, (ee_scenario) >> 8
   \   000000B0   0FA0               ADD     R26, R16
   \   000000B2   1FB1               ADC     R27, R17
   \   000000B4   2F18               MOV     R17, R24
   \   000000B6   5F1E               SUBI    R17, 254
   \   000000B8   01AD               MOVW    R21:R20, R27:R26
   \   000000BA   5F4A               SUBI    R20, 250
   \   000000BC   4F5F               SBCI    R21, 255
   \   000000BE   ........           CALL    __eeget8_16
   \   000000C2   2300               TST     R16
   \   000000C4   F339               BREQ    ??parameter_all_answer_8
   \   000000C6   019E               MOVW    R19:R18, R29:R28
   \   000000C8   2F01               MOV     R16, R17
   \   000000CA   ........           CALL    CharToStr
   \   000000CE   8108               LD      R16, Y
   \   000000D0   8B09               STD     Y+17, R16
   \   000000D2   8109               LDD     R16, Y+1
   \   000000D4   8B0A               STD     Y+18, R16
   \   000000D6   019E               MOVW    R19:R18, R29:R28
   \   000000D8   01AD               MOVW    R21:R20, R27:R26
   \   000000DA   ........           CALL    __eeget8_16
   \   000000DE   ........           CALL    CharToStr
   \   000000E2   8108               LD      R16, Y
   \   000000E4   870D               STD     Y+13, R16
   \   000000E6   8109               LDD     R16, Y+1
   \   000000E8   870E               STD     Y+14, R16
   \   000000EA   E300               LDI     R16, 48
   \   000000EC   870F               STD     Y+15, R16
   \   000000EE   E301               LDI     R16, 49
   \   000000F0   8B08               STD     Y+16, R16
   \   000000F2   E322               LDI     R18, 50
   \   000000F4   E030               LDI     R19, 0
   \   000000F6   018E               MOVW    R17:R16, R29:R28
   \   000000F8   5F0D               SUBI    R16, 253
   \   000000FA   4F1F               SBCI    R17, 255
   \   000000FC   ........           CALL    send_frame_pp_ext_broad
   \   00000100   019E               MOVW    R19:R18, R29:R28
   \   00000102   01AD               MOVW    R21:R20, R27:R26
   \   00000104   5F4F               SUBI    R20, 255
   \   00000106   4F5F               SBCI    R21, 255
   \   00000108   ........           CALL    __eeget8_16
   \   0000010C   ........           CALL    CharToStr
   \   00000110   8108               LD      R16, Y
   \   00000112   870D               STD     Y+13, R16
   \   00000114   8109               LDD     R16, Y+1
   \   00000116   870E               STD     Y+14, R16
   \   00000118   E300               LDI     R16, 48
   \   0000011A   870F               STD     Y+15, R16
   \   0000011C   E303               LDI     R16, 51
   \   0000011E   8B08               STD     Y+16, R16
   \   00000120   E322               LDI     R18, 50
   \   00000122   E030               LDI     R19, 0
   \   00000124   018E               MOVW    R17:R16, R29:R28
   \   00000126   5F0D               SUBI    R16, 253
   \   00000128   4F1F               SBCI    R17, 255
   \   0000012A   ........           CALL    send_frame_pp_ext_broad
   \   0000012E   019E               MOVW    R19:R18, R29:R28
   \   00000130   01AD               MOVW    R21:R20, R27:R26
   \   00000132   5F4E               SUBI    R20, 254
   \   00000134   4F5F               SBCI    R21, 255
   \   00000136   ........           CALL    __eeget8_16
   \   0000013A   ........           CALL    CharToStr
   \   0000013E   8108               LD      R16, Y
   \   00000140   870D               STD     Y+13, R16
   \   00000142   8109               LDD     R16, Y+1
   \   00000144   870E               STD     Y+14, R16
   \   00000146   E301               LDI     R16, 49
   \   00000148   870F               STD     Y+15, R16
   \   0000014A   E304               LDI     R16, 52
   \   0000014C   8B08               STD     Y+16, R16
   \   0000014E   E322               LDI     R18, 50
   \   00000150   E030               LDI     R19, 0
   \   00000152   018E               MOVW    R17:R16, R29:R28
   \   00000154   5F0D               SUBI    R16, 253
   \   00000156   4F1F               SBCI    R17, 255
   \   00000158   ........           CALL    send_frame_pp_ext_broad
   \   0000015C   019E               MOVW    R19:R18, R29:R28
   \   0000015E   01AD               MOVW    R21:R20, R27:R26
   \   00000160   5F4D               SUBI    R20, 253
   \   00000162   4F5F               SBCI    R21, 255
   \   00000164   ........           CALL    __eeget8_16
   \   00000168   ........           CALL    CharToStr
   \   0000016C   8108               LD      R16, Y
   \   0000016E   870D               STD     Y+13, R16
   \   00000170   8109               LDD     R16, Y+1
   \   00000172   870E               STD     Y+14, R16
   \   00000174   E301               LDI     R16, 49
   \   00000176   870F               STD     Y+15, R16
   \   00000178   E305               LDI     R16, 53
   \   0000017A   8B08               STD     Y+16, R16
   \   0000017C   E322               LDI     R18, 50
   \   0000017E   E030               LDI     R19, 0
   \   00000180   018E               MOVW    R17:R16, R29:R28
   \   00000182   5F0D               SUBI    R16, 253
   \   00000184   4F1F               SBCI    R17, 255
   \   00000186   ........           CALL    send_frame_pp_ext_broad
   \   0000018A   019E               MOVW    R19:R18, R29:R28
   \   0000018C   01AD               MOVW    R21:R20, R27:R26
   \   0000018E   5F4C               SUBI    R20, 252
   \   00000190   4F5F               SBCI    R21, 255
   \   00000192   ........           CALL    __eeget8_16
   \   00000196   9502               SWAP    R16
   \   00000198   700F               ANDI    R16, 0x0F
   \   0000019A   ........           CALL    CharToStr
   \   0000019E   8108               LD      R16, Y
   \   000001A0   870D               STD     Y+13, R16
   \   000001A2   8109               LDD     R16, Y+1
   \   000001A4   870E               STD     Y+14, R16
   \   000001A6   E301               LDI     R16, 49
   \   000001A8   870F               STD     Y+15, R16
   \   000001AA   E306               LDI     R16, 54
   \   000001AC   8B08               STD     Y+16, R16
   \   000001AE   E322               LDI     R18, 50
   \   000001B0   E030               LDI     R19, 0
   \   000001B2   018E               MOVW    R17:R16, R29:R28
   \   000001B4   5F0D               SUBI    R16, 253
   \   000001B6   4F1F               SBCI    R17, 255
   \   000001B8   ........           CALL    send_frame_pp_ext_broad
   \   000001BC   019E               MOVW    R19:R18, R29:R28
   \   000001BE   9615               ADIW    R27:R26, 5
   \   000001C0   01AD               MOVW    R21:R20, R27:R26
   \   000001C2   ........           CALL    __eeget8_16
   \   000001C6   ........           CALL    CharToStr
   \   000001CA   8108               LD      R16, Y
   \   000001CC   870D               STD     Y+13, R16
   \   000001CE   8109               LDD     R16, Y+1
   \   000001D0   870E               STD     Y+14, R16
   \   000001D2   E301               LDI     R16, 49
   \   000001D4   870F               STD     Y+15, R16
   \   000001D6   E307               LDI     R16, 55
   \   000001D8   8B08               STD     Y+16, R16
   \   000001DA   E322               LDI     R18, 50
   \   000001DC   E030               LDI     R19, 0
   \   000001DE   018E               MOVW    R17:R16, R29:R28
   \   000001E0   5F0D               SUBI    R16, 253
   \   000001E2   4F1F               SBCI    R17, 255
   \   000001E4   ........           CALL    send_frame_pp_ext_broad
   \   000001E8   CF57               RJMP    ??parameter_all_answer_9
   1310          	          }
   1311          
   1312          	          frame_buffer_clear();
   \                     ??parameter_all_answer_10:
   \   000001EA   ....               RCALL   frame_buffer_clear
   \   000001EC   C0DB               RJMP    ??parameter_all_answer_1
   1313          	        }
   1314          	      }
   1315          	      else
   1316          	      {
   1317          	        if(g_asc_reception_buffer[6] <= 0xCF || (g_asc_reception_buffer[6] >= 0xF0 && g_asc_reception_buffer[6] <= 0xF9))
   \                     ??parameter_all_answer_0:
   \   000001EE   9100....           LDS     R16, (g_asc_reception_buffer + 6)
   \   000001F2   3D00               CPI     R16, 208
   \   000001F4   F050               BRCS    ??parameter_all_answer_11
   \   000001F6   9100....           LDS     R16, (g_asc_reception_buffer + 6)
   \   000001FA   3F00               CPI     R16, 240
   \   000001FC   F408               BRCC    $+2+2
   \   000001FE   C0D2               RJMP    ??parameter_all_answer_1
   \   00000200   9100....           LDS     R16, (g_asc_reception_buffer + 6)
   \   00000204   3F0A               CPI     R16, 250
   \   00000206   F008               BRCS    $+2+2
   \   00000208   C0CD               RJMP    ??parameter_all_answer_1
   1318          	        {
   1319          	          //every managered key object answer the specified parameter
   1320          	          //eg: D2 00 01 43 8D 00 01 00
   1321          	          if(product_information.conf_type == 0x03)
   \                     ??parameter_all_answer_11:
   \   0000020A   9100....           LDS     R16, product_information
   \   0000020E   3003               CPI     R16, 3
   \   00000210   F419               BRNE    ??parameter_all_answer_12
   1322          	          {
   1323          	          	not_allowed_response(0x01);	
   \   00000212   E001               LDI     R16, 1
   \   00000214   ....               RCALL   not_allowed_response
   \   00000216   C029               RJMP    ??parameter_all_answer_13
   1324          	          }
   1325          	          else if(g_asc_reception_buffer[6] < 35 )
   \                     ??parameter_all_answer_12:
   \   00000218   9100....           LDS     R16, (g_asc_reception_buffer + 6)
   \   0000021C   3203               CPI     R16, 35
   \   0000021E   F528               BRCC    ??parameter_all_answer_13
   1326          	          {
   1327          							if(read_KO(i) != 0xFFFF)
   \   00000220   2F08               MOV     R16, R24
   \   00000222   ........           CALL    read_KO
   \   00000226   3F0F               CPI     R16, 255
   \   00000228   EF2F               LDI     R18, 255
   \   0000022A   0712               CPC     R17, R18
   \   0000022C   F0F1               BREQ    ??parameter_all_answer_13
   1328          							{	
   1329          	            	CharToStr(read_KO(g_asc_reception_buffer[6]),buffer);
   \   0000022E   9100....           LDS     R16, (g_asc_reception_buffer + 6)
   \   00000232   ........           CALL    read_KO
   \   00000236   019E               MOVW    R19:R18, R29:R28
   \   00000238   ........           CALL    CharToStr
   1330          	            	buffer_tx[10] = buffer[0];
   \   0000023C   8108               LD      R16, Y
   \   0000023E   870D               STD     Y+13, R16
   1331          	            	buffer_tx[11] = buffer[1];
   \   00000240   8109               LDD     R16, Y+1
   \   00000242   870E               STD     Y+14, R16
   1332          	
   1333          								CharToStr(i,buffer);
   \   00000244   019E               MOVW    R19:R18, R29:R28
   \   00000246   2F08               MOV     R16, R24
   \   00000248   ........           CALL    CharToStr
   1334          								buffer_tx[12] = buffer[0];
   \   0000024C   8108               LD      R16, Y
   \   0000024E   870F               STD     Y+15, R16
   1335          	            	buffer_tx[13] = buffer[1];
   \   00000250   8109               LDD     R16, Y+1
   \   00000252   8B08               STD     Y+16, R16
   1336          	            	//buffer_tx[12] = g_reception_buffer[12];
   1337          	            	//buffer_tx[13] = g_reception_buffer[13];
   1338          	
   1339          	            	buffer_tx[14] = '0';
   \   00000254   E300               LDI     R16, 48
   \   00000256   8B09               STD     Y+17, R16
   1340          	            	buffer_tx[15] = '1';
   \   00000258   E301               LDI     R16, 49
   \   0000025A   8B0A               STD     Y+18, R16
   1341          	            	send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   0000025C   E322               LDI     R18, 50
   \   0000025E   E030               LDI     R19, 0
   \   00000260   018E               MOVW    R17:R16, R29:R28
   \   00000262   5F0D               SUBI    R16, 253
   \   00000264   4F1F               SBCI    R17, 255
   \   00000266   ........           CALL    send_frame_pp_ext_broad
   1342          							}
   1343          	          }
   1344          	
   1345          	          for(i=0;i<16;i++)
   \                     ??parameter_all_answer_13:
   \   0000026A   E080               LDI     R24, 0
   \   0000026C   C021               RJMP    ??parameter_all_answer_14
   1346          	          {
   1347          	            if(ee_scenario[i].confed == 0x00)
   1348          	            {
   1349          	              not_allowed_response(i+2);	
   1350          	            }
   1351          	            else
   1352          	            {
   1353          	            switch(g_asc_reception_buffer[6])
   1354          	            {
   1355          	              case 1: //D2 00 01 43 8D 00 01 02
   1356          									CharToStr(ee_scenario[i].ns_number,buffer);
   1357          									buffer_tx[10] = buffer[0];
   1358          									buffer_tx[11] = buffer[1];
   1359          	
   1360          									buffer_tx[12] = '0';
   1361          									buffer_tx[13] = '1';
   1362          	
   1363          	                CharToStr(i+2,buffer);
   1364          									buffer_tx[14] = buffer[0];
   1365          									buffer_tx[15] = buffer[1];
   1366          									send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1367          							  break;
   1368          	
   1369          							  case 3:
   1370          									CharToStr(ee_scenario[i].reg_type,buffer);
   1371          									buffer_tx[10] = buffer[0];
   1372          									buffer_tx[11] = buffer[1];
   1373          	
   1374          									buffer_tx[12] = '0';
   1375          									buffer_tx[13] = '3';
   1376          	
   1377          	                CharToStr(i+2,buffer);
   1378          									buffer_tx[14] = buffer[0];
   1379          									buffer_tx[15] = buffer[1];
   1380          									send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1381          							  break;
   1382          	
   1383          							  case 20:
   1384          									CharToStr(ee_scenario[i].id[0],buffer);
   1385          									buffer_tx[10] = buffer[0];
   1386          									buffer_tx[11] = buffer[1];
   1387          	
   1388          									buffer_tx[12] = '1';
   1389          									buffer_tx[13] = '4';
   1390          	
   1391          	                CharToStr(i+2,buffer);
   1392          									buffer_tx[14] = buffer[0];
   1393          									buffer_tx[15] = buffer[1];
   1394          									send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1395          							  break;
   1396          	
   1397          	              case 21:
   1398          									CharToStr(ee_scenario[i].id[1],buffer);
   1399          									buffer_tx[10] = buffer[0];
   1400          									buffer_tx[11] = buffer[1];
   1401          	
   1402          									buffer_tx[12] = '1';
   1403          									buffer_tx[13] = '5';
   1404          	
   1405          	                CharToStr(i+2,buffer);
   1406          									buffer_tx[14] = buffer[0];
   1407          									buffer_tx[15] = buffer[1];
   1408          									send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1409          	              break;
   1410          	
   1411          	              case 22:
   1412          									CharToStr(ee_scenario[i].id[2],buffer);
   1413          									buffer_tx[10] = buffer[0];
   1414          									buffer_tx[11] = buffer[1];
   1415          	
   1416          									buffer_tx[12] = '1';
   1417          									buffer_tx[13] = '6';
   1418          	
   1419          	                CharToStr(i+2,buffer);
   1420          									buffer_tx[14] = buffer[0];
   1421          									buffer_tx[15] = buffer[1];
   1422          									send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1423          	              break;
   1424          	
   1425          	              case 23:
   1426          									CharToStr(ee_scenario[i].key_number,buffer);
   \                     ??parameter_all_answer_15:
   \   0000026E   019E               MOVW    R19:R18, R29:R28
   \   00000270   5F6B               SUBI    R22, 251
   \   00000272   4F7F               SBCI    R23, 255
   \   00000274   01AB               MOVW    R21:R20, R23:R22
   \   00000276   ........           CALL    __eeget8_16
   \   0000027A   ........           CALL    CharToStr
   1427          									buffer_tx[10] = buffer[0];
   \   0000027E   8108               LD      R16, Y
   \   00000280   870D               STD     Y+13, R16
   1428          									buffer_tx[11] = buffer[1];
   \   00000282   8109               LDD     R16, Y+1
   \   00000284   870E               STD     Y+14, R16
   1429          	
   1430          									buffer_tx[12] = '1';
   \   00000286   E301               LDI     R16, 49
   \   00000288   870F               STD     Y+15, R16
   1431          									buffer_tx[13] = '7';
   \   0000028A   E307               LDI     R16, 55
   \                     ??parameter_all_answer_16:
   \   0000028C   8B08               STD     Y+16, R16
   1432          	
   1433          	                CharToStr(i+2,buffer);
   \   0000028E   019E               MOVW    R19:R18, R29:R28
   \   00000290   2F08               MOV     R16, R24
   \   00000292   5F0E               SUBI    R16, 254
   \   00000294   ........           CALL    CharToStr
   1434          									buffer_tx[14] = buffer[0];
   \   00000298   8108               LD      R16, Y
   \   0000029A   8B09               STD     Y+17, R16
   1435          									buffer_tx[15] = buffer[1];
   \   0000029C   8109               LDD     R16, Y+1
   \   0000029E   8B0A               STD     Y+18, R16
   1436          									send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   000002A0   E322               LDI     R18, 50
   \   000002A2   E030               LDI     R19, 0
   \   000002A4   018E               MOVW    R17:R16, R29:R28
   \   000002A6   5F0D               SUBI    R16, 253
   \   000002A8   4F1F               SBCI    R17, 255
   \   000002AA   ........           CALL    send_frame_pp_ext_broad
   \                     ??parameter_all_answer_17:
   \   000002AE   9583               INC     R24
   \                     ??parameter_all_answer_14:
   \   000002B0   3180               CPI     R24, 16
   \   000002B2   F008               BRCS    $+2+2
   \   000002B4   C074               RJMP    ??parameter_all_answer_18
   \   000002B6   2F48               MOV     R20, R24
   \   000002B8   E050               LDI     R21, 0
   \   000002BA   E007               LDI     R16, 7
   \   000002BC   E010               LDI     R17, 0
   \   000002BE   ........           CALL    ?S_EC_MUL_L02
   \   000002C2   ....               LDI     R22, LOW(ee_scenario)
   \   000002C4   ....               LDI     R23, (ee_scenario) >> 8
   \   000002C6   0F60               ADD     R22, R16
   \   000002C8   1F71               ADC     R23, R17
   \   000002CA   01AB               MOVW    R21:R20, R23:R22
   \   000002CC   5F4A               SUBI    R20, 250
   \   000002CE   4F5F               SBCI    R21, 255
   \   000002D0   ........           CALL    __eeget8_16
   \   000002D4   2300               TST     R16
   \   000002D6   F421               BRNE    ??parameter_all_answer_19
   \   000002D8   2F08               MOV     R16, R24
   \   000002DA   5F0E               SUBI    R16, 254
   \   000002DC   ....               RCALL   not_allowed_response
   \   000002DE   CFE7               RJMP    ??parameter_all_answer_17
   \                     ??parameter_all_answer_19:
   \   000002E0   9100....           LDS     R16, (g_asc_reception_buffer + 6)
   \   000002E4   5001               SUBI    R16, 1
   \   000002E6   F069               BREQ    ??parameter_all_answer_20
   \   000002E8   5002               SUBI    R16, 2
   \   000002EA   F0C9               BREQ    ??parameter_all_answer_21
   \   000002EC   5101               SUBI    R16, 17
   \   000002EE   F139               BREQ    ??parameter_all_answer_22
   \   000002F0   950A               DEC     R16
   \   000002F2   F1A9               BREQ    ??parameter_all_answer_23
   \   000002F4   950A               DEC     R16
   \   000002F6   F409               BRNE    $+2+2
   \   000002F8   C042               RJMP    ??parameter_all_answer_24
   \   000002FA   950A               DEC     R16
   \   000002FC   F409               BRNE    $+2+2
   \   000002FE   CFB7               RJMP    ??parameter_all_answer_15
   \   00000300   CFD6               RJMP    ??parameter_all_answer_17
   \                     ??parameter_all_answer_20:
   \   00000302   019E               MOVW    R19:R18, R29:R28
   \   00000304   01AB               MOVW    R21:R20, R23:R22
   \   00000306   ........           CALL    __eeget8_16
   \   0000030A   ........           CALL    CharToStr
   \   0000030E   8108               LD      R16, Y
   \   00000310   870D               STD     Y+13, R16
   \   00000312   8109               LDD     R16, Y+1
   \   00000314   870E               STD     Y+14, R16
   \   00000316   E300               LDI     R16, 48
   \   00000318   870F               STD     Y+15, R16
   \   0000031A   E301               LDI     R16, 49
   \   0000031C   CFB7               RJMP    ??parameter_all_answer_16
   \                     ??parameter_all_answer_21:
   \   0000031E   019E               MOVW    R19:R18, R29:R28
   \   00000320   5F6F               SUBI    R22, 255
   \   00000322   4F7F               SBCI    R23, 255
   \   00000324   01AB               MOVW    R21:R20, R23:R22
   \   00000326   ........           CALL    __eeget8_16
   \   0000032A   ........           CALL    CharToStr
   \   0000032E   8108               LD      R16, Y
   \   00000330   870D               STD     Y+13, R16
   \   00000332   8109               LDD     R16, Y+1
   \   00000334   870E               STD     Y+14, R16
   \   00000336   E300               LDI     R16, 48
   \   00000338   870F               STD     Y+15, R16
   \   0000033A   E303               LDI     R16, 51
   \   0000033C   CFA7               RJMP    ??parameter_all_answer_16
   \                     ??parameter_all_answer_22:
   \   0000033E   019E               MOVW    R19:R18, R29:R28
   \   00000340   5F6E               SUBI    R22, 254
   \   00000342   4F7F               SBCI    R23, 255
   \   00000344   01AB               MOVW    R21:R20, R23:R22
   \   00000346   ........           CALL    __eeget8_16
   \   0000034A   ........           CALL    CharToStr
   \   0000034E   8108               LD      R16, Y
   \   00000350   870D               STD     Y+13, R16
   \   00000352   8109               LDD     R16, Y+1
   \   00000354   870E               STD     Y+14, R16
   \   00000356   E301               LDI     R16, 49
   \   00000358   870F               STD     Y+15, R16
   \   0000035A   E304               LDI     R16, 52
   \   0000035C   CF97               RJMP    ??parameter_all_answer_16
   \                     ??parameter_all_answer_23:
   \   0000035E   019E               MOVW    R19:R18, R29:R28
   \   00000360   5F6D               SUBI    R22, 253
   \   00000362   4F7F               SBCI    R23, 255
   \   00000364   01AB               MOVW    R21:R20, R23:R22
   \   00000366   ........           CALL    __eeget8_16
   \   0000036A   ........           CALL    CharToStr
   \   0000036E   8108               LD      R16, Y
   \   00000370   870D               STD     Y+13, R16
   \   00000372   8109               LDD     R16, Y+1
   \   00000374   870E               STD     Y+14, R16
   \   00000376   E301               LDI     R16, 49
   \   00000378   870F               STD     Y+15, R16
   \   0000037A   E305               LDI     R16, 53
   \   0000037C   CF87               RJMP    ??parameter_all_answer_16
   \                     ??parameter_all_answer_24:
   \   0000037E   019E               MOVW    R19:R18, R29:R28
   \   00000380   5F6C               SUBI    R22, 252
   \   00000382   4F7F               SBCI    R23, 255
   \   00000384   01AB               MOVW    R21:R20, R23:R22
   \   00000386   ........           CALL    __eeget8_16
   \   0000038A   ........           CALL    CharToStr
   \   0000038E   8108               LD      R16, Y
   \   00000390   870D               STD     Y+13, R16
   \   00000392   8109               LDD     R16, Y+1
   \   00000394   870E               STD     Y+14, R16
   \   00000396   E301               LDI     R16, 49
   \   00000398   870F               STD     Y+15, R16
   \   0000039A   E306               LDI     R16, 54
   \   0000039C   CF77               RJMP    ??parameter_all_answer_16
   1437          	              break;
   1438          	
   1439          	              default: break;
   1440          						  }
   1441          	            }
   1442          	          }
   1443                      frame_buffer_clear();
   \                     ??parameter_all_answer_18:
   \   0000039E   ....               RCALL   frame_buffer_clear
   1444                      manual_reception_buffer_clear();
   \   000003A0   ........           CALL    manual_reception_buffer_clear
   1445          	        }
   1446          	      }	
   1447          }
   \                     ??parameter_all_answer_1:
   \   000003A4   9664               ADIW    R29:R28, 20
   \   000003A6   E0E4               LDI     R30, 4
   \   000003A8   ........           JMP     ?EPILOGUE_B4_L09
   1448          

   \                                 In  segment CODE, align 2, keep-with-next
   1449          void parameter_specified_index_answer(void)
   \                     parameter_specified_index_answer:
   1450          {
   \   00000000   938A               ST      -Y, R24
   \   00000002   9764               SBIW    R29:R28, 20
   1451          	unsigned char buffer_tx[17] = "D20001348D000000";
   \   00000004   019E               MOVW    R19:R18, R29:R28
   \   00000006   5F2D               SUBI    R18, 253
   \   00000008   4F3F               SBCI    R19, 255
   \   0000000A   0189               MOVW    R17:R16, R19:R18
   \   0000000C   ....               LDI     R30, LOW(`?<Constant "D20001348D000000">_3`)
   \   0000000E   ....               LDI     R31, (`?<Constant "D20001348D000000">_3`) >> 8
   \   00000010   E141               LDI     R20, 17
   \   00000012   E050               LDI     R21, 0
   \   00000014   ........           CALL    ?ML_FLASH_SRAM_16EC_16_L07
   \   00000018   ....               LDI     R30, LOW(g_asc_reception_buffer)
   \   0000001A   ....               LDI     R31, (g_asc_reception_buffer) >> 8
   \   0000001C   8105               LDD     R16, Z+5
   \   0000001E   FD02               SBRC    R16, 2
   \   00000020   C0E1               RJMP    ??parameter_specified_index_answer_0
   1452            unsigned char buffer[3];
   1453            unsigned char temp;
   1454          	unsigned char i;
   1455          	
   1456          			if(GetBit(g_asc_reception_buffer[5],2) == 0)
   1457          	    {
   1458          	      if(g_asc_reception_buffer[6] <= 0xCF)
   \   00000022   9100....           LDS     R16, (g_asc_reception_buffer + 6)
   \   00000026   3D00               CPI     R16, 208
   \   00000028   F008               BRCS    $+2+2
   \   0000002A   C0D2               RJMP    ??parameter_specified_index_answer_1
   1459          	      {
   1460          	        if(g_asc_reception_buffer[7] == 0x01)   // key object 1
   \   0000002C   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   00000030   3001               CPI     R16, 1
   \   00000032   F599               BRNE    ??parameter_specified_index_answer_2
   1461          	        {
   1462          	        	if(product_information.conf_type == 3)
   \   00000034   9100....           LDS     R16, product_information
   \   00000038   3003               CPI     R16, 3
   \   0000003A   F4C1               BRNE    ??parameter_specified_index_answer_3
   1463          	        	{
   1464          	        		buffer_tx[9] = 'B';
   \   0000003C   E402               LDI     R16, 66
   \   0000003E   870C               STD     Y+12, R16
   1465          	        		buffer_tx[10] = KO[0];
   \   00000040   ....               LDI     R30, LOW(KO)
   \   00000042   ....               LDI     R31, (KO) >> 8
   \   00000044   8100               LD      R16, Z
   \   00000046   870D               STD     Y+13, R16
   1466          	        		buffer_tx[11] = KO[1];
   \   00000048   8101               LDD     R16, Z+1
   \   0000004A   870E               STD     Y+14, R16
   1467          	        		buffer_tx[12] = KO[2];
   \   0000004C   8102               LDD     R16, Z+2
   \   0000004E   870F               STD     Y+15, R16
   1468          	        		buffer_tx[13] = KO[3];
   \   00000050   8103               LDD     R16, Z+3
   \                     ??parameter_specified_index_answer_4:
   \   00000052   8B08               STD     Y+16, R16
   1469          	        		buffer_tx[14] = '0';
   \   00000054   E300               LDI     R16, 48
   \   00000056   8B09               STD     Y+17, R16
   1470          	        		buffer_tx[15] = '1';
   \   00000058   E301               LDI     R16, 49
   \                     ??parameter_specified_index_answer_5:
   \   0000005A   8B0A               STD     Y+18, R16
   1471          	        		send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   0000005C   E322               LDI     R18, 50
   \   0000005E   E030               LDI     R19, 0
   \   00000060   018E               MOVW    R17:R16, R29:R28
   \   00000062   5F0D               SUBI    R16, 253
   \   00000064   4F1F               SBCI    R17, 255
   \   00000066   ........           CALL    send_frame_pp_ext_broad
   \   0000006A   C1DB               RJMP    ??parameter_specified_index_answer_6
   1472          	        	}
   1473          	        	else if(g_asc_reception_buffer[6] <= 34)
   \                     ??parameter_specified_index_answer_3:
   \   0000006C   9100....           LDS     R16, (g_asc_reception_buffer + 6)
   \   00000070   3203               CPI     R16, 35
   \   00000072   F488               BRCC    ??parameter_specified_index_answer_7
   1474          	          {
   1475          	            CharToStr(read_KO(g_asc_reception_buffer[6]),buffer);
   \   00000074   9100....           LDS     R16, (g_asc_reception_buffer + 6)
   \   00000078   ........           CALL    read_KO
   \   0000007C   019E               MOVW    R19:R18, R29:R28
   \   0000007E   ........           CALL    CharToStr
   1476          	            buffer_tx[10] = buffer[0];
   \   00000082   8108               LD      R16, Y
   \   00000084   870D               STD     Y+13, R16
   1477          	            buffer_tx[11] = buffer[1];
   \   00000086   8109               LDD     R16, Y+1
   \   00000088   870E               STD     Y+14, R16
   1478          	
   1479          	            buffer_tx[12] = g_reception_buffer[12];
   \   0000008A   ....               LDI     R30, LOW(g_reception_buffer)
   \   0000008C   ....               LDI     R31, (g_reception_buffer) >> 8
   \   0000008E   8504               LDD     R16, Z+12
   \   00000090   870F               STD     Y+15, R16
   1480          	            buffer_tx[13] = g_reception_buffer[13];
   \   00000092   8505               LDD     R16, Z+13
   \   00000094   CFDE               RJMP    ??parameter_specified_index_answer_4
   1481          	
   1482          	            buffer_tx[14] = '0';
   1483          	            buffer_tx[15] = '1';
   1484          	            send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1485          	          }
   1486          	          else //answer 8D request error frame
   1487          	         	{
   1488          	         		parameter_request_error_frame();
   \                     ??parameter_specified_index_answer_7:
   \   00000096   ....               RCALL   parameter_request_error_frame
   \   00000098   C1C4               RJMP    ??parameter_specified_index_answer_6
   1489          	         	}
   1490          	        }
   1491          	        else
   1492          	        {
   1493          	          if(g_asc_reception_buffer[7] >= 2 && g_asc_reception_buffer[7] <= NUM_KO_TOTAL)
   \                     ??parameter_specified_index_answer_2:
   \   0000009A   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   0000009E   3002               CPI     R16, 2
   \   000000A0   F408               BRCC    $+2+2
   \   000000A2   C1BF               RJMP    ??parameter_specified_index_answer_6
   \   000000A4   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   000000A8   3102               CPI     R16, 18
   \   000000AA   F008               BRCS    $+2+2
   \   000000AC   C1BA               RJMP    ??parameter_specified_index_answer_6
   1494          	          {
   1495          	          	if(ee_scenario[g_asc_reception_buffer[7] - 2].confed == 0)
   \   000000AE   ....               LDI     R18, LOW((ee_scenario - 8))
   \   000000B0   ....               LDI     R19, HIGH((ee_scenario - 8))
   \   000000B2   9140....           LDS     R20, (g_asc_reception_buffer + 7)
   \   000000B6   E007               LDI     R16, 7
   \   000000B8   E010               LDI     R17, 0
   \   000000BA   ........           CALL    ?S_EC_MUL_L02
   \   000000BE   0F20               ADD     R18, R16
   \   000000C0   1F31               ADC     R19, R17
   \   000000C2   01A9               MOVW    R21:R20, R19:R18
   \   000000C4   ........           CALL    __eeget8_16
   \   000000C8   2300               TST     R16
   \   000000CA   F4A1               BRNE    ??parameter_specified_index_answer_8
   1496          	          	{
   1497          	          		buffer_tx[9] = 'B';
   \   000000CC   E402               LDI     R16, 66
   \   000000CE   870C               STD     Y+12, R16
   1498          	        			buffer_tx[10] = '0';
   \   000000D0   E300               LDI     R16, 48
   \   000000D2   870D               STD     Y+13, R16
   1499          	        			buffer_tx[11] = '1';
   \   000000D4   E301               LDI     R16, 49
   \   000000D6   870E               STD     Y+14, R16
   1500          	        			buffer_tx[12] = 'A';
   \   000000D8   E401               LDI     R16, 65
   \   000000DA   870F               STD     Y+15, R16
   1501          	        			buffer_tx[13] = 'F';
   \   000000DC   E406               LDI     R16, 70
   \   000000DE   8B08               STD     Y+16, R16
   1502          	        			temp = g_asc_reception_buffer[7];
   \   000000E0   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   1503          	        			SetBit(temp,7);
   1504          	        			CharToStr(temp,buffer);
   \   000000E4   019E               MOVW    R19:R18, R29:R28
   \   000000E6   6800               ORI     R16, 0x80
   \   000000E8   ........           CALL    CharToStr
   1505          	        			buffer_tx[14] = buffer[0];
   \   000000EC   8108               LD      R16, Y
   \   000000EE   8B09               STD     Y+17, R16
   1506          	        			buffer_tx[15] = buffer[1];
   \   000000F0   8109               LDD     R16, Y+1
   \   000000F2   CFB3               RJMP    ??parameter_specified_index_answer_5
   1507          	        			send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1508          	          	}
   1509          	          	else
   1510          	          	{
   1511          	             	switch(g_asc_reception_buffer[6])
   \                     ??parameter_specified_index_answer_8:
   \   000000F4   9100....           LDS     R16, (g_asc_reception_buffer + 6)
   \   000000F8   5001               SUBI    R16, 1
   \   000000FA   F059               BREQ    ??parameter_specified_index_answer_9
   \   000000FC   5002               SUBI    R16, 2
   \   000000FE   F141               BREQ    ??parameter_specified_index_answer_10
   \   00000100   5101               SUBI    R16, 17
   \   00000102   F151               BREQ    ??parameter_specified_index_answer_11
   \   00000104   950A               DEC     R16
   \   00000106   F161               BREQ    ??parameter_specified_index_answer_12
   \   00000108   950A               DEC     R16
   \   0000010A   F171               BREQ    ??parameter_specified_index_answer_13
   \   0000010C   950A               DEC     R16
   \   0000010E   F1F1               BREQ    ??parameter_specified_index_answer_14
   \   00000110   C05C               RJMP    ??parameter_specified_index_answer_15
   1512          	            	{
   1513          	              case 1: //D2 00 01 43 8D 00 01 02
   1514          									CharToStr(ee_scenario[g_asc_reception_buffer[7] - 2].ns_number,buffer);
   \                     ??parameter_specified_index_answer_9:
   \   00000112   019E               MOVW    R19:R18, R29:R28
   \   00000114   ....               LDI     R22, LOW((ee_scenario - 14))
   \   00000116   ....               LDI     R23, HIGH((ee_scenario - 14))
   \                     ??parameter_specified_index_answer_16:
   \   00000118   9140....           LDS     R20, (g_asc_reception_buffer + 7)
   \   0000011C   E050               LDI     R21, 0
   \   0000011E   E007               LDI     R16, 7
   \   00000120   E010               LDI     R17, 0
   \   00000122   ........           CALL    ?S_EC_MUL_L02
   \   00000126   0F60               ADD     R22, R16
   \   00000128   1F71               ADC     R23, R17
   \   0000012A   01AB               MOVW    R21:R20, R23:R22
   \   0000012C   ........           CALL    __eeget8_16
   \                     ??parameter_specified_index_answer_17:
   \   00000130   ........           CALL    CharToStr
   1515          									buffer_tx[10] = buffer[0];
   \   00000134   8108               LD      R16, Y
   \   00000136   870D               STD     Y+13, R16
   1516          									buffer_tx[11] = buffer[1];
   \   00000138   8109               LDD     R16, Y+1
   \   0000013A   870E               STD     Y+14, R16
   1517          	
   1518          									buffer_tx[12] = g_reception_buffer[12];
   \   0000013C   ....               LDI     R30, LOW(g_reception_buffer)
   \   0000013E   ....               LDI     R31, (g_reception_buffer) >> 8
   \   00000140   8504               LDD     R16, Z+12
   \   00000142   870F               STD     Y+15, R16
   1519          									buffer_tx[13] = g_reception_buffer[13];
   \   00000144   8505               LDD     R16, Z+13
   \   00000146   8B08               STD     Y+16, R16
   1520          	
   1521          									buffer_tx[14] = g_reception_buffer[14];
   \   00000148   8506               LDD     R16, Z+14
   \   0000014A   8B09               STD     Y+17, R16
   1522          									buffer_tx[15] = g_reception_buffer[15];
   \   0000014C   8507               LDD     R16, Z+15
   \   0000014E   CF85               RJMP    ??parameter_specified_index_answer_5
   1523          									send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1524          							  break;
   1525          	
   1526          							  case 3:
   1527          									CharToStr(ee_scenario[g_asc_reception_buffer[7] - 2].reg_type,buffer);
   \                     ??parameter_specified_index_answer_10:
   \   00000150   019E               MOVW    R19:R18, R29:R28
   \   00000152   ....               LDI     R22, LOW((ee_scenario - 13))
   \   00000154   ....               LDI     R23, HIGH((ee_scenario - 13))
   \   00000156   CFE0               RJMP    ??parameter_specified_index_answer_16
   1528          									buffer_tx[10] = buffer[0];
   1529          									buffer_tx[11] = buffer[1];
   1530          	
   1531          									buffer_tx[12] = g_reception_buffer[12];
   1532          									buffer_tx[13] = g_reception_buffer[13];
   1533          	
   1534          									buffer_tx[14] = g_reception_buffer[14];
   1535          									buffer_tx[15] = g_reception_buffer[15];
   1536          									send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1537          							  break;
   1538          	
   1539          							  case 20:
   1540          									CharToStr(ee_scenario[g_asc_reception_buffer[7] - 2].id[0],buffer);
   \                     ??parameter_specified_index_answer_11:
   \   00000158   019E               MOVW    R19:R18, R29:R28
   \   0000015A   ....               LDI     R22, LOW((ee_scenario - 12))
   \   0000015C   ....               LDI     R23, HIGH((ee_scenario - 12))
   \   0000015E   CFDC               RJMP    ??parameter_specified_index_answer_16
   1541          									buffer_tx[10] = buffer[0];
   1542          									buffer_tx[11] = buffer[1];
   1543          	
   1544          									buffer_tx[12] = g_reception_buffer[12];
   1545          									buffer_tx[13] = g_reception_buffer[13];
   1546          	
   1547          									buffer_tx[14] = g_reception_buffer[14];
   1548          									buffer_tx[15] = g_reception_buffer[15];
   1549          									send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1550          							  break;
   1551          	
   1552          	              case 21:
   1553          									CharToStr(ee_scenario[g_asc_reception_buffer[7] - 2].id[1],buffer);
   \                     ??parameter_specified_index_answer_12:
   \   00000160   019E               MOVW    R19:R18, R29:R28
   \   00000162   ....               LDI     R22, LOW((ee_scenario - 11))
   \   00000164   ....               LDI     R23, HIGH((ee_scenario - 11))
   \   00000166   CFD8               RJMP    ??parameter_specified_index_answer_16
   1554          									buffer_tx[10] = buffer[0];
   1555          									buffer_tx[11] = buffer[1];
   1556          	
   1557          									buffer_tx[12] = g_reception_buffer[12];
   1558          									buffer_tx[13] = g_reception_buffer[13];
   1559          	
   1560          									buffer_tx[14] = g_reception_buffer[14];
   1561          									buffer_tx[15] = g_reception_buffer[15];
   1562          									send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1563          	              break;
   1564          	
   1565          	              case 22:
   1566          									CharToStr(ee_scenario[g_asc_reception_buffer[7] - 2].id[2]>>4,buffer);
   \                     ??parameter_specified_index_answer_13:
   \   00000168   019E               MOVW    R19:R18, R29:R28
   \   0000016A   ....               LDI     R22, LOW((ee_scenario - 10))
   \   0000016C   ....               LDI     R23, HIGH((ee_scenario - 10))
   \   0000016E   9140....           LDS     R20, (g_asc_reception_buffer + 7)
   \   00000172   E050               LDI     R21, 0
   \   00000174   E007               LDI     R16, 7
   \   00000176   E010               LDI     R17, 0
   \   00000178   ........           CALL    ?S_EC_MUL_L02
   \   0000017C   0F60               ADD     R22, R16
   \   0000017E   1F71               ADC     R23, R17
   \   00000180   01AB               MOVW    R21:R20, R23:R22
   \   00000182   ........           CALL    __eeget8_16
   \   00000186   9502               SWAP    R16
   \   00000188   700F               ANDI    R16, 0x0F
   \   0000018A   CFD2               RJMP    ??parameter_specified_index_answer_17
   1567          									buffer_tx[10] = buffer[0];
   1568          									buffer_tx[11] = buffer[1];
   1569          	
   1570          									buffer_tx[12] = g_reception_buffer[12];
   1571          									buffer_tx[13] = g_reception_buffer[13];
   1572          	
   1573          									buffer_tx[14] = g_reception_buffer[14];
   1574          									buffer_tx[15] = g_reception_buffer[15];
   1575          									send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1576          	              break;
   1577          	
   1578          	              case 23:
   1579          									CharToStr(ee_scenario[g_asc_reception_buffer[7] - 2].key_number,buffer);
   \                     ??parameter_specified_index_answer_14:
   \   0000018C   019E               MOVW    R19:R18, R29:R28
   \   0000018E   ....               LDI     R22, LOW((ee_scenario - 9))
   \   00000190   ....               LDI     R23, HIGH((ee_scenario - 9))
   \   00000192   9140....           LDS     R20, (g_asc_reception_buffer + 7)
   \   00000196   E050               LDI     R21, 0
   \   00000198   E007               LDI     R16, 7
   \   0000019A   E010               LDI     R17, 0
   \   0000019C   ........           CALL    ?S_EC_MUL_L02
   \   000001A0   0F60               ADD     R22, R16
   \   000001A2   1F71               ADC     R23, R17
   \   000001A4   01AB               MOVW    R21:R20, R23:R22
   \   000001A6   ........           CALL    __eeget8_16
   \   000001AA   ........           CALL    CharToStr
   1580          									buffer_tx[10] = buffer[0];
   \   000001AE   8108               LD      R16, Y
   \   000001B0   870D               STD     Y+13, R16
   1581          									buffer_tx[11] = buffer[1];
   \   000001B2   8109               LDD     R16, Y+1
   \   000001B4   870E               STD     Y+14, R16
   1582          	
   1583          									buffer_tx[12] = g_reception_buffer[12];
   \   000001B6   ....               LDI     R30, LOW(g_reception_buffer)
   \   000001B8   ....               LDI     R31, (g_reception_buffer) >> 8
   \   000001BA   8504               LDD     R16, Z+12
   \   000001BC   870F               STD     Y+15, R16
   1584          									buffer_tx[13] = g_reception_buffer[13];
   \   000001BE   8505               LDD     R16, Z+13
   \   000001C0   8B08               STD     Y+16, R16
   1585          	
   1586          									buffer_tx[14] = g_reception_buffer[14];
   \   000001C2   8506               LDD     R16, Z+14
   \   000001C4   8B09               STD     Y+17, R16
   1587          									buffer_tx[15] = g_reception_buffer[15];
   \   000001C6   8507               LDD     R16, Z+15
   \   000001C8   CF48               RJMP    ??parameter_specified_index_answer_5
   1588          									send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1589          	              break;
   1590          	
   1591          	              default:
   1592          	              	not_allowed_response(g_asc_reception_buffer[7]);
   \                     ??parameter_specified_index_answer_15:
   \   000001CA   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   000001CE   C128               RJMP    ??parameter_specified_index_answer_18
   1593          	              break;
   1594          						  }
   1595          						}
   1596          	          }
   1597          	        }
   1598          	      }
   1599          	      else if(g_asc_reception_buffer[6] >= 0xFA && g_asc_reception_buffer[6] <= 0xF9) //for updated
   \                     ??parameter_specified_index_answer_1:
   \   000001D0   9100....           LDS     R16, (g_asc_reception_buffer + 6)
   \   000001D4   3F0A               CPI     R16, 250
   \   000001D6   F3C8               BRCS    ??parameter_specified_index_answer_15
   \   000001D8   9100....           LDS     R16, (g_asc_reception_buffer + 6)
   \   000001DC   3F0A               CPI     R16, 250
   \   000001DE   F408               BRCC    $+2+2
   \   000001E0   C120               RJMP    ??parameter_specified_index_answer_6
   1600          	      {
   1601          	
   1602          	      }
   1603          	      else
   1604          	      {
   1605          	       	not_allowed_response(g_asc_reception_buffer[7]);
   \   000001E2   CFF3               RJMP    ??parameter_specified_index_answer_15
   1606          	      }
   1607          	    }
   1608          	    else //every managed parameter
   1609          	    {
   1610          	      if(g_asc_reception_buffer[6] == 0x00)   //every parameter accord to the specified key object number
   \                     ??parameter_specified_index_answer_0:
   \   000001E4   9100....           LDS     R16, (g_asc_reception_buffer + 6)
   \   000001E8   2300               TST     R16
   \   000001EA   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   000001EE   F009               BREQ    $+2+2
   \   000001F0   C117               RJMP    ??parameter_specified_index_answer_18
   1611          	      {
   1612          	        if(g_asc_reception_buffer[7] == 0x01) //main key object   D2 00 01 43 8D 04 00 01
   \   000001F2   3001               CPI     R16, 1
   \   000001F4   F589               BRNE    ??parameter_specified_index_answer_19
   1613          	        {
   1614                      if(product_information.conf_type == NONE_CONFED)
   \   000001F6   9100....           LDS     R16, product_information
   \   000001FA   3003               CPI     R16, 3
   \   000001FC   F411               BRNE    ??parameter_specified_index_answer_20
   1615                      {
   1616                        KO_answer_frame();
   \   000001FE   ....               RCALL   KO_answer_frame
   \   00000200   C029               RJMP    ??parameter_specified_index_answer_21
   1617                      }
   1618                      else
   1619                      {
   1620          							temp = 0;
   1621          	            for(i=1;i<35;i++)
   \                     ??parameter_specified_index_answer_20:
   \   00000202   E081               LDI     R24, 1
   \   00000204   C025               RJMP    ??parameter_specified_index_answer_22
   1622          	            {
   1623                          if(read_KO(i) != 0xFFFF)
   \                     ??parameter_specified_index_answer_23:
   \   00000206   2F08               MOV     R16, R24
   \   00000208   ........           CALL    read_KO
   \   0000020C   3F0F               CPI     R16, 255
   \   0000020E   EF2F               LDI     R18, 255
   \   00000210   0712               CPC     R17, R18
   \   00000212   F0E9               BREQ    ??parameter_specified_index_answer_24
   1624                          {
   1625          	                CharToStr(read_KO(i),buffer);
   \   00000214   2F08               MOV     R16, R24
   \   00000216   ........           CALL    read_KO
   \   0000021A   019E               MOVW    R19:R18, R29:R28
   \   0000021C   ........           CALL    CharToStr
   1626          	                buffer_tx[10] = buffer[0];
   \   00000220   8108               LD      R16, Y
   \   00000222   870D               STD     Y+13, R16
   1627          	                buffer_tx[11] = buffer[1];
   \   00000224   8109               LDD     R16, Y+1
   \   00000226   870E               STD     Y+14, R16
   1628          
   1629          	                CharToStr(i,buffer);
   \   00000228   019E               MOVW    R19:R18, R29:R28
   \   0000022A   2F08               MOV     R16, R24
   \   0000022C   ........           CALL    CharToStr
   1630          	                buffer_tx[12] = buffer[0];
   \   00000230   8108               LD      R16, Y
   \   00000232   870F               STD     Y+15, R16
   1631          	                buffer_tx[13] = buffer[1];
   \   00000234   8109               LDD     R16, Y+1
   \   00000236   8B08               STD     Y+16, R16
   1632          	            		
   1633          	                buffer_tx[14] = '0';
   \   00000238   E300               LDI     R16, 48
   \   0000023A   8B09               STD     Y+17, R16
   1634          	                buffer_tx[15] = '1';
   \   0000023C   E301               LDI     R16, 49
   \   0000023E   8B0A               STD     Y+18, R16
   1635          	                send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   00000240   E322               LDI     R18, 50
   \   00000242   E030               LDI     R19, 0
   \   00000244   018E               MOVW    R17:R16, R29:R28
   \   00000246   5F0D               SUBI    R16, 253
   \   00000248   4F1F               SBCI    R17, 255
   \   0000024A   ........           CALL    send_frame_pp_ext_broad
   1636                          }
   1637          	            }
   \                     ??parameter_specified_index_answer_24:
   \   0000024E   9583               INC     R24
   \                     ??parameter_specified_index_answer_22:
   \   00000250   3283               CPI     R24, 35
   \   00000252   F2C8               BRCS    ??parameter_specified_index_answer_23
   1638                      }
   1639                      frame_buffer_clear();
   \                     ??parameter_specified_index_answer_21:
   \   00000254   ....               RCALL   frame_buffer_clear
   \   00000256   C0E5               RJMP    ??parameter_specified_index_answer_6
   1640          	        }
   1641          	        else if(g_asc_reception_buffer[7] >= 2 && g_asc_reception_buffer[7] <= NUM_KO_TOTAL) // 16 IR scenario answer Eg: D2 00 01 43 8D 04 00 02
   \                     ??parameter_specified_index_answer_19:
   \   00000258   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   0000025C   3002               CPI     R16, 2
   \   0000025E   F408               BRCC    $+2+2
   \   00000260   C0E0               RJMP    ??parameter_specified_index_answer_6
   \   00000262   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   00000266   3102               CPI     R16, 18
   \   00000268   F008               BRCS    $+2+2
   \   0000026A   C0DB               RJMP    ??parameter_specified_index_answer_6
   1642          	        {
   1643                      if(ee_scenario[g_asc_reception_buffer[7] - 2].confed == 0)
   \   0000026C   ....               LDI     R18, LOW((ee_scenario - 8))
   \   0000026E   ....               LDI     R19, HIGH((ee_scenario - 8))
   \   00000270   9140....           LDS     R20, (g_asc_reception_buffer + 7)
   \   00000274   E007               LDI     R16, 7
   \   00000276   E010               LDI     R17, 0
   \   00000278   ........           CALL    ?S_EC_MUL_L02
   \   0000027C   0F20               ADD     R18, R16
   \   0000027E   1F31               ADC     R19, R17
   \   00000280   01A9               MOVW    R21:R20, R19:R18
   \   00000282   ........           CALL    __eeget8_16
   \   00000286   2300               TST     R16
   \   00000288   F411               BRNE    ??parameter_specified_index_answer_25
   1644                      {
   1645                        KO_answer_frame();
   \   0000028A   ....               RCALL   KO_answer_frame
   \   0000028C   C0CA               RJMP    ??parameter_specified_index_answer_6
   1646                      }
   1647                      else
   1648                      {
   1649          	                buffer_tx[14] = g_reception_buffer[14];
   \                     ??parameter_specified_index_answer_25:
   \   0000028E   ....               LDI     R30, LOW(g_reception_buffer)
   \   00000290   ....               LDI     R31, (g_reception_buffer) >> 8
   \   00000292   8506               LDD     R16, Z+14
   \   00000294   8B09               STD     Y+17, R16
   1650          									buffer_tx[15] = g_reception_buffer[15];
   \   00000296   8507               LDD     R16, Z+15
   \   00000298   8B0A               STD     Y+18, R16
   1651          	
   1652          	                //parameter scenario number
   1653          	                CharToStr(ee_scenario[g_asc_reception_buffer[7] - 2].ns_number,buffer);
   \   0000029A   019E               MOVW    R19:R18, R29:R28
   \   0000029C   ....               LDI     R22, LOW((ee_scenario - 14))
   \   0000029E   ....               LDI     R23, HIGH((ee_scenario - 14))
   \   000002A0   9140....           LDS     R20, (g_asc_reception_buffer + 7)
   \   000002A4   E050               LDI     R21, 0
   \   000002A6   E007               LDI     R16, 7
   \   000002A8   E010               LDI     R17, 0
   \   000002AA   ........           CALL    ?S_EC_MUL_L02
   \   000002AE   0F60               ADD     R22, R16
   \   000002B0   1F71               ADC     R23, R17
   \   000002B2   01AB               MOVW    R21:R20, R23:R22
   \   000002B4   ........           CALL    __eeget8_16
   \   000002B8   ........           CALL    CharToStr
   1654          									buffer_tx[10] = buffer[0];
   \   000002BC   8108               LD      R16, Y
   \   000002BE   870D               STD     Y+13, R16
   1655          									buffer_tx[11] = buffer[1];
   \   000002C0   8109               LDD     R16, Y+1
   \   000002C2   870E               STD     Y+14, R16
   1656          									buffer_tx[12] = '0';
   \   000002C4   E300               LDI     R16, 48
   \   000002C6   870F               STD     Y+15, R16
   1657          									buffer_tx[13] = '1';
   \   000002C8   E301               LDI     R16, 49
   \   000002CA   8B08               STD     Y+16, R16
   1658          									send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   000002CC   E322               LDI     R18, 50
   \   000002CE   E030               LDI     R19, 0
   \   000002D0   018E               MOVW    R17:R16, R29:R28
   \   000002D2   5F0D               SUBI    R16, 253
   \   000002D4   4F1F               SBCI    R17, 255
   \   000002D6   ........           CALL    send_frame_pp_ext_broad
   1659          	                //parameter regutation type
   1660          									CharToStr(ee_scenario[g_asc_reception_buffer[7] - 2].reg_type,buffer);
   \   000002DA   019E               MOVW    R19:R18, R29:R28
   \   000002DC   ....               LDI     R22, LOW((ee_scenario - 13))
   \   000002DE   ....               LDI     R23, HIGH((ee_scenario - 13))
   \   000002E0   9140....           LDS     R20, (g_asc_reception_buffer + 7)
   \   000002E4   E050               LDI     R21, 0
   \   000002E6   E007               LDI     R16, 7
   \   000002E8   E010               LDI     R17, 0
   \   000002EA   ........           CALL    ?S_EC_MUL_L02
   \   000002EE   0F60               ADD     R22, R16
   \   000002F0   1F71               ADC     R23, R17
   \   000002F2   01AB               MOVW    R21:R20, R23:R22
   \   000002F4   ........           CALL    __eeget8_16
   \   000002F8   ........           CALL    CharToStr
   1661          									buffer_tx[10] = buffer[0];
   \   000002FC   8108               LD      R16, Y
   \   000002FE   870D               STD     Y+13, R16
   1662          									buffer_tx[11] = buffer[1];
   \   00000300   8109               LDD     R16, Y+1
   \   00000302   870E               STD     Y+14, R16
   1663          									buffer_tx[12] = '0';
   \   00000304   E300               LDI     R16, 48
   \   00000306   870F               STD     Y+15, R16
   1664          									buffer_tx[13] = '3';
   \   00000308   E303               LDI     R16, 51
   \   0000030A   8B08               STD     Y+16, R16
   1665          									send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   0000030C   E322               LDI     R18, 50
   \   0000030E   E030               LDI     R19, 0
   \   00000310   018E               MOVW    R17:R16, R29:R28
   \   00000312   5F0D               SUBI    R16, 253
   \   00000314   4F1F               SBCI    R17, 255
   \   00000316   ........           CALL    send_frame_pp_ext_broad
   1666          	                //parameter ID1
   1667          									CharToStr(ee_scenario[g_asc_reception_buffer[7] - 2].id[0],buffer);
   \   0000031A   019E               MOVW    R19:R18, R29:R28
   \   0000031C   ....               LDI     R22, LOW((ee_scenario - 12))
   \   0000031E   ....               LDI     R23, HIGH((ee_scenario - 12))
   \   00000320   9140....           LDS     R20, (g_asc_reception_buffer + 7)
   \   00000324   E050               LDI     R21, 0
   \   00000326   E007               LDI     R16, 7
   \   00000328   E010               LDI     R17, 0
   \   0000032A   ........           CALL    ?S_EC_MUL_L02
   \   0000032E   0F60               ADD     R22, R16
   \   00000330   1F71               ADC     R23, R17
   \   00000332   01AB               MOVW    R21:R20, R23:R22
   \   00000334   ........           CALL    __eeget8_16
   \   00000338   ........           CALL    CharToStr
   1668          									buffer_tx[10] = buffer[0];
   \   0000033C   8108               LD      R16, Y
   \   0000033E   870D               STD     Y+13, R16
   1669          									buffer_tx[11] = buffer[1];
   \   00000340   8109               LDD     R16, Y+1
   \   00000342   870E               STD     Y+14, R16
   1670          									buffer_tx[12] = '1';
   \   00000344   E301               LDI     R16, 49
   \   00000346   870F               STD     Y+15, R16
   1671          									buffer_tx[13] = '4';
   \   00000348   E304               LDI     R16, 52
   \   0000034A   8B08               STD     Y+16, R16
   1672          									send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   0000034C   E322               LDI     R18, 50
   \   0000034E   E030               LDI     R19, 0
   \   00000350   018E               MOVW    R17:R16, R29:R28
   \   00000352   5F0D               SUBI    R16, 253
   \   00000354   4F1F               SBCI    R17, 255
   \   00000356   ........           CALL    send_frame_pp_ext_broad
   1673          							    //parameter ID2
   1674          									CharToStr(ee_scenario[g_asc_reception_buffer[7] - 2].id[1],buffer);
   \   0000035A   019E               MOVW    R19:R18, R29:R28
   \   0000035C   ....               LDI     R22, LOW((ee_scenario - 11))
   \   0000035E   ....               LDI     R23, HIGH((ee_scenario - 11))
   \   00000360   9140....           LDS     R20, (g_asc_reception_buffer + 7)
   \   00000364   E050               LDI     R21, 0
   \   00000366   E007               LDI     R16, 7
   \   00000368   E010               LDI     R17, 0
   \   0000036A   ........           CALL    ?S_EC_MUL_L02
   \   0000036E   0F60               ADD     R22, R16
   \   00000370   1F71               ADC     R23, R17
   \   00000372   01AB               MOVW    R21:R20, R23:R22
   \   00000374   ........           CALL    __eeget8_16
   \   00000378   ........           CALL    CharToStr
   1675          									buffer_tx[10] = buffer[0];
   \   0000037C   8108               LD      R16, Y
   \   0000037E   870D               STD     Y+13, R16
   1676          									buffer_tx[11] = buffer[1];
   \   00000380   8109               LDD     R16, Y+1
   \   00000382   870E               STD     Y+14, R16
   1677          									buffer_tx[12] = '1';
   \   00000384   E301               LDI     R16, 49
   \   00000386   870F               STD     Y+15, R16
   1678          									buffer_tx[13] = '5';
   \   00000388   E305               LDI     R16, 53
   \   0000038A   8B08               STD     Y+16, R16
   1679          									send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   0000038C   E322               LDI     R18, 50
   \   0000038E   E030               LDI     R19, 0
   \   00000390   018E               MOVW    R17:R16, R29:R28
   \   00000392   5F0D               SUBI    R16, 253
   \   00000394   4F1F               SBCI    R17, 255
   \   00000396   ........           CALL    send_frame_pp_ext_broad
   1680          	                //parameter ID3
   1681          									CharToStr(ee_scenario[g_asc_reception_buffer[7] - 2].id[2]>>4,buffer);
   \   0000039A   019E               MOVW    R19:R18, R29:R28
   \   0000039C   ....               LDI     R22, LOW((ee_scenario - 10))
   \   0000039E   ....               LDI     R23, HIGH((ee_scenario - 10))
   \   000003A0   9140....           LDS     R20, (g_asc_reception_buffer + 7)
   \   000003A4   E050               LDI     R21, 0
   \   000003A6   E007               LDI     R16, 7
   \   000003A8   E010               LDI     R17, 0
   \   000003AA   ........           CALL    ?S_EC_MUL_L02
   \   000003AE   0F60               ADD     R22, R16
   \   000003B0   1F71               ADC     R23, R17
   \   000003B2   01AB               MOVW    R21:R20, R23:R22
   \   000003B4   ........           CALL    __eeget8_16
   \   000003B8   9502               SWAP    R16
   \   000003BA   700F               ANDI    R16, 0x0F
   \   000003BC   ........           CALL    CharToStr
   1682          									buffer_tx[10] = buffer[0];
   \   000003C0   8108               LD      R16, Y
   \   000003C2   870D               STD     Y+13, R16
   1683          									buffer_tx[11] = buffer[1];
   \   000003C4   8109               LDD     R16, Y+1
   \   000003C6   870E               STD     Y+14, R16
   1684          									buffer_tx[12] = '1';
   \   000003C8   E301               LDI     R16, 49
   \   000003CA   870F               STD     Y+15, R16
   1685          									buffer_tx[13] = '6';
   \   000003CC   E306               LDI     R16, 54
   \   000003CE   8B08               STD     Y+16, R16
   1686          									send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   000003D0   E322               LDI     R18, 50
   \   000003D2   E030               LDI     R19, 0
   \   000003D4   018E               MOVW    R17:R16, R29:R28
   \   000003D6   5F0D               SUBI    R16, 253
   \   000003D8   4F1F               SBCI    R17, 255
   \   000003DA   ........           CALL    send_frame_pp_ext_broad
   1687          	                //parameter unit number
   1688          									CharToStr(ee_scenario[g_asc_reception_buffer[7] - 2].key_number,buffer);
   \   000003DE   019E               MOVW    R19:R18, R29:R28
   \   000003E0   ....               LDI     R22, LOW((ee_scenario - 9))
   \   000003E2   ....               LDI     R23, HIGH((ee_scenario - 9))
   \   000003E4   9140....           LDS     R20, (g_asc_reception_buffer + 7)
   \   000003E8   E050               LDI     R21, 0
   \   000003EA   E007               LDI     R16, 7
   \   000003EC   E010               LDI     R17, 0
   \   000003EE   ........           CALL    ?S_EC_MUL_L02
   \   000003F2   0F60               ADD     R22, R16
   \   000003F4   1F71               ADC     R23, R17
   \   000003F6   01AB               MOVW    R21:R20, R23:R22
   \   000003F8   ........           CALL    __eeget8_16
   \   000003FC   ........           CALL    CharToStr
   1689          									buffer_tx[10] = buffer[0];
   \   00000400   8108               LD      R16, Y
   \   00000402   870D               STD     Y+13, R16
   1690          									buffer_tx[11] = buffer[1];
   \   00000404   8109               LDD     R16, Y+1
   \   00000406   870E               STD     Y+14, R16
   1691          									buffer_tx[12] = '1';
   \   00000408   E301               LDI     R16, 49
   \   0000040A   870F               STD     Y+15, R16
   1692          									buffer_tx[13] = '7';
   \   0000040C   E307               LDI     R16, 55
   \   0000040E   8B08               STD     Y+16, R16
   1693          									send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   00000410   E322               LDI     R18, 50
   \   00000412   E030               LDI     R19, 0
   \   00000414   018E               MOVW    R17:R16, R29:R28
   \   00000416   5F0D               SUBI    R16, 253
   \   00000418   4F1F               SBCI    R17, 255
   \   0000041A   ........           CALL    send_frame_pp_ext_broad
   1694          	
   1695          	                frame_buffer_clear();
   \   0000041E   CF1A               RJMP    ??parameter_specified_index_answer_21
   1696                      }
   1697          	        }
   1698          	      }
   1699          	      else // not allowed frame
   1700          	     	{
   1701          	     		not_allowed_response(g_asc_reception_buffer[7]);
   \                     ??parameter_specified_index_answer_18:
   \   00000420   ....               RCALL   not_allowed_response
   1702          	     	}
   1703          	    }	
   1704          }
   \                     ??parameter_specified_index_answer_6:
   \   00000422   9664               ADIW    R29:R28, 20
   \   00000424   9189               LD      R24, Y+
   \   00000426   9508               RET
   1705          

   \                                 In  segment CODE, align 2, keep-with-next
   1706          void send_aux_frame(unsigned char argument,unsigned char ns,unsigned char scenario_index)
   \                     send_aux_frame:
   1707          {
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   972C               SBIW    R29:R28, 12
   \   00000006   2F90               MOV     R25, R16
   \   00000008   2E11               MOV     R1, R17
   \   0000000A   2F82               MOV     R24, R18
   1708            unsigned char buffer_short[9] = "B1009300";
   \   0000000C   019E               MOVW    R19:R18, R29:R28
   \   0000000E   0189               MOVW    R17:R16, R19:R18
   \   00000010   ....               LDI     R30, LOW(`?<Constant "B1009300">`)
   \   00000012   ....               LDI     R31, (`?<Constant "B1009300">`) >> 8
   \   00000014   E049               LDI     R20, 9
   \   00000016   E050               LDI     R21, 0
   \   00000018   ........           CALL    ?ML_FLASH_SRAM_16EC_16_L07
   1709            unsigned char buffer[3];
   1710            signed char temp;
   1711          
   1712            CharToStr(ns,buffer);
   \   0000001C   5F27               SUBI    R18, 247
   \   0000001E   4F3F               SBCI    R19, 255
   \   00000020   2D01               MOV     R16, R1
   \   00000022   ........           CALL    CharToStr
   1713            buffer_short[2] = buffer[0];
   \   00000026   8509               LDD     R16, Y+9
   \   00000028   830A               STD     Y+2, R16
   1714            buffer_short[3] = buffer[1];
   \   0000002A   850A               LDD     R16, Y+10
   \   0000002C   830B               STD     Y+3, R16
   1715          
   1716            switch(argument)
   \   0000002E   5091               SUBI    R25, 1
   \   00000030   F071               BREQ    ??send_aux_frame_0
   \   00000032   959A               DEC     R25
   \   00000034   F0A9               BREQ    ??send_aux_frame_1
   \   00000036   959A               DEC     R25
   \   00000038   F0D1               BREQ    ??send_aux_frame_2
   \   0000003A   959A               DEC     R25
   \   0000003C   F409               BRNE    $+2+2
   \   0000003E   C045               RJMP    ??send_aux_frame_3
   \   00000040   5093               SUBI    R25, 3
   \   00000042   F409               BRNE    $+2+2
   \   00000044   C059               RJMP    ??send_aux_frame_4
   \   00000046   5092               SUBI    R25, 2
   \   00000048   F409               BRNE    $+2+2
   \   0000004A   C05A               RJMP    ??send_aux_frame_5
   \   0000004C   C062               RJMP    ??send_aux_frame_6
   1717            {
   1718              case ON:
   1719                buffer_short[4] = '9';
   \                     ??send_aux_frame_0:
   \   0000004E   E309               LDI     R16, 57
   \   00000050   830C               STD     Y+4, R16
   1720                buffer_short[5] = '3';
   \   00000052   E303               LDI     R16, 51
   \   00000054   830D               STD     Y+5, R16
   1721                buffer_short[6] = '6';
   \   00000056   E306               LDI     R16, 54
   \   00000058   830E               STD     Y+6, R16
   1722                buffer_short[7] = '4';
   \   0000005A   E304               LDI     R16, 52
   \                     ??send_aux_frame_7:
   \   0000005C   830F               STD     Y+7, R16
   1723                send_frame_pp_broad(buffer_short,TRANS_DELAY);
   \   0000005E   C054               RJMP    ??send_aux_frame_8
   1724              break;
   1725          
   1726              case OFF:
   1727                buffer_short[4] = '9';
   \                     ??send_aux_frame_1:
   \   00000060   E309               LDI     R16, 57
   \   00000062   830C               STD     Y+4, R16
   1728                buffer_short[5] = '4';
   \   00000064   E304               LDI     R16, 52
   \                     ??send_aux_frame_9:
   \   00000066   830D               STD     Y+5, R16
   1729                buffer_short[6] = '0';
   \   00000068   E300               LDI     R16, 48
   \   0000006A   830E               STD     Y+6, R16
   1730                buffer_short[7] = '0';
   \   0000006C   CFF7               RJMP    ??send_aux_frame_7
   1731                send_frame_pp_broad(buffer_short,TRANS_DELAY);
   1732              break;
   1733          
   1734              case DIM_STEP:
   1735                temp = IR_reception.pipe[6];
   \                     ??send_aux_frame_2:
   \   0000006E   9100....           LDS     R16, (IR_reception + 6)
   1736                if(temp > 0)
   \   00000072   3001               CPI     R16, 1
   \   00000074   F054               BRLT    ??send_aux_frame_10
   1737                {
   1738                  buffer_short[4] = '9';
   \   00000076   E319               LDI     R17, 57
   \   00000078   831C               STD     Y+4, R17
   1739                  buffer_short[5] = '5';
   \   0000007A   E315               LDI     R17, 53
   \   0000007C   831D               STD     Y+5, R17
   1740                  buffer_short[6] = dimmer_convert(temp);
   \   0000007E   ....               RCALL   dimmer_convert
   \   00000080   830E               STD     Y+6, R16
   1741          				if(scenario_index == OUT_RANGE)
   \   00000082   3F8F               CPI     R24, 255
   \   00000084   F471               BRNE    ??send_aux_frame_11
   1742                  	buffer_short[7] = '0';
   \                     ??send_aux_frame_12:
   \   00000086   E300               LDI     R16, 48
   \   00000088   CFE9               RJMP    ??send_aux_frame_7
   1743          				else
   1744          				{
   1745          					CharToStr(ee_scenario[scenario_index].reg_type,buffer);
   1746          					buffer_short[7] = buffer[1];
   1747          				}
   1748                  send_frame_pp_broad(buffer_short,TRANS_DELAY);
   1749                }
   1750                else if(temp < 0)
   \                     ??send_aux_frame_10:
   \   0000008A   2300               TST     R16
   \   0000008C   F00A               BRMI    $+2+2
   \   0000008E   C041               RJMP    ??send_aux_frame_6
   1751                {
   1752                  temp = 0 - temp;
   1753                  buffer_short[4] = '9';
   \   00000090   E319               LDI     R17, 57
   \   00000092   831C               STD     Y+4, R17
   1754                  buffer_short[5] = '6';
   \   00000094   E316               LDI     R17, 54
   \   00000096   831D               STD     Y+5, R17
   1755                  buffer_short[6] = dimmer_convert(temp);
   \   00000098   9501               NEG     R16
   \   0000009A   ....               RCALL   dimmer_convert
   \   0000009C   830E               STD     Y+6, R16
   1756                  if(scenario_index == OUT_RANGE)
   \   0000009E   3F8F               CPI     R24, 255
   \   000000A0   F391               BREQ    ??send_aux_frame_12
   1757                  	buffer_short[7] = '0';
   1758          				else
   1759          				{
   1760          					CharToStr(ee_scenario[scenario_index].reg_type,buffer);
   1761          					buffer_short[7] = buffer[1];
   1762          				}
   1763                  send_frame_pp_broad(buffer_short,TRANS_DELAY);
   1764                }
   \                     ??send_aux_frame_11:
   \   000000A2   019E               MOVW    R19:R18, R29:R28
   \   000000A4   5F27               SUBI    R18, 247
   \   000000A6   4F3F               SBCI    R19, 255
   \   000000A8   ....               LDI     R22, LOW((ee_scenario + 1))
   \   000000AA   ....               LDI     R23, HIGH((ee_scenario + 1))
   \   000000AC   2F48               MOV     R20, R24
   \   000000AE   E050               LDI     R21, 0
   \   000000B0   E007               LDI     R16, 7
   \   000000B2   E010               LDI     R17, 0
   \   000000B4   ........           CALL    ?S_EC_MUL_L02
   \   000000B8   0F60               ADD     R22, R16
   \   000000BA   1F71               ADC     R23, R17
   \   000000BC   01AB               MOVW    R21:R20, R23:R22
   \   000000BE   ........           CALL    __eeget8_16
   \   000000C2   ........           CALL    CharToStr
   \                     ??send_aux_frame_13:
   \   000000C6   850A               LDD     R16, Y+10
   \   000000C8   CFC9               RJMP    ??send_aux_frame_7
   1765              break;
   1766          
   1767              case GO_TO_LEVEL_TIME:
   1768                if(IR_reception.pipe[6] == 0)
   \                     ??send_aux_frame_3:
   \   000000CA   9100....           LDS     R16, (IR_reception + 6)
   \   000000CE   2300               TST     R16
   \   000000D0   F239               BREQ    ??send_aux_frame_1
   1769                {
   1770                  buffer_short[4] = '9';
   1771                  buffer_short[5] = '4';
   1772                  buffer_short[6] = '0';
   1773                  buffer_short[7] = '0';
   1774                  send_frame_pp_broad(buffer_short,TRANS_DELAY);
   1775                }
   1776                else if(IR_reception.pipe[6] <= 0x64)
   \   000000D2   9100....           LDS     R16, (IR_reception + 6)
   \   000000D6   3605               CPI     R16, 101
   \   000000D8   F008               BRCS    $+2+2
   \   000000DA   CFB9               RJMP    ??send_aux_frame_0
   1777                {
   1778                  buffer_short[4] = '9';
   \   000000DC   E309               LDI     R16, 57
   \   000000DE   830C               STD     Y+4, R16
   1779                  buffer_short[5] = '3';
   \   000000E0   E303               LDI     R16, 51
   \   000000E2   830D               STD     Y+5, R16
   1780                  CharToStr(IR_reception.pipe[6],buffer);
   \   000000E4   019E               MOVW    R19:R18, R29:R28
   \   000000E6   5F27               SUBI    R18, 247
   \   000000E8   4F3F               SBCI    R19, 255
   \   000000EA   9100....           LDS     R16, (IR_reception + 6)
   \   000000EE   ........           CALL    CharToStr
   1781                  buffer_short[6] = buffer[0];
   \   000000F2   8509               LDD     R16, Y+9
   \   000000F4   830E               STD     Y+6, R16
   1782                  buffer_short[7] = buffer[1];
   \   000000F6   CFE7               RJMP    ??send_aux_frame_13
   1783                  send_frame_pp_broad(buffer_short,TRANS_DELAY);
   1784                }
   1785                else
   1786                {
   1787                  buffer_short[4] = '9';
   1788                  buffer_short[5] = '3';
   1789                  buffer_short[6] = '6';
   1790                  buffer_short[7] = '4';
   1791                  send_frame_pp_broad(buffer_short,TRANS_DELAY);
   1792                }
   1793              break;
   1794          
   1795              case ACTION:
   1796                buffer_short[4] = '9';
   \                     ??send_aux_frame_4:
   \   000000F8   E309               LDI     R16, 57
   \   000000FA   830C               STD     Y+4, R16
   1797                buffer_short[5] = '3';
   \   000000FC   E303               LDI     R16, 51
   \   000000FE   CFB3               RJMP    ??send_aux_frame_9
   1798                buffer_short[6] = '0';
   1799                buffer_short[7] = '0';
   1800                send_frame_pp_broad(buffer_short,TRANS_DELAY);
   1801              break;
   1802          		
   1803          		case DIMMER_STOP:
   1804          			buffer_short[4] = '9';
   \                     ??send_aux_frame_5:
   \   00000100   E309               LDI     R16, 57
   \   00000102   830C               STD     Y+4, R16
   1805                buffer_short[5] = '7';
   \   00000104   E307               LDI     R16, 55
   \   00000106   830D               STD     Y+5, R16
   1806          			send_frame_pp_broad(buffer_short,TRANS_DELAY);
   \                     ??send_aux_frame_8:
   \   00000108   E322               LDI     R18, 50
   \   0000010A   E030               LDI     R19, 0
   \   0000010C   018E               MOVW    R17:R16, R29:R28
   \   0000010E   ........           CALL    send_frame_pp_broad
   1807          		break;
   1808          
   1809            default:break;
   1810            }
   1811          }
   \                     ??send_aux_frame_6:
   \   00000112   962C               ADIW    R29:R28, 12
   \   00000114   9189               LD      R24, Y+
   \   00000116   9199               LD      R25, Y+
   \   00000118   9508               RET
   1812          

   \                                 In  segment CODE, align 2, keep-with-next
   1813          void send_group_pnl_frame(unsigned char send_type,unsigned char GR, unsigned char cmd)
   \                     send_group_pnl_frame:
   1814          {
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   9764               SBIW    R29:R28, 20
   \   00000006   2F30               MOV     R19, R16
   \   00000008   2F61               MOV     R22, R17
   \   0000000A   2F82               MOV     R24, R18
   1815          	unsigned char buffer_tx[17] = "D20001428C000940";
   \   0000000C   01DE               MOVW    R27:R26, R29:R28
   \   0000000E   9613               ADIW    R27:R26, 3
   \   00000010   ....               LDI     R30, LOW(`?<Constant "D20001428C000940">`)
   \   00000012   ....               LDI     R31, (`?<Constant "D20001428C000940">`) >> 8
   \   00000014   018D               MOVW    R17:R16, R27:R26
   \   00000016   E141               LDI     R20, 17
   \   00000018   E050               LDI     R21, 0
   \   0000001A   ........           CALL    ?ML_FLASH_SRAM_16EC_16_L07
   1816          	unsigned char buffer[3];
   1817          	
   1818          	if(send_type == REQUEST)
   \   0000001E   3333               CPI     R19, 51
   \   00000020   F421               BRNE    ??send_group_pnl_frame_0
   1819          	{
   1820          		buffer_tx[6] = '4';
   \   00000022   E304               LDI     R16, 52
   \   00000024   8709               STD     Y+9, R16
   1821          		buffer_tx[7] = '3';
   \   00000026   E303               LDI     R16, 51
   \   00000028   C009               RJMP    ??send_group_pnl_frame_1
   1822          	}
   1823          	else if(send_type == SET)
   \                     ??send_group_pnl_frame_0:
   \   0000002A   3332               CPI     R19, 50
   \   0000002C   F421               BRNE    ??send_group_pnl_frame_2
   1824          	{
   1825          		buffer_tx[6] = '4';
   \   0000002E   E304               LDI     R16, 52
   \   00000030   8709               STD     Y+9, R16
   1826          		buffer_tx[7] = '2';
   \   00000032   E302               LDI     R16, 50
   \   00000034   C003               RJMP    ??send_group_pnl_frame_1
   1827          	}
   1828          	else
   1829          	{
   1830          		buffer_tx[6] = '3';
   \                     ??send_group_pnl_frame_2:
   \   00000036   E303               LDI     R16, 51
   \   00000038   8709               STD     Y+9, R16
   1831          		buffer_tx[7] = '4';
   \   0000003A   E304               LDI     R16, 52
   \                     ??send_group_pnl_frame_1:
   \   0000003C   870A               STD     Y+10, R16
   1832          	}
   1833          	
   1834          	CharToStr(GR,buffer);
   \   0000003E   019E               MOVW    R19:R18, R29:R28
   \   00000040   2F06               MOV     R16, R22
   \   00000042   ........           CALL    CharToStr
   1835          	buffer_tx[10] = buffer[0];
   \   00000046   8108               LD      R16, Y
   \   00000048   870D               STD     Y+13, R16
   1836          	buffer_tx[11] = buffer[1];
   \   0000004A   8109               LDD     R16, Y+1
   \   0000004C   870E               STD     Y+14, R16
   1837          	
   1838          	buffer_tx[15] = cmd;
   \   0000004E   8B8A               STD     Y+18, R24
   1839          	
   1840          	send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   00000050   E322               LDI     R18, 50
   \   00000052   E030               LDI     R19, 0
   \   00000054   018E               MOVW    R17:R16, R29:R28
   \   00000056   5F0D               SUBI    R16, 253
   \   00000058   4F1F               SBCI    R17, 255
   \   0000005A   ........           CALL    send_frame_pp_ext_broad
   1841          }
   \   0000005E   9664               ADIW    R29:R28, 20
   \   00000060   E0E4               LDI     R30, 4
   \   00000062   ........           JMP     ?EPILOGUE_B4_L09
   1842          

   \                                 In  segment CODE, align 2, keep-with-next
   1843          void ko_answer_all(void)
   \                     ko_answer_all:
   1844          {
   \   00000000   938A               ST      -Y, R24
   1845            unsigned char temp;
   1846            temp = g_asc_reception_buffer[7];
   \   00000002   9180....           LDS     R24, (g_asc_reception_buffer + 7)
   1847            g_asc_reception_buffer[7] = 0x00;
   \   00000006   E000               LDI     R16, 0
   \   00000008   9300....           STS     (g_asc_reception_buffer + 7), R16
   1848            KO_answer_frame();
   \   0000000C   ....               RCALL   KO_answer_frame
   1849            g_asc_reception_buffer[7] = temp;
   \   0000000E   9380....           STS     (g_asc_reception_buffer + 7), R24
   1850          }
   \   00000012   9189               LD      R24, Y+
   \   00000014   9508               RET
   1851          

   \                                 In  segment CODE, align 2, keep-with-next
   1852          void address_answer_frame(void)
   \                     address_answer_frame:
   1853          {
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   9761               SBIW    R29:R28, 17
   1854            unsigned char buffer_tx[17] = "D20001348DFEFE00";
   \   00000006   019E               MOVW    R19:R18, R29:R28
   \   00000008   0189               MOVW    R17:R16, R19:R18
   \   0000000A   ....               LDI     R30, LOW(`?<Constant "D20001348DFEFE00">`)
   \   0000000C   ....               LDI     R31, (`?<Constant "D20001348DFEFE00">`) >> 8
   \   0000000E   E141               LDI     R20, 17
   \   00000010   E050               LDI     R21, 0
   \   00000012   ........           CALL    ?ML_FLASH_SRAM_16EC_16_L07
   1855            unsigned char i;
   1856            unsigned char temp;
   1857          	unsigned char channel_scenario;
   1858            //ko_answer_all();
   1859            if(g_asc_reception_buffer[7] == 0x80)
   \   00000016   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   0000001A   3800               CPI     R16, 128
   \   0000001C   F549               BRNE    ??address_answer_frame_0
   1860            {
   1861              if(product_information.conf_type == NONE_CONFED)
   \   0000001E   ....               LDI     R30, LOW(product_information)
   \   00000020   ....               LDI     R31, (product_information) >> 8
   \   00000022   8100               LD      R16, Z
   \   00000024   3003               CPI     R16, 3
   \   00000026   F411               BRNE    ??address_answer_frame_1
   1862              {
   1863                ko_answer_all();
   \   00000028   ....               RCALL   ko_answer_all
   \   0000002A   C061               RJMP    ??address_answer_frame_2
   1864              }
   1865              else
   1866              {
   1867                if(product_information.cen_system)
   \                     ??address_answer_frame_1:
   \   0000002C   8104               LDD     R16, Z+4
   \   0000002E   2300               TST     R16
   \   00000030   F041               BREQ    ??address_answer_frame_3
   1868                {
   1869                  buffer_tx[10] = '1';
   \   00000032   E301               LDI     R16, 49
   \   00000034   870A               STD     Y+10, R16
   1870                  buffer_tx[11] = '0';
   \   00000036   E300               LDI     R16, 48
   \   00000038   870B               STD     Y+11, R16
   1871                  buffer_tx[12] = product_information.local_A;
   \   0000003A   8102               LDD     R16, Z+2
   \   0000003C   870C               STD     Y+12, R16
   1872                  buffer_tx[13] = product_information.local_PL;
   \   0000003E   8103               LDD     R16, Z+3
   \   00000040   870D               STD     Y+13, R16
   1873                  buffer_tx[14] = '8';
   1874                  buffer_tx[15] = '1';
   1875                  send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1876                }
   1877                else
   1878                {
   1879                  buffer_tx[14] = '8';
   \                     ??address_answer_frame_3:
   \   00000042   E308               LDI     R16, 56
   \   00000044   870E               STD     Y+14, R16
   1880                  buffer_tx[15] = '1';
   \   00000046   E301               LDI     R16, 49
   \   00000048   870F               STD     Y+15, R16
   1881                  send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   0000004A   E322               LDI     R18, 50
   \   0000004C   E030               LDI     R19, 0
   \   0000004E   018E               MOVW    R17:R16, R29:R28
   \   00000050   ........           CALL    send_frame_pp_ext_broad
   1882                }
   1883          
   1884                temp = g_asc_reception_buffer[CHANNEL];
   \   00000054   9190....           LDS     R25, (g_asc_reception_buffer + 7)
   1885                for(i=0x02;i<=0x11;i++)
   \   00000058   E082               LDI     R24, 2
   \   0000005A   C004               RJMP    ??address_answer_frame_4
   1886                {
   1887                  g_asc_reception_buffer[CHANNEL] = i;
   \                     ??address_answer_frame_5:
   \   0000005C   9380....           STS     (g_asc_reception_buffer + 7), R24
   1888                  KO_answer_frame();
   \   00000060   ....               RCALL   KO_answer_frame
   1889                }
   \   00000062   9583               INC     R24
   \                     ??address_answer_frame_4:
   \   00000064   3182               CPI     R24, 18
   \   00000066   F3D0               BRCS    ??address_answer_frame_5
   1890                g_asc_reception_buffer[CHANNEL] = temp;
   \   00000068   9390....           STS     (g_asc_reception_buffer + 7), R25
   1891                frame_buffer_clear();
   \   0000006C   ....               RCALL   frame_buffer_clear
   \   0000006E   C03F               RJMP    ??address_answer_frame_2
   1892              }
   1893            }
   1894            else if(g_asc_reception_buffer[7] == 0x81)
   \                     ??address_answer_frame_0:
   \   00000070   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   00000074   3801               CPI     R16, 129
   \   00000076   F4B9               BRNE    ??address_answer_frame_6
   1895            {
   1896              if(product_information.conf_type == NONE_CONFED)
   \   00000078   ....               LDI     R30, LOW(product_information)
   \   0000007A   ....               LDI     R31, (product_information) >> 8
   \   0000007C   8100               LD      R16, Z
   \   0000007E   3003               CPI     R16, 3
   \   00000080   F411               BRNE    ??address_answer_frame_7
   1897              {
   1898                KO_answer_frame();
   \                     ??address_answer_frame_8:
   \   00000082   ....               RCALL   KO_answer_frame
   \   00000084   C034               RJMP    ??address_answer_frame_2
   1899              }
   1900              else if(product_information.cen_system == 1)
   \                     ??address_answer_frame_7:
   \   00000086   8104               LDD     R16, Z+4
   \   00000088   3001               CPI     R16, 1
   \   0000008A   F449               BRNE    ??address_answer_frame_9
   1901              {
   1902                //for CEN system
   1903                buffer_tx[10] = '1';
   \   0000008C   E301               LDI     R16, 49
   \   0000008E   870A               STD     Y+10, R16
   1904                buffer_tx[11] = '0';
   \   00000090   E300               LDI     R16, 48
   \   00000092   870B               STD     Y+11, R16
   1905                buffer_tx[12] = product_information.local_A;
   \   00000094   8102               LDD     R16, Z+2
   \   00000096   870C               STD     Y+12, R16
   1906                buffer_tx[13] = product_information.local_PL;
   \   00000098   8103               LDD     R16, Z+3
   \   0000009A   870D               STD     Y+13, R16
   1907                buffer_tx[14] = g_reception_buffer[14];
   \   0000009C   C01D               RJMP    ??address_answer_frame_10
   1908                buffer_tx[15] = g_reception_buffer[15];
   1909                send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1910              }
   1911              else
   1912              {
   1913                buffer_tx[14] = '8';
   \                     ??address_answer_frame_9:
   \   0000009E   E308               LDI     R16, 56
   \   000000A0   870E               STD     Y+14, R16
   1914                buffer_tx[15] = '1';
   \   000000A2   E301               LDI     R16, 49
   \   000000A4   C01E               RJMP    ??address_answer_frame_11
   1915                send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1916              }
   1917            }
   1918            else if(g_asc_reception_buffer[7] <= 0x91 && g_asc_reception_buffer[7] >= 0x82)
   \                     ??address_answer_frame_6:
   \   000000A6   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   000000AA   3902               CPI     R16, 146
   \   000000AC   F500               BRCC    ??address_answer_frame_2
   \   000000AE   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   000000B2   3802               CPI     R16, 130
   \   000000B4   F0E0               BRCS    ??address_answer_frame_2
   1919            {
   1920          		channel_scenario = g_asc_reception_buffer[CHANNEL];
   \   000000B6   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   1921          		ClrBit(channel_scenario,7);
   1922          		channel_scenario -= 2;
   1923          		if(ee_scenario[channel_scenario].confed)
   \   000000BA   ....               LDI     R18, LOW((ee_scenario + 6))
   \   000000BC   ....               LDI     R19, HIGH((ee_scenario + 6))
   \   000000BE   770F               ANDI    R16, 0x7F
   \   000000C0   5002               SUBI    R16, 2
   \   000000C2   E010               LDI     R17, 0
   \   000000C4   E047               LDI     R20, 7
   \   000000C6   ........           CALL    ?S_EC_MUL_L02
   \   000000CA   0F20               ADD     R18, R16
   \   000000CC   1F31               ADC     R19, R17
   \   000000CE   01A9               MOVW    R21:R20, R19:R18
   \   000000D0   ........           CALL    __eeget8_16
   \   000000D4   2300               TST     R16
   \   000000D6   F2A9               BREQ    ??address_answer_frame_8
   1924          		{
   1925          			buffer_tx[14] = g_reception_buffer[14];
   \                     ??address_answer_frame_10:
   \   000000D8   ....               LDI     R30, LOW(g_reception_buffer)
   \   000000DA   ....               LDI     R31, (g_reception_buffer) >> 8
   \   000000DC   8506               LDD     R16, Z+14
   \   000000DE   870E               STD     Y+14, R16
   1926          			buffer_tx[15] = g_reception_buffer[15];
   \   000000E0   8507               LDD     R16, Z+15
   \                     ??address_answer_frame_11:
   \   000000E2   870F               STD     Y+15, R16
   1927          			send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   000000E4   E322               LDI     R18, 50
   \   000000E6   E030               LDI     R19, 0
   \   000000E8   018E               MOVW    R17:R16, R29:R28
   \   000000EA   ........           CALL    send_frame_pp_ext_broad
   1928          		}
   1929          		else
   1930          		{
   1931              	KO_answer_frame();
   1932          		}
   1933              //CharToStr(g_asc_reception_buffer[7], buffer);
   1934              //buffer_tx[14] = buffer[0];
   1935              //buffer_tx[15] = buffer[1];
   1936              //send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1937            }
   1938          }
   \                     ??address_answer_frame_2:
   \   000000EE   9661               ADIW    R29:R28, 17
   \   000000F0   9189               LD      R24, Y+
   \   000000F2   9199               LD      R25, Y+
   \   000000F4   9508               RET
   1939          

   \                                 In  segment CODE, align 2, keep-with-next
   1940          void address_setting_error_frame(void)
   \                     address_setting_error_frame:
   1941          {
   \   00000000   938A               ST      -Y, R24
   \   00000002   9764               SBIW    R29:R28, 20
   1942            unsigned char buffer_tx[17] = "D20001348DFEFE80";
   \   00000004   019E               MOVW    R19:R18, R29:R28
   \   00000006   0189               MOVW    R17:R16, R19:R18
   \   00000008   ....               LDI     R30, LOW(`?<Constant "D20001348DFEFE80">`)
   \   0000000A   ....               LDI     R31, (`?<Constant "D20001348DFEFE80">`) >> 8
   \   0000000C   E141               LDI     R20, 17
   \   0000000E   E050               LDI     R21, 0
   \   00000010   ........           CALL    ?ML_FLASH_SRAM_16EC_16_L07
   1943            unsigned char i;
   1944            unsigned char buffer[3];
   1945            unsigned char temp;
   1946            //ko_answer_all();
   1947            if(g_asc_reception_buffer[7] == 0x80)
   \   00000014   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   00000018   3800               CPI     R16, 128
   \   0000001A   F4E1               BRNE    ??address_setting_error_frame_0
   1948            {
   1949              if(product_information.conf_type == NONE_CONFED)
   \   0000001C   9100....           LDS     R16, product_information
   \   00000020   3003               CPI     R16, 3
   \   00000022   F411               BRNE    ??address_setting_error_frame_1
   1950              {
   1951                ko_answer_all();
   \   00000024   ....               RCALL   ko_answer_all
   \   00000026   C061               RJMP    ??address_setting_error_frame_2
   1952              }
   1953              else
   1954              {
   1955                for(i=0x81;i<=0x91;i++)
   \                     ??address_setting_error_frame_1:
   \   00000028   E881               LDI     R24, 129
   \   0000002A   C010               RJMP    ??address_setting_error_frame_3
   1956                {
   1957                  CharToStr(i,buffer);
   \                     ??address_setting_error_frame_4:
   \   0000002C   019E               MOVW    R19:R18, R29:R28
   \   0000002E   5E2F               SUBI    R18, 239
   \   00000030   4F3F               SBCI    R19, 255
   \   00000032   2F08               MOV     R16, R24
   \   00000034   ........           CALL    CharToStr
   1958                  buffer_tx[14] = buffer[0];
   \   00000038   8909               LDD     R16, Y+17
   \   0000003A   870E               STD     Y+14, R16
   1959                  buffer_tx[15] = buffer[1];
   \   0000003C   890A               LDD     R16, Y+18
   \   0000003E   870F               STD     Y+15, R16
   1960                  send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   00000040   E322               LDI     R18, 50
   \   00000042   E030               LDI     R19, 0
   \   00000044   018E               MOVW    R17:R16, R29:R28
   \   00000046   ........           CALL    send_frame_pp_ext_broad
   1961                }
   \   0000004A   9583               INC     R24
   \                     ??address_setting_error_frame_3:
   \   0000004C   3982               CPI     R24, 146
   \   0000004E   F370               BRCS    ??address_setting_error_frame_4
   1962                frame_buffer_clear();
   \   00000050   ....               RCALL   frame_buffer_clear
   \   00000052   C04B               RJMP    ??address_setting_error_frame_2
   1963              }
   1964            }
   1965            else if(g_asc_reception_buffer[7] == 0x81)
   \                     ??address_setting_error_frame_0:
   \   00000054   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   00000058   3801               CPI     R16, 129
   \   0000005A   F4B9               BRNE    ??address_setting_error_frame_5
   1966            {
   1967              if(product_information.cen_system == 1)
   \   0000005C   ....               LDI     R30, LOW(product_information)
   \   0000005E   ....               LDI     R31, (product_information) >> 8
   \   00000060   8104               LDD     R16, Z+4
   \   00000062   3001               CPI     R16, 1
   \   00000064   8100               LD      R16, Z
   \   00000066   F471               BRNE    ??address_setting_error_frame_6
   1968              {
   1969                //for CEN system
   1970          
   1971                if(product_information.conf_type == NONE_CONFED)
   \   00000068   3003               CPI     R16, 3
   \   0000006A   F411               BRNE    ??address_setting_error_frame_7
   1972                {
   1973                  KO_answer_frame();
   \                     ??address_setting_error_frame_8:
   \   0000006C   ....               RCALL   KO_answer_frame
   \   0000006E   C03D               RJMP    ??address_setting_error_frame_2
   1974                }
   1975                else
   1976                {
   1977                  buffer_tx[10] = 'F';
   \                     ??address_setting_error_frame_7:
   \   00000070   E406               LDI     R16, 70
   \   00000072   870A               STD     Y+10, R16
   1978                  buffer_tx[11] = 'F';
   \   00000074   870B               STD     Y+11, R16
   1979                  buffer_tx[12] = 'F';
   \   00000076   870C               STD     Y+12, R16
   1980                  buffer_tx[13] = 'E';
   \   00000078   E405               LDI     R16, 69
   \   0000007A   870D               STD     Y+13, R16
   1981                  buffer_tx[14] = '8';
   \   0000007C   E308               LDI     R16, 56
   \   0000007E   870E               STD     Y+14, R16
   1982                  buffer_tx[15] = '1';
   \                     ??address_setting_error_frame_9:
   \   00000080   E301               LDI     R16, 49
   \   00000082   C02D               RJMP    ??address_setting_error_frame_10
   1983                  send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1984                }
   1985              }
   1986              else
   1987              {
   1988                if(product_information.conf_type == NONE_CONFED)
   \                     ??address_setting_error_frame_6:
   \   00000084   3003               CPI     R16, 3
   \   00000086   F391               BREQ    ??address_setting_error_frame_8
   1989                {
   1990                  KO_answer_frame();
   1991                }
   1992          			else
   1993          			{
   1994          				buffer_tx[15] = '1';
   \   00000088   CFFB               RJMP    ??address_setting_error_frame_9
   1995          				send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);  //ADDRESS NOT ACCEPTED
   1996          			}
   1997                /*
   1998                buffer_tx[8] = '8';
   1999                buffer_tx[9] = 'B';
   2000                buffer_tx[10] = KO[0];
   2001                buffer_tx[11] = KO[1];
   2002                buffer_tx[12] = KO[2];
   2003                buffer_tx[13] = KO[3];
   2004                buffer_tx[14] = '8';
   2005                buffer_tx[15] = '1';
   2006                send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   2007                */
   2008              }
   2009            }
   2010            else if(g_asc_reception_buffer[7] <= 0x91 && g_asc_reception_buffer[7] >= 0x82)
   \                     ??address_setting_error_frame_5:
   \   0000008A   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   0000008E   3902               CPI     R16, 146
   \   00000090   F560               BRCC    ??address_setting_error_frame_2
   \   00000092   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   00000096   3802               CPI     R16, 130
   \   00000098   F140               BRCS    ??address_setting_error_frame_2
   2011            {
   2012          		temp = g_asc_reception_buffer[7];
   \   0000009A   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   2013              ClrBit(temp,7);
   2014              temp -= 2;
   2015          		
   2016          		if(ee_scenario[temp].confed)
   \   0000009E   ....               LDI     R30, LOW(g_reception_buffer)
   \   000000A0   ....               LDI     R31, (g_reception_buffer) >> 8
   \   000000A2   ....               LDI     R18, LOW((ee_scenario + 6))
   \   000000A4   ....               LDI     R19, HIGH((ee_scenario + 6))
   \   000000A6   770F               ANDI    R16, 0x7F
   \   000000A8   5002               SUBI    R16, 2
   \   000000AA   E010               LDI     R17, 0
   \   000000AC   E047               LDI     R20, 7
   \   000000AE   ........           CALL    ?S_EC_MUL_L02
   \   000000B2   0F20               ADD     R18, R16
   \   000000B4   1F31               ADC     R19, R17
   \   000000B6   01A9               MOVW    R21:R20, R19:R18
   \   000000B8   ........           CALL    __eeget8_16
   \   000000BC   2300               TST     R16
   \   000000BE   F461               BRNE    ??address_setting_error_frame_11
   2017          		{
   2018          			buffer_tx[14] = g_reception_buffer[14];
   2019          			buffer_tx[15] = g_reception_buffer[15];
   2020          			send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   2021          		}
   2022          		else
   2023          		{
   2024              	buffer_tx[8] = '8';
   \   000000C0   E308               LDI     R16, 56
   \   000000C2   8708               STD     Y+8, R16
   2025              	buffer_tx[9] = 'B';
   \   000000C4   E402               LDI     R16, 66
   \   000000C6   8709               STD     Y+9, R16
   2026              	buffer_tx[10] = '0';
   \   000000C8   E300               LDI     R16, 48
   \   000000CA   870A               STD     Y+10, R16
   2027              	buffer_tx[11] = '1';
   \   000000CC   E301               LDI     R16, 49
   \   000000CE   870B               STD     Y+11, R16
   2028              	buffer_tx[12] = 'A';
   \   000000D0   E401               LDI     R16, 65
   \   000000D2   870C               STD     Y+12, R16
   2029              	buffer_tx[13] = 'F';
   \   000000D4   E406               LDI     R16, 70
   \   000000D6   870D               STD     Y+13, R16
   2030              	buffer_tx[14] = g_reception_buffer[14];
   \                     ??address_setting_error_frame_11:
   \   000000D8   8506               LDD     R16, Z+14
   \   000000DA   870E               STD     Y+14, R16
   2031          			buffer_tx[15] = g_reception_buffer[15];
   \   000000DC   8507               LDD     R16, Z+15
   \                     ??address_setting_error_frame_10:
   \   000000DE   870F               STD     Y+15, R16
   2032          			send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   000000E0   E322               LDI     R18, 50
   \   000000E2   E030               LDI     R19, 0
   \   000000E4   018E               MOVW    R17:R16, R29:R28
   \   000000E6   ........           CALL    send_frame_pp_ext_broad
   2033          		}
   2034            }
   2035          	
   2036          	flags.KO_conf_right = 0; //reyno 0625
   \                     ??address_setting_error_frame_2:
   \   000000EA   ....               LDI     R30, LOW(flags)
   \   000000EC   ....               LDI     R31, (flags) >> 8
   \   000000EE   8102               LDD     R16, Z+2
   \   000000F0   8113               LDD     R17, Z+3
   \   000000F2   7F0D               ANDI    R16, 0xFD
   \   000000F4   8313               STD     Z+3, R17
   \   000000F6   8302               STD     Z+2, R16
   2037          }
   \   000000F8   9664               ADIW    R29:R28, 20
   \   000000FA   9189               LD      R24, Y+
   \   000000FC   9508               RET
   2038          

   \                                 In  segment CODE, align 2, keep-with-next
   2039          unsigned char dimmer_convert(unsigned char data)
   \                     dimmer_convert:
   2040          {
   2041                  if(data == 1)
   \   00000000   3001               CPI     R16, 1
   \   00000002   F411               BRNE    ??dimmer_convert_0
   2042                  {
   2043                    return '0';
   \   00000004   E300               LDI     R16, 48
   \   00000006   9508               RET
   2044                  }
   2045                  else if(data == 2)
   \                     ??dimmer_convert_0:
   \   00000008   3002               CPI     R16, 2
   \   0000000A   F411               BRNE    ??dimmer_convert_1
   2046                  {
   2047                    return '1';
   \   0000000C   E301               LDI     R16, 49
   \   0000000E   9508               RET
   2048                  }
   2049                  else if(data == 3)
   \                     ??dimmer_convert_1:
   \   00000010   3003               CPI     R16, 3
   \   00000012   F411               BRNE    ??dimmer_convert_2
   2050                  {
   2051                    return '2';
   \   00000014   E302               LDI     R16, 50
   \   00000016   9508               RET
   2052                  }
   2053                  else if(data == 4)
   \                     ??dimmer_convert_2:
   \   00000018   3004               CPI     R16, 4
   \   0000001A   F411               BRNE    ??dimmer_convert_3
   2054                  {
   2055                    return '3';
   \   0000001C   E303               LDI     R16, 51
   \   0000001E   9508               RET
   2056                  }
   2057                  else if(data == 5)
   \                     ??dimmer_convert_3:
   \   00000020   3005               CPI     R16, 5
   \   00000022   F411               BRNE    ??dimmer_convert_4
   2058                  {
   2059                    return '4';
   \   00000024   E304               LDI     R16, 52
   \   00000026   9508               RET
   2060                  }
   2061                  else if(data == 6)
   \                     ??dimmer_convert_4:
   \   00000028   3006               CPI     R16, 6
   \   0000002A   F411               BRNE    ??dimmer_convert_5
   2062                  {
   2063                    return '5';
   \   0000002C   E305               LDI     R16, 53
   \   0000002E   9508               RET
   2064                  }
   2065                  else if(data == 7 || data == 8)
   \                     ??dimmer_convert_5:
   \   00000030   3007               CPI     R16, 7
   \   00000032   F011               BREQ    ??dimmer_convert_6
   \   00000034   3008               CPI     R16, 8
   \   00000036   F411               BRNE    ??dimmer_convert_7
   2066                  {
   2067                    return '6';
   \                     ??dimmer_convert_6:
   \   00000038   E306               LDI     R16, 54
   \   0000003A   9508               RET
   2068                  }
   2069                  else
   2070                  {
   2071                    return '7';
   \                     ??dimmer_convert_7:
   \   0000003C   E307               LDI     R16, 55
   \   0000003E   9508               RET
   2072                  }
   2073          }
   2074          

   \                                 In  segment CODE, align 2, keep-with-next
   2075          void send_group_frame(unsigned char argument)
   \                     send_group_frame:
   2076          {
   \   00000000   938A               ST      -Y, R24
   \   00000002   976D               SBIW    R29:R28, 29
   \   00000004   2F80               MOV     R24, R16
   2077            unsigned char buffer_short[9] = "B5001200";
   \   00000006   019E               MOVW    R19:R18, R29:R28
   \   00000008   5F2D               SUBI    R18, 253
   \   0000000A   4F3F               SBCI    R19, 255
   \   0000000C   0189               MOVW    R17:R16, R19:R18
   \   0000000E   ....               LDI     R30, LOW(`?<Constant "B5001200">`)
   \   00000010   ....               LDI     R31, (`?<Constant "B5001200">`) >> 8
   \   00000012   E049               LDI     R20, 9
   \   00000014   E050               LDI     R21, 0
   \   00000016   ........           CALL    ?ML_FLASH_SRAM_16EC_16_L07
   2078            unsigned char buffer_tx[17] = "D20001428C000944";
   \   0000001A   019E               MOVW    R19:R18, R29:R28
   \   0000001C   5F24               SUBI    R18, 244
   \   0000001E   4F3F               SBCI    R19, 255
   \   00000020   0189               MOVW    R17:R16, R19:R18
   \   00000022   E141               LDI     R20, 17
   \   00000024   ........           CALL    ?ML_FLASH_SRAM_16EC_16_L07
   2079            unsigned char buffer[3];
   2080            signed char temp;
   2081          
   2082            CharToStr(KO_conf.GR,buffer);
   \   00000028   019E               MOVW    R19:R18, R29:R28
   \   0000002A   9100....           LDS     R16, (KO_conf + 6)
   \   0000002E   ........           CALL    CharToStr
   2083            buffer_short[2] = buffer[0];
   \   00000032   8108               LD      R16, Y
   \   00000034   830D               STD     Y+5, R16
   2084            buffer_short[3] = buffer[1];
   \   00000036   8109               LDD     R16, Y+1
   \   00000038   830E               STD     Y+6, R16
   2085          
   2086            buffer_tx[10] = buffer[0];
   \   0000003A   8118               LD      R17, Y
   \   0000003C   8B1E               STD     Y+22, R17
   2087            buffer_tx[11] = buffer[1];
   \   0000003E   8B0F               STD     Y+23, R16
   2088          
   2089            switch(argument)
   \   00000040   5081               SUBI    R24, 1
   \   00000042   F039               BREQ    ??send_group_frame_0
   \   00000044   958A               DEC     R24
   \   00000046   F089               BREQ    ??send_group_frame_1
   \   00000048   958A               DEC     R24
   \   0000004A   F0B1               BREQ    ??send_group_frame_2
   \   0000004C   5085               SUBI    R24, 5
   \   0000004E   F119               BREQ    ??send_group_frame_3
   \   00000050   C029               RJMP    ??send_group_frame_4
   2090            {
   2091              case ON:
   2092              if(KO_conf.GR != 0)
   \                     ??send_group_frame_0:
   \   00000052   9100....           LDS     R16, (KO_conf + 6)
   \   00000056   2300               TST     R16
   \   00000058   F129               BREQ    ??send_group_frame_4
   2093                send_frame_pp_broad(buffer_short,TRANS_DELAY);
   \                     ??send_group_frame_5:
   \   0000005A   E322               LDI     R18, 50
   \   0000005C   E030               LDI     R19, 0
   \   0000005E   018E               MOVW    R17:R16, R29:R28
   \   00000060   5F0D               SUBI    R16, 253
   \   00000062   4F1F               SBCI    R17, 255
   \   00000064   ........           CALL    send_frame_pp_broad
   \   00000068   C01D               RJMP    ??send_group_frame_4
   2094              break;
   2095          
   2096              case OFF:
   2097                if(KO_conf.GR != 0)
   \                     ??send_group_frame_1:
   \   0000006A   9100....           LDS     R16, (KO_conf + 6)
   \   0000006E   2300               TST     R16
   \   00000070   F0C9               BREQ    ??send_group_frame_4
   2098                {
   2099                  buffer_short[7] = '1';
   \   00000072   E301               LDI     R16, 49
   \                     ??send_group_frame_6:
   \   00000074   870A               STD     Y+10, R16
   2100                  send_frame_pp_broad(buffer_short,TRANS_DELAY);
   \   00000076   CFF1               RJMP    ??send_group_frame_5
   2101                }
   2102              break;
   2103          
   2104              case DIM_STEP:
   2105                if(KO_conf.GR != 0)
   \                     ??send_group_frame_2:
   \   00000078   9100....           LDS     R16, (KO_conf + 6)
   \   0000007C   2300               TST     R16
   \   0000007E   F091               BREQ    ??send_group_frame_4
   2106                {
   2107                  temp = IR_reception.pipe[6];
   \   00000080   9100....           LDS     R16, (IR_reception + 6)
   2108                  if(temp > 0)
   \   00000084   3001               CPI     R16, 1
   \   00000086   F014               BRLT    ??send_group_frame_7
   2109                  {
   2110                    buffer_short[7] = '3';
   \   00000088   E303               LDI     R16, 51
   \   0000008A   CFF4               RJMP    ??send_group_frame_6
   2111                    send_frame_pp_broad(buffer_short,TRANS_DELAY);
   2112                  }
   2113                  else if(temp < 0)
   \                     ??send_group_frame_7:
   \   0000008C   2300               TST     R16
   \   0000008E   F452               BRPL    ??send_group_frame_4
   2114                  {
   2115                    buffer_short[7] = '4';
   \   00000090   E304               LDI     R16, 52
   \   00000092   870A               STD     Y+10, R16
   2116                    send_frame_pp_broad(buffer_short,TRANS_DELAY);
   \   00000094   CFE2               RJMP    ??send_group_frame_5
   2117                  }
   2118                }
   2119              break;
   2120          
   2121              case ERASE:
   2122                send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \                     ??send_group_frame_3:
   \   00000096   E322               LDI     R18, 50
   \   00000098   E030               LDI     R19, 0
   \   0000009A   018E               MOVW    R17:R16, R29:R28
   \   0000009C   5F04               SUBI    R16, 244
   \   0000009E   4F1F               SBCI    R17, 255
   \   000000A0   ........           CALL    send_frame_pp_ext_broad
   2123              break;
   2124          
   2125              default:break;
   2126            }
   2127          }
   \                     ??send_group_frame_4:
   \   000000A4   966D               ADIW    R29:R28, 29
   \   000000A6   9189               LD      R24, Y+
   \   000000A8   9508               RET
   2128          

   \                                 In  segment CODE, align 2, keep-with-next
   2129          unsigned int write_parameter_scenario(void)
   \                     write_parameter_scenario:
   2130          {
   2131          	unsigned char channel = g_asc_reception_buffer[CHANNEL];
   \   00000000   ....               LDI     R30, LOW(g_asc_reception_buffer)
   \   00000002   ....               LDI     R31, (g_asc_reception_buffer) >> 8
   \   00000004   8147               LDD     R20, Z+7
   2132          	ClrBit(channel,7);
   2133          	channel -= 2;
   \   00000006   774F               ANDI    R20, 0x7F
   \   00000008   5042               SUBI    R20, 2
   2134          	
   2135          	switch(g_asc_reception_buffer[PAR_N])
   \   0000000A   8106               LDD     R16, Z+6
   \   0000000C   5001               SUBI    R16, 1
   \   0000000E   F059               BREQ    ??write_parameter_scenario_0
   \   00000010   5002               SUBI    R16, 2
   \   00000012   F0F1               BREQ    ??write_parameter_scenario_1
   \   00000014   5101               SUBI    R16, 17
   \   00000016   F169               BREQ    ??write_parameter_scenario_2
   \   00000018   950A               DEC     R16
   \   0000001A   F179               BREQ    ??write_parameter_scenario_3
   \   0000001C   950A               DEC     R16
   \   0000001E   F189               BREQ    ??write_parameter_scenario_4
   \   00000020   950A               DEC     R16
   \   00000022   F1B9               BREQ    ??write_parameter_scenario_5
   \   00000024   C03E               RJMP    ??write_parameter_scenario_6
   2136          	{
   2137          		case 1: //D2 00 01 43 8D 00 01 02
   2138          			if(g_asc_reception_buffer[PAR_V] >= 1)
   \                     ??write_parameter_scenario_0:
   \   00000026   8105               LDD     R16, Z+5
   \   00000028   2300               TST     R16
   \   0000002A   F081               BREQ    ??write_parameter_scenario_7
   2139          			{
   2140          				ee_scenario[channel].ns_number = g_asc_reception_buffer[PAR_V];
   \   0000002C   8125               LDD     R18, Z+5
   \   0000002E   E050               LDI     R21, 0
   \   00000030   E007               LDI     R16, 7
   \   00000032   E010               LDI     R17, 0
   \   00000034   ........           CALL    ?S_EC_MUL_L02
   \   00000038   ....               LDI     R20, LOW(ee_scenario)
   \   0000003A   ....               LDI     R21, (ee_scenario) >> 8
   \   0000003C   0F40               ADD     R20, R16
   \   0000003E   1F51               ADC     R21, R17
   \   00000040   2F02               MOV     R16, R18
   \                     ??write_parameter_scenario_8:
   \   00000042   ........           CALL    __eeput8_16
   2141          			}
   2142          			else
   2143          			{
   2144          				return PAR_OUT_OF_RANGE;
   2145          			}
   2146          		break;
   2147          		
   2148          		case 3:
   2149          			if(g_asc_reception_buffer[PAR_V] >= 0 && g_asc_reception_buffer[PAR_V] <= 0x03)
   2150          			{
   2151          				ee_scenario[channel].reg_type = g_asc_reception_buffer[PAR_V];
   2152          			}
   2153          			else
   2154          			{
   2155          				return PAR_OUT_OF_RANGE;
   2156          			}
   2157          		break;
   2158          		
   2159          		case 20:
   2160          			ee_scenario[channel].id[0] = g_asc_reception_buffer[PAR_V];
   2161          		break;
   2162          		
   2163          		case 21:
   2164          			ee_scenario[channel].id[1] = g_asc_reception_buffer[PAR_V];
   2165          		break;
   2166          		
   2167          		case 22:
   2168          			if(g_asc_reception_buffer[PAR_V] >= 0 && g_asc_reception_buffer[PAR_V] <= 0x0F)
   2169          			{
   2170          				ee_scenario[channel].id[2] = g_asc_reception_buffer[PAR_V];
   2171          			}
   2172          			else
   2173          			{
   2174          				return PAR_OUT_OF_RANGE;
   2175          			}
   2176          		break;
   2177          		
   2178          		case 23:
   2179          			if(g_asc_reception_buffer[PAR_V] >= 0 && g_asc_reception_buffer[PAR_V] <= 0x0F)
   2180          			{
   2181          				ee_scenario[channel].key_number = g_asc_reception_buffer[PAR_V];
   2182          			}
   2183          			else
   2184          			{
   2185          				return PAR_OUT_OF_RANGE;
   2186          			}
   2187          		break;
   2188          		
   2189          		default:
   2190          			return PAR_NOT_IMPLEMENTED;
   2191          	}
   2192            return 0;
   \   00000046   E000               LDI     R16, 0
   \   00000048   E010               LDI     R17, 0
   \   0000004A   9508               RET
   \                     ??write_parameter_scenario_7:
   \   0000004C   E001               LDI     R16, 1
   \   0000004E   C02A               RJMP    ??write_parameter_scenario_9
   \                     ??write_parameter_scenario_1:
   \   00000050   8105               LDD     R16, Z+5
   \   00000052   8105               LDD     R16, Z+5
   \   00000054   3004               CPI     R16, 4
   \   00000056   F7D0               BRCC    ??write_parameter_scenario_7
   \   00000058   8165               LDD     R22, Z+5
   \   0000005A   ....               LDI     R18, LOW((ee_scenario + 1))
   \   0000005C   ....               LDI     R19, HIGH((ee_scenario + 1))
   \                     ??write_parameter_scenario_10:
   \   0000005E   E050               LDI     R21, 0
   \   00000060   E007               LDI     R16, 7
   \   00000062   E010               LDI     R17, 0
   \   00000064   ........           CALL    ?S_EC_MUL_L02
   \   00000068   0F20               ADD     R18, R16
   \   0000006A   1F31               ADC     R19, R17
   \   0000006C   2F06               MOV     R16, R22
   \   0000006E   01A9               MOVW    R21:R20, R19:R18
   \   00000070   CFE8               RJMP    ??write_parameter_scenario_8
   \                     ??write_parameter_scenario_2:
   \   00000072   8165               LDD     R22, Z+5
   \   00000074   ....               LDI     R18, LOW((ee_scenario + 2))
   \   00000076   ....               LDI     R19, HIGH((ee_scenario + 2))
   \   00000078   CFF2               RJMP    ??write_parameter_scenario_10
   \                     ??write_parameter_scenario_3:
   \   0000007A   8165               LDD     R22, Z+5
   \   0000007C   ....               LDI     R18, LOW((ee_scenario + 3))
   \   0000007E   ....               LDI     R19, HIGH((ee_scenario + 3))
   \   00000080   CFEE               RJMP    ??write_parameter_scenario_10
   \                     ??write_parameter_scenario_4:
   \   00000082   8105               LDD     R16, Z+5
   \   00000084   8105               LDD     R16, Z+5
   \   00000086   3100               CPI     R16, 16
   \   00000088   F708               BRCC    ??write_parameter_scenario_7
   \   0000008A   8165               LDD     R22, Z+5
   \   0000008C   ....               LDI     R18, LOW((ee_scenario + 4))
   \   0000008E   ....               LDI     R19, HIGH((ee_scenario + 4))
   \   00000090   CFE6               RJMP    ??write_parameter_scenario_10
   \                     ??write_parameter_scenario_5:
   \   00000092   8105               LDD     R16, Z+5
   \   00000094   8105               LDD     R16, Z+5
   \   00000096   3100               CPI     R16, 16
   \   00000098   F6C8               BRCC    ??write_parameter_scenario_7
   \   0000009A   8165               LDD     R22, Z+5
   \   0000009C   ....               LDI     R18, LOW((ee_scenario + 5))
   \   0000009E   ....               LDI     R19, HIGH((ee_scenario + 5))
   \   000000A0   CFDE               RJMP    ??write_parameter_scenario_10
   \                     ??write_parameter_scenario_6:
   \   000000A2   E000               LDI     R16, 0
   \                     ??write_parameter_scenario_9:
   \   000000A4   EF1F               LDI     R17, 255
   \   000000A6   9508               RET
   2193          }
   2194          

   \                                 In  segment CODE, align 2, keep-with-next
   2195          void parameter_setting_error_answer(unsigned int value)
   \                     parameter_setting_error_answer:
   2196          {
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   9764               SBIW    R29:R28, 20
   \   00000006   01D8               MOVW    R27:R26, R17:R16
   2197          	unsigned char buffer_tx[17] = "D20001348D000000";
   \   00000008   019E               MOVW    R19:R18, R29:R28
   \   0000000A   5F2D               SUBI    R18, 253
   \   0000000C   4F3F               SBCI    R19, 255
   \   0000000E   0189               MOVW    R17:R16, R19:R18
   \   00000010   ....               LDI     R30, LOW(`?<Constant "D20001348D000000">_4`)
   \   00000012   ....               LDI     R31, (`?<Constant "D20001348D000000">_4`) >> 8
   \   00000014   E141               LDI     R20, 17
   \   00000016   E050               LDI     R21, 0
   \   00000018   ........           CALL    ?ML_FLASH_SRAM_16EC_16_L07
   2198          	unsigned char buffer[3];
   2199          	unsigned char channel = g_asc_reception_buffer[CHANNEL];
   \   0000001C   9190....           LDS     R25, (g_asc_reception_buffer + 7)
   2200          	unsigned char temp;
   2201          
   2202          	ClrBit(channel,7);
   \   00000020   779F               ANDI    R25, 0x7F
   2203          	temp = channel;
   \   00000022   2F89               MOV     R24, R25
   2204          
   2205            if(channel > 0x11)
   \   00000024   3192               CPI     R25, 18
   \   00000026   F0D8               BRCS    ??parameter_setting_error_answer_0
   2206            {
   2207              buffer_tx[8] = '8';
   \   00000028   E308               LDI     R16, 56
   \   0000002A   870B               STD     Y+11, R16
   2208          		buffer_tx[9] = 'B';
   \   0000002C   E402               LDI     R16, 66
   \   0000002E   870C               STD     Y+12, R16
   2209              buffer_tx[10] = 'F';
   \   00000030   E406               LDI     R16, 70
   \   00000032   870D               STD     Y+13, R16
   2210              buffer_tx[11] = 'F';
   \   00000034   870E               STD     Y+14, R16
   2211              buffer_tx[12] = '0';
   \   00000036   E300               LDI     R16, 48
   \   00000038   870F               STD     Y+15, R16
   2212              buffer_tx[13] = '4';
   \   0000003A   E304               LDI     R16, 52
   \   0000003C   8B08               STD     Y+16, R16
   2213              SetBit(temp,7);
   \   0000003E   6880               ORI     R24, 0x80
   2214              CharToStr(temp,buffer);
   \   00000040   019E               MOVW    R19:R18, R29:R28
   \   00000042   2F08               MOV     R16, R24
   \   00000044   ........           CALL    CharToStr
   2215              buffer_tx[14] = buffer[0];
   \   00000048   8108               LD      R16, Y
   \   0000004A   8B09               STD     Y+17, R16
   2216              buffer_tx[15] = buffer[1];
   \   0000004C   8109               LDD     R16, Y+1
   \   0000004E   8B0A               STD     Y+18, R16
   2217              send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   00000050   E322               LDI     R18, 50
   \   00000052   E030               LDI     R19, 0
   \   00000054   018E               MOVW    R17:R16, R29:R28
   \   00000056   5F0D               SUBI    R16, 253
   \   00000058   4F1F               SBCI    R17, 255
   \   0000005A   ........           CALL    send_frame_pp_ext_broad
   2218            }
   2219          
   2220          	switch(value)
   \                     ??parameter_setting_error_answer_0:
   \   0000005E   01FD               MOVW    R31:R30, R27:R26
   \   00000060   50E0               SUBI    R30, 0
   \   00000062   4FFF               SBCI    R31, 255
   \   00000064   F019               BREQ    ??parameter_setting_error_answer_1
   \   00000066   9731               SBIW    R31:R30, 1
   \   00000068   F189               BREQ    ??parameter_setting_error_answer_2
   \   0000006A   C02C               RJMP    ??parameter_setting_error_answer_3
   2221          	{
   2222          		case PAR_NOT_IMPLEMENTED:
   2223          			buffer_tx[10] = g_reception_buffer[12];
   \                     ??parameter_setting_error_answer_1:
   \   0000006C   ....               LDI     R30, LOW(g_reception_buffer)
   \   0000006E   ....               LDI     R31, (g_reception_buffer) >> 8
   \   00000070   8504               LDD     R16, Z+12
   \   00000072   870D               STD     Y+13, R16
   2224          			buffer_tx[11] = g_reception_buffer[13];
   \   00000074   8505               LDD     R16, Z+13
   \   00000076   870E               STD     Y+14, R16
   2225          			buffer_tx[12] = 'F';
   \   00000078   E406               LDI     R16, 70
   \   0000007A   870F               STD     Y+15, R16
   2226          			buffer_tx[13] = 'F';
   \   0000007C   8B08               STD     Y+16, R16
   2227                if(channel == 0x01)
   \   0000007E   3091               CPI     R25, 1
   \   00000080   F589               BRNE    ??parameter_setting_error_answer_4
   2228                {
   2229                  if(product_information.conf_type == NONE_CONFED)
   \                     ??parameter_setting_error_answer_5:
   \   00000082   9100....           LDS     R16, product_information
   \   00000086   3003               CPI     R16, 3
   \   00000088   F421               BRNE    ??parameter_setting_error_answer_6
   2230                  {
   2231                    buffer_tx[14] = '8';
   \   0000008A   E308               LDI     R16, 56
   \                     ??parameter_setting_error_answer_7:
   \   0000008C   8B09               STD     Y+17, R16
   2232                    buffer_tx[15] = '1';
   \   0000008E   E301               LDI     R16, 49
   \   00000090   C00A               RJMP    ??parameter_setting_error_answer_8
   2233                  }
   2234                  else
   2235                  {
   2236                    buffer_tx[14] = '0';
   \                     ??parameter_setting_error_answer_6:
   \   00000092   E300               LDI     R16, 48
   \   00000094   CFFB               RJMP    ??parameter_setting_error_answer_7
   2237                    buffer_tx[15] = '1';
   2238                  }
   2239                }
   2240                else
   2241                {
   2242          				if(ee_scenario[channel-2].confed)
   2243          				{
   2244          					ClrBit(temp,7);
   2245          				}
   2246          				else
   2247          				{
   2248          					SetBit(temp,7);
   \                     ??parameter_setting_error_answer_9:
   \   00000096   6880               ORI     R24, 0x80
   2249          				}
   2250          				CharToStr(temp,buffer);
   \                     ??parameter_setting_error_answer_10:
   \   00000098   019E               MOVW    R19:R18, R29:R28
   \   0000009A   2F08               MOV     R16, R24
   \   0000009C   ........           CALL    CharToStr
   2251          				buffer_tx[14] = buffer[0];
   \   000000A0   8108               LD      R16, Y
   \   000000A2   8B09               STD     Y+17, R16
   2252                  buffer_tx[15] = buffer[1];
   \   000000A4   8109               LDD     R16, Y+1
   \                     ??parameter_setting_error_answer_8:
   \   000000A6   8B0A               STD     Y+18, R16
   2253                }
   2254          			send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   000000A8   E322               LDI     R18, 50
   \   000000AA   E030               LDI     R19, 0
   \   000000AC   018E               MOVW    R17:R16, R29:R28
   \   000000AE   5F0D               SUBI    R16, 253
   \   000000B0   4F1F               SBCI    R17, 255
   \   000000B2   ........           CALL    send_frame_pp_ext_broad
   2255          			//flags.KO_conf_right = 0;
   2256          			flags.parameter_setting_wrong = 1;
   \   000000B6   ....               LDI     R30, LOW(flags)
   \   000000B8   ....               LDI     R31, (flags) >> 8
   \   000000BA   8104               LDD     R16, Z+4
   \   000000BC   8115               LDD     R17, Z+5
   \   000000BE   6002               ORI     R16, 0x02
   \   000000C0   8315               STD     Z+5, R17
   \   000000C2   8304               STD     Z+4, R16
   2257          		break;
   2258          
   2259          		case PAR_OUT_OF_RANGE:
   2260          			buffer_tx[10] = g_reception_buffer[12];
   2261          			buffer_tx[11] = g_reception_buffer[13];
   2262          			buffer_tx[12] = 'F';
   2263          			buffer_tx[13] = 'E';
   2264          			if(channel == 0x01)
   2265                {
   2266                  if(product_information.conf_type == NONE_CONFED)
   2267                  {
   2268                    buffer_tx[14] = '8';
   2269                    buffer_tx[15] = '1';
   2270                  }
   2271                  else
   2272                  {
   2273                    buffer_tx[14] = '0';
   2274                    buffer_tx[15] = '1';
   2275                  }
   2276                }
   2277                else
   2278                {
   2279          				if(ee_scenario[channel-2].confed)
   2280          				{
   2281          					ClrBit(temp,7);
   2282          				}
   2283          				else
   2284          				{
   2285          					SetBit(temp,7);
   2286          				}
   2287          				CharToStr(temp,buffer);
   2288          				buffer_tx[14] = buffer[0];
   2289                  buffer_tx[15] = buffer[1];
   2290                }
   2291          			send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   2292          			//flags.KO_conf_right = 0;
   2293          			flags.parameter_setting_wrong = 1;
   2294          		break;
   2295          
   2296          		default:break;
   2297          	}
   2298          
   2299          }
   \                     ??parameter_setting_error_answer_3:
   \   000000C4   9664               ADIW    R29:R28, 20
   \   000000C6   E0E4               LDI     R30, 4
   \   000000C8   ........           JMP     ?EPILOGUE_B4_L09
   \                     ??parameter_setting_error_answer_2:
   \   000000CC   ....               LDI     R30, LOW(g_reception_buffer)
   \   000000CE   ....               LDI     R31, (g_reception_buffer) >> 8
   \   000000D0   8504               LDD     R16, Z+12
   \   000000D2   870D               STD     Y+13, R16
   \   000000D4   8505               LDD     R16, Z+13
   \   000000D6   870E               STD     Y+14, R16
   \   000000D8   E406               LDI     R16, 70
   \   000000DA   870F               STD     Y+15, R16
   \   000000DC   E405               LDI     R16, 69
   \   000000DE   8B08               STD     Y+16, R16
   \   000000E0   3091               CPI     R25, 1
   \   000000E2   F279               BREQ    ??parameter_setting_error_answer_5
   \                     ??parameter_setting_error_answer_4:
   \   000000E4   ....               LDI     R18, LOW((ee_scenario - 8))
   \   000000E6   ....               LDI     R19, HIGH((ee_scenario - 8))
   \   000000E8   2F49               MOV     R20, R25
   \   000000EA   E050               LDI     R21, 0
   \   000000EC   E007               LDI     R16, 7
   \   000000EE   E010               LDI     R17, 0
   \   000000F0   ........           CALL    ?S_EC_MUL_L02
   \   000000F4   0F20               ADD     R18, R16
   \   000000F6   1F31               ADC     R19, R17
   \   000000F8   01A9               MOVW    R21:R20, R19:R18
   \   000000FA   ........           CALL    __eeget8_16
   \   000000FE   2300               TST     R16
   \   00000100   F251               BREQ    ??parameter_setting_error_answer_9
   \   00000102   778F               ANDI    R24, 0x7F
   \   00000104   CFC9               RJMP    ??parameter_setting_error_answer_10
   2300          

   \                                 In  segment CODE, align 2, keep-with-next
   2301          void KO_setting_procedure(void)
   \                     KO_setting_procedure:
   2302          {
   \   00000000   ....               LDI     R30, LOW(g_asc_reception_buffer)
   \   00000002   ....               LDI     R31, (g_asc_reception_buffer) >> 8
   \   00000004   8107               LDD     R16, Z+7
   \   00000006   FF07               SBRS    R16, 7
   \   00000008   C02E               RJMP    ??KO_setting_procedure_0
   2303            if(GetBit(g_asc_reception_buffer[CHANNEL],7))
   2304          	{
   2305          		if( g_asc_reception_buffer[CHANNEL] == 0x80 )
   \   0000000A   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   0000000E   3800               CPI     R16, 128
   \   00000010   F431               BRNE    ??KO_setting_procedure_1
   2306          		{
   2307                flags.KO_erase_all = 1;
   \   00000012   ....               LDI     R30, LOW(flags)
   \   00000014   ....               LDI     R31, (flags) >> 8
   \   00000016   8102               LDD     R16, Z+2
   \   00000018   8113               LDD     R17, Z+3
   \   0000001A   6004               ORI     R16, 0x04
   \   0000001C   C009               RJMP    ??KO_setting_procedure_2
   2308          		}
   2309              else if(g_asc_reception_buffer[CHANNEL] == 0x81)
   \                     ??KO_setting_procedure_1:
   \   0000001E   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   00000022   3801               CPI     R16, 129
   \   00000024   F441               BRNE    ??KO_setting_procedure_3
   2310              {
   2311                flags.KO_erase_main = 1;
   \   00000026   ....               LDI     R30, LOW(flags)
   \   00000028   ....               LDI     R31, (flags) >> 8
   \   0000002A   8102               LDD     R16, Z+2
   \   0000002C   8113               LDD     R17, Z+3
   \   0000002E   6008               ORI     R16, 0x08
   \                     ??KO_setting_procedure_2:
   \   00000030   8313               STD     Z+3, R17
   \   00000032   8302               STD     Z+2, R16
   \   00000034   9508               RET
   2312              }
   2313              else if(g_asc_reception_buffer[CHANNEL] >= 0x82 && g_asc_reception_buffer[CHANNEL] <= 0x91)
   \                     ??KO_setting_procedure_3:
   \   00000036   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   0000003A   3802               CPI     R16, 130
   \   0000003C   F408               BRCC    $+2+2
   \   0000003E   C0B8               RJMP    ??KO_setting_procedure_4
   \   00000040   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   00000044   3902               CPI     R16, 146
   \   00000046   F008               BRCS    $+2+2
   \   00000048   C0B3               RJMP    ??KO_setting_procedure_4
   2314              {
   2315                temp_variable.erase_KO_scenario = g_asc_reception_buffer[CHANNEL];
   \   0000004A   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   0000004E   9300....           STS     (temp_variable + 5), R16
   2316                ClrBit(temp_variable.erase_KO_scenario,7);
   2317                temp_variable.erase_KO_scenario -= 2;
   \   00000052   770F               ANDI    R16, 0x7F
   \   00000054   5002               SUBI    R16, 2
   \   00000056   9300....           STS     (temp_variable + 5), R16
   2318                flags.KO_erase_scenario = 1;
   \   0000005A   ....               LDI     R30, LOW(flags)
   \   0000005C   ....               LDI     R31, (flags) >> 8
   \   0000005E   8102               LDD     R16, Z+2
   \   00000060   8113               LDD     R17, Z+3
   \   00000062   6100               ORI     R16, 0x10
   \   00000064   CFE5               RJMP    ??KO_setting_procedure_2
   2319              }
   2320          	}
   2321          	else
   2322            {
   2323              if(g_asc_reception_buffer[CHANNEL] == 0x01)
   \                     ??KO_setting_procedure_0:
   \   00000066   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   0000006A   3001               CPI     R16, 1
   \   0000006C   F009               BREQ    $+2+2
   \   0000006E   C078               RJMP    ??KO_setting_procedure_5
   2324              {
   2325          #ifdef NONE_CONFED_203
   2326                  if(g_asc_reception_buffer[5] == 0x00)
   \   00000070   9100....           LDS     R16, (g_asc_reception_buffer + 5)
   \   00000074   2300               TST     R16
   \   00000076   F009               BREQ    $+2+2
   \   00000078   C071               RJMP    ??KO_setting_procedure_6
   2327                  {
   2328                    if(g_asc_reception_buffer[6] == 0xA8 || g_asc_reception_buffer[6] == 0xA6 || g_asc_reception_buffer[6] == 0x77
   2329                        || g_asc_reception_buffer[6] == 0x80 || g_asc_reception_buffer[6] == 0xA4 || g_asc_reception_buffer[6] == 0xA5)
   \   0000007A   9100....           LDS     R16, (g_asc_reception_buffer + 6)
   \   0000007E   3A08               CPI     R16, 168
   \   00000080   F0A9               BREQ    ??KO_setting_procedure_7
   \   00000082   9100....           LDS     R16, (g_asc_reception_buffer + 6)
   \   00000086   3A06               CPI     R16, 166
   \   00000088   F089               BREQ    ??KO_setting_procedure_7
   \   0000008A   9100....           LDS     R16, (g_asc_reception_buffer + 6)
   \   0000008E   3707               CPI     R16, 119
   \   00000090   F069               BREQ    ??KO_setting_procedure_7
   \   00000092   9100....           LDS     R16, (g_asc_reception_buffer + 6)
   \   00000096   3800               CPI     R16, 128
   \   00000098   F049               BREQ    ??KO_setting_procedure_7
   \   0000009A   9100....           LDS     R16, (g_asc_reception_buffer + 6)
   \   0000009E   3A04               CPI     R16, 164
   \   000000A0   F029               BREQ    ??KO_setting_procedure_7
   \   000000A2   9100....           LDS     R16, (g_asc_reception_buffer + 6)
   \   000000A6   3A05               CPI     R16, 165
   \   000000A8   F009               BREQ    $+2+2
   \   000000AA   C058               RJMP    ??KO_setting_procedure_6
   \                     ??KO_setting_procedure_7:
   \   000000AC   9100....           LDS     R16, product_information
   \   000000B0   3003               CPI     R16, 3
   \   000000B2   F0C9               BREQ    ??KO_setting_procedure_8
   \   000000B4   ....               LDI     R30, LOW(flags)
   \   000000B6   ....               LDI     R31, (flags) >> 8
   \   000000B8   8102               LDD     R16, Z+2
   \   000000BA   8113               LDD     R17, Z+3
   \   000000BC   FD02               SBRC    R16, 2
   \   000000BE   C013               RJMP    ??KO_setting_procedure_8
   \   000000C0   8102               LDD     R16, Z+2
   \   000000C2   8113               LDD     R17, Z+3
   \   000000C4   FD03               SBRC    R16, 3
   \   000000C6   C00F               RJMP    ??KO_setting_procedure_8
   \   000000C8   9100....           LDS     R16, (KO + 2)
   \   000000CC   9110....           LDS     R17, (g_reception_buffer + 12)
   \   000000D0   1701               CP      R16, R17
   \   000000D2   F431               BRNE    ??KO_setting_procedure_9
   \   000000D4   9100....           LDS     R16, (KO + 3)
   \   000000D8   9110....           LDS     R17, (g_reception_buffer + 13)
   \   000000DC   1701               CP      R16, R17
   \   000000DE   F019               BREQ    ??KO_setting_procedure_8
   2330                    {
   2331          						if((product_information.conf_type != NONE_CONFED && flags.KO_erase_all == 0 && flags.KO_erase_main == 0) && (KO[2] != g_reception_buffer[12] || KO[3] != g_reception_buffer[13]))
   2332          						{
   2333          							KO_setting_error_frame(ASSIGNED_AGAIN,1);
   \                     ??KO_setting_procedure_9:
   \   000000E0   E011               LDI     R17, 1
   \   000000E2   E002               LDI     R16, 2
   \   000000E4   C05F               RJMP    ??KO_setting_procedure_10
   2334          						}
   \                     ??KO_setting_procedure_8:
   \   000000E6   9100....           LDS     R16, (g_reception_buffer + 10)
   \   000000EA   9300....           STS     KO, R16
   2335          						else
   2336          						{
   2337                      	KO[0] = g_reception_buffer[10];
   2338                      	KO[1] = g_reception_buffer[11];
   \   000000EE   9100....           LDS     R16, (g_reception_buffer + 11)
   \   000000F2   9300....           STS     (KO + 1), R16
   2339                      	KO[2] = g_reception_buffer[12];
   \   000000F6   9100....           LDS     R16, (g_reception_buffer + 12)
   \   000000FA   9300....           STS     (KO + 2), R16
   2340                      	KO[3] = g_reception_buffer[13];
   \   000000FE   9100....           LDS     R16, (g_reception_buffer + 13)
   \   00000102   9300....           STS     (KO + 3), R16
   2341                      	product_information.conf_type = ADVANCED;    //modified now
   \   00000106   E002               LDI     R16, 2
   \   00000108   9300....           STS     product_information, R16
   2342          							if(g_asc_reception_buffer[6] == 0xA8 || g_asc_reception_buffer[6] == 0xA6 || g_asc_reception_buffer[6] == 0x77)
   \   0000010C   9100....           LDS     R16, (g_asc_reception_buffer + 6)
   \   00000110   3A08               CPI     R16, 168
   \   00000112   F041               BREQ    ??KO_setting_procedure_11
   \   00000114   9100....           LDS     R16, (g_asc_reception_buffer + 6)
   \   00000118   3A06               CPI     R16, 166
   \   0000011A   F021               BREQ    ??KO_setting_procedure_11
   \   0000011C   9100....           LDS     R16, (g_asc_reception_buffer + 6)
   \   00000120   3707               CPI     R16, 119
   \   00000122   F431               BRNE    ??KO_setting_procedure_12
   2343                      	{
   2344                        	product_information.cen_system = 0;
   \                     ??KO_setting_procedure_11:
   \   00000124   E000               LDI     R16, 0
   \   00000126   9300....           STS     (product_information + 4), R16
   2345          								temp_product_information.cen_system = 0;
   \   0000012A   9300....           STS     (temp_product_information + 4), R16
   \   0000012E   C007               RJMP    ??KO_setting_procedure_13
   2346                      	}
   2347                      	else
   2348                      	{
   2349                        	product_information.cen_system = 1;
   \                     ??KO_setting_procedure_12:
   \   00000130   E001               LDI     R16, 1
   \   00000132   9300....           STS     (product_information + 4), R16
   2350          								temp_product_information.cen_system = 1;
   \   00000136   9300....           STS     (temp_product_information + 4), R16
   2351                        	flags_muti_step.cen_system_step = 1;
   \   0000013A   9300....           STS     flags_muti_step, R16
   2352                      	}
   2353          							KO_parameter_initial_temp();
   \                     ??KO_setting_procedure_13:
   \   0000013E   ........           CALL    KO_parameter_initial_temp
   2354          							flags.KO_conf_right = 1;
   \   00000142   ....               LDI     R30, LOW(flags)
   \   00000144   ....               LDI     R31, (flags) >> 8
   \   00000146   8102               LDD     R16, Z+2
   \   00000148   8113               LDD     R17, Z+3
   \   0000014A   6002               ORI     R16, 0x02
   \   0000014C   8313               STD     Z+3, R17
   \   0000014E   8302               STD     Z+2, R16
   2355          							flags.parameter_setting_wrong = 0;
   \   00000150   8104               LDD     R16, Z+4
   \   00000152   8115               LDD     R17, Z+5
   \   00000154   7F0D               ANDI    R16, 0xFD
   \   00000156   8315               STD     Z+5, R17
   \   00000158   8304               STD     Z+4, R16
   \   0000015A   9508               RET
   2356          							//delay_ms(100); //avoid to 3 times transfier from interface
   2357          							//frame_buffer_clear();
   2358          						}
   2359                    }
   2360          					else
   2361          					{
   2362          						KO_setting_error_frame(NOT_IMPLEMENTED,1);
   \                     ??KO_setting_procedure_6:
   \   0000015C   E011               LDI     R17, 1
   \   0000015E   C021               RJMP    ??KO_setting_procedure_14
   2363          					}
   2364                  }
   2365          				else
   2366          				{
   2367          					KO_setting_error_frame(NOT_IMPLEMENTED,1);
   2368          				}
   2369          #endif
   2370          
   2371          #ifdef NONE_CONFED_204
   2372                if(g_asc_reception_buffer[5] == 0x00)
   2373                {
   2374                  switch(g_asc_reception_buffer[6])
   2375                  {
   2376                  case 0xA6:
   2377                    KO[0] = g_reception_buffer[10];
   2378                    KO[1] = g_reception_buffer[11];
   2379                    KO[2] = g_reception_buffer[12];
   2380                    KO[3] = g_reception_buffer[13];
   2381                    product_information.conf_type = 2;    //modified now
   2382                    flags.KO_conf_right = 1;
   2383                    break;
   2384          
   2385                  case 0xA4:
   2386                    KO[0] = g_reception_buffer[10];
   2387                    KO[1] = g_reception_buffer[11];
   2388                    KO[2] = g_reception_buffer[12];
   2389                    KO[3] = g_reception_buffer[13];
   2390                    product_information.conf_type = 2;    //modified now
   2391                    flags.KO_conf_right = 1;
   2392                    break;
   2393          
   2394                  default:break;
   2395                  }
   2396                }
   2397          #endif
   2398          
   2399          #ifdef NONE_CONFED_1FF
   2400                if(g_asc_reception_buffer[5] == 0x00)
   2401                {
   2402                  switch(g_asc_reception_buffer[6])
   2403                  {
   2404                  case 0x77:
   2405                    KO[0] = g_reception_buffer[10];
   2406                    KO[1] = g_reception_buffer[11];
   2407                    KO[2] = g_reception_buffer[12];
   2408                    KO[3] = g_reception_buffer[13];
   2409                    product_information.conf_type = 2;    //modified now
   2410                    flags.KO_conf_right = 1;
   2411                    break;
   2412          
   2413                  case 0xA5:
   2414                    KO[0] = g_reception_buffer[10];
   2415                    KO[1] = g_reception_buffer[11];
   2416                    KO[2] = g_reception_buffer[12];
   2417                    KO[3] = g_reception_buffer[13];
   2418                    product_information.conf_type = 2;    //modified now
   2419                    flags.KO_conf_right = 1;
   2420                    break;
   2421          
   2422                  case 0x70:
   2423                    KO[0] = g_reception_buffer[10];
   2424                    KO[1] = g_reception_buffer[11];
   2425                    KO[2] = g_reception_buffer[12];
   2426                    KO[3] = g_reception_buffer[13];
   2427                    product_information.conf_type = 2;    //modified now
   2428                    flags.KO_conf_right = 1;
   2429                    break;
   2430                  default:break;
   2431                  }
   2432                }
   2433          #endif
   2434              }
   2435              else if(g_asc_reception_buffer[CHANNEL] >= 0x02 && g_asc_reception_buffer[CHANNEL] <= 0x11)
   \                     ??KO_setting_procedure_5:
   \   00000160   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   00000164   3002               CPI     R16, 2
   \   00000166   F100               BRCS    ??KO_setting_procedure_15
   \   00000168   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   0000016C   3102               CPI     R16, 18
   \   0000016E   F4E0               BRCC    ??KO_setting_procedure_15
   2436              {
   2437                if(g_asc_reception_buffer[5] == 0x01 && g_asc_reception_buffer[6] == 0xAF)
   \   00000170   9100....           LDS     R16, (g_asc_reception_buffer + 5)
   \   00000174   3001               CPI     R16, 1
   \   00000176   F499               BRNE    ??KO_setting_procedure_16
   \   00000178   9100....           LDS     R16, (g_asc_reception_buffer + 6)
   \   0000017C   3A0F               CPI     R16, 175
   \   0000017E   F479               BRNE    ??KO_setting_procedure_16
   \   00000180   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   00000184   9300....           STS     (temp_variable + 6), R16
   2438                {
   2439                  temp_variable.conf_KO_scenario = g_asc_reception_buffer[CHANNEL];
   2440                  temp_variable.conf_KO_scenario -= 2;
   \   00000188   9100....           LDS     R16, (temp_variable + 6)
   \   0000018C   5002               SUBI    R16, 2
   \   0000018E   9300....           STS     (temp_variable + 6), R16
   2441                  flags.scenario_scs_confed = 1;
   \   00000192   ....               LDI     R30, LOW(flags)
   \   00000194   ....               LDI     R31, (flags) >> 8
   \   00000196   8102               LDD     R16, Z+2
   \   00000198   8113               LDD     R17, Z+3
   \   0000019A   6400               ORI     R16, 0x40
   \   0000019C   CF49               RJMP    ??KO_setting_procedure_2
   2442                }
   2443          			else
   2444          			{
   2445          				KO_setting_error_frame(NOT_IMPLEMENTED,g_asc_reception_buffer[CHANNEL]);
   \                     ??KO_setting_procedure_16:
   \   0000019E   9110....           LDS     R17, (g_asc_reception_buffer + 7)
   \                     ??KO_setting_procedure_14:
   \   000001A2   E000               LDI     R16, 0
   \                     ??KO_setting_procedure_10:
   \   000001A4   ....               RCALL   KO_setting_error_frame
   \   000001A6   9508               RET
   2446          			}
   2447              }
   2448          		else
   2449          		{
   2450          			KO_setting_error_frame(OUT_KO,g_asc_reception_buffer[CHANNEL]);
   \                     ??KO_setting_procedure_15:
   \   000001A8   9110....           LDS     R17, (g_asc_reception_buffer + 7)
   \   000001AC   E004               LDI     R16, 4
   \   000001AE   ....               RCALL   KO_setting_error_frame
   2451          		}
   2452            }
   2453          }
   \                     ??KO_setting_procedure_4:
   \   000001B0   9508               RET
   2454          

   \                                 In  segment CODE, align 2, keep-with-next
   2455          void configuration_procedure(void)
   \                     configuration_procedure:
   2456          {
   \   00000000   ........           CALL    ?PROLOGUE3_L09
   \   00000004   97EF               SBIW    R29:R28, 63
   \   00000006   9727               SBIW    R29:R28, 7
   2457            unsigned char i;
   2458          	unsigned char buffer[3];
   2459          	unsigned char buffer_tx[17];			// 20090216
   2460          	//static unsigned char data[7];
   2461            unsigned char conf_right = 0xFF;
   \   00000008   EF0F               LDI     R16, 255
   2462            //unsigned char flag_avoid_twice_wrong = 0;
   2463            unsigned char flag_reset = 0;
   \   0000000A   E0A0               LDI     R26, 0
   \   0000000C   9110....           LDS     R17, (g_asc_reception_buffer + 6)
   \   00000010   5010               SUBI    R17, 0
   \   00000012   F051               BREQ    ??configuration_procedure_0
   \   00000014   951A               DEC     R17
   \   00000016   F409               BRNE    $+2+2
   \   00000018   C2E3               RJMP    ??configuration_procedure_1
   \   0000001A   5018               SUBI    R17, 8
   \   0000001C   F409               BRNE    $+2+2
   \   0000001E   C2F4               RJMP    ??configuration_procedure_2
   \   00000020   951A               DEC     R17
   \   00000022   F409               BRNE    $+2+2
   \   00000024   C3F2               RJMP    ??configuration_procedure_3
   \   00000026   C430               RJMP    ??configuration_procedure_4
   2464          
   2465            switch(g_asc_reception_buffer[6])
   2466          			{
   2467          				case 0x00:  //configuration set frame
   2468          					switch(g_asc_reception_buffer[7])
   \                     ??configuration_procedure_0:
   \   00000028   9110....           LDS     R17, (g_asc_reception_buffer + 7)
   \   0000002C   5A1A               SUBI    R17, 170
   \   0000002E   F0B1               BREQ    ??configuration_procedure_5
   \   00000030   5416               SUBI    R17, 70
   \   00000032   F409               BRNE    $+2+2
   \   00000034   C068               RJMP    ??configuration_procedure_6
   \   00000036   501A               SUBI    R17, 10
   \   00000038   F409               BRNE    $+2+2
   \   0000003A   C073               RJMP    ??configuration_procedure_7
   \   0000003C   5015               SUBI    R17, 5
   \   0000003E   F409               BRNE    $+2+2
   \   00000040   C086               RJMP    ??configuration_procedure_8
   \   00000042   951A               DEC     R17
   \   00000044   F009               BREQ    $+2+2
   \   00000046   C420               RJMP    ??configuration_procedure_4
   2469          					{
   2470          						case 0x00: //start configuration
   2471                          key_result.short_pressed = 0;
   \   00000048   ....               LDI     R30, LOW(key_result)
   \   0000004A   ....               LDI     R31, (key_result) >> 8
   \   0000004C   83A0               ST      Z, R26
   2472                          key_result.long_pressed = 0;
   \   0000004E   83A1               STD     Z+1, R26
   2473          								state.main_state = STATE_PRE_PROGRAMMING;
   \                     ??configuration_procedure_9:
   \   00000050   E110               LDI     R17, 16
   \   00000052   93A0....           STS     (state + 2), R26
   \   00000056   9310....           STS     (state + 3), R17
   \   0000005A   C416               RJMP    ??configuration_procedure_4
   2474          						break;
   2475          
   2476          						case 0xAA: //stop sending frame
   2477          							if(state.main_state == STATE_PROGRAMMING_DURING)
   \                     ??configuration_procedure_5:
   \   0000005C   9120....           LDS     R18, (state + 2)
   \   00000060   9130....           LDS     R19, (state + 3)
   \   00000064   3020               CPI     R18, 0
   \   00000066   E211               LDI     R17, 33
   \   00000068   0731               CPC     R19, R17
   \   0000006A   F459               BRNE    ??configuration_procedure_10
   2478                        {
   2479          								flags.AA_received = 1;
   \   0000006C   ....               LDI     R30, LOW(flags)
   \   0000006E   ....               LDI     R31, (flags) >> 8
   \   00000070   8122               LDD     R18, Z+2
   \   00000072   8133               LDD     R19, Z+3
   \   00000074   6430               ORI     R19, 0x40
   \   00000076   8333               STD     Z+3, R19
   \   00000078   8322               STD     Z+2, R18
   2480                          if(flags.KO_conf_right)
   \   0000007A   8122               LDD     R18, Z+2
   \   0000007C   8133               LDD     R19, Z+3
   \   0000007E   FD21               SBRC    R18, 1
   2481                          {
   2482                            //flags.KO_conf_right = 0;
   2483                            conf_right = 1;
   \   00000080   E001               LDI     R16, 1
   2484                          }
   2485                        }
   2486          
   2487          							if(flags_muti_step.cen_system_step == 2 || flags.KO_erase_all || flags.KO_erase_main || flags.KO_erase_scenario || flags.scenario_scs_confed)
   \                     ??configuration_procedure_10:
   \   00000082   9110....           LDS     R17, flags_muti_step
   \   00000086   3012               CPI     R17, 2
   \   00000088   F091               BREQ    ??configuration_procedure_11
   \   0000008A   ....               LDI     R30, LOW(flags)
   \   0000008C   ....               LDI     R31, (flags) >> 8
   \   0000008E   8122               LDD     R18, Z+2
   \   00000090   8133               LDD     R19, Z+3
   \   00000092   FD22               SBRC    R18, 2
   \   00000094   C00C               RJMP    ??configuration_procedure_11
   \   00000096   8122               LDD     R18, Z+2
   \   00000098   8133               LDD     R19, Z+3
   \   0000009A   FD23               SBRC    R18, 3
   \   0000009C   C008               RJMP    ??configuration_procedure_11
   \   0000009E   8122               LDD     R18, Z+2
   \   000000A0   8133               LDD     R19, Z+3
   \   000000A2   FD24               SBRC    R18, 4
   \   000000A4   C004               RJMP    ??configuration_procedure_11
   \   000000A6   8122               LDD     R18, Z+2
   \   000000A8   8133               LDD     R19, Z+3
   \   000000AA   FF26               SBRS    R18, 6
   \   000000AC   C002               RJMP    ??configuration_procedure_12
   2488                        {
   2489                          conf_right = 1;
   \                     ??configuration_procedure_11:
   \   000000AE   E001               LDI     R16, 1
   \   000000B0   C004               RJMP    ??configuration_procedure_13
   2490                        }
   2491          							else if(flags.parameter_write_right)
   \                     ??configuration_procedure_12:
   \   000000B2   8122               LDD     R18, Z+2
   \   000000B4   8133               LDD     R19, Z+3
   \   000000B6   FD27               SBRC    R18, 7
   \   000000B8   CFFA               RJMP    ??configuration_procedure_11
   2492          							{
   2493          								conf_right = 1;
   2494          							}
   2495          
   2496          							if(flags_muti_step.cen_system_step == CONF_WRONG || flags.parameter_setting_wrong == 1)
   \                     ??configuration_procedure_13:
   \   000000BA   9110....           LDS     R17, flags_muti_step
   \   000000BE   3014               CPI     R17, 4
   \   000000C0   F029               BREQ    ??configuration_procedure_14
   \   000000C2   ....               LDI     R30, LOW(flags)
   \   000000C4   ....               LDI     R31, (flags) >> 8
   \   000000C6   8124               LDD     R18, Z+4
   \   000000C8   8135               LDD     R19, Z+5
   \   000000CA   FD21               SBRC    R18, 1
   2497                        {
   2498                          conf_right = 0;
   \                     ??configuration_procedure_14:
   \   000000CC   E000               LDI     R16, 0
   2499                        }
   2500          							
   2501                        if(conf_right == 1)
   \                     ??configuration_procedure_15:
   \   000000CE   3001               CPI     R16, 1
   \   000000D0   F429               BRNE    ??configuration_procedure_16
   2502                          send_frame_pp_ext_broad("D20001348C0000AB",TRANS_DELAY);
   \   000000D2   E322               LDI     R18, 50
   \   000000D4   E030               LDI     R19, 0
   \   000000D6   ....               LDI     R16, LOW(`?<Constant "D20001348C0000AB">`)
   \   000000D8   ....               LDI     R17, (`?<Constant "D20001348C0000AB">`) >> 8
   \   000000DA   C006               RJMP    ??configuration_procedure_17
   2503                        else if(conf_right == 0)
   \                     ??configuration_procedure_16:
   \   000000DC   2300               TST     R16
   \   000000DE   F431               BRNE    ??configuration_procedure_18
   2504                          send_frame_pp_ext_broad("D20001348C0000EE",TRANS_DELAY);
   \   000000E0   E322               LDI     R18, 50
   \   000000E2   E030               LDI     R19, 0
   \   000000E4   ....               LDI     R16, LOW((`?<Constant "D20001348C0000AB">` + 17))
   \   000000E6   ....               LDI     R17, HIGH((`?<Constant "D20001348C0000AB">` + 17))
   \                     ??configuration_procedure_17:
   \   000000E8   ........           CALL    send_frame_pp_ext_broad
   2505          
   2506          							flags.parameter_setting_wrong = 0;
   \                     ??configuration_procedure_18:
   \   000000EC   ....               LDI     R30, LOW(flags)
   \   000000EE   ....               LDI     R31, (flags) >> 8
   \   000000F0   8104               LDD     R16, Z+4
   \   000000F2   8115               LDD     R17, Z+5
   \   000000F4   7F0D               ANDI    R16, 0xFD
   \   000000F6   8315               STD     Z+5, R17
   \   000000F8   8304               STD     Z+4, R16
   2507          							flags.parameter_write_right = 0;
   \   000000FA   8102               LDD     R16, Z+2
   \   000000FC   8113               LDD     R17, Z+3
   \   000000FE   770F               ANDI    R16, 0x7F
   \                     ??configuration_procedure_19:
   \   00000100   8313               STD     Z+3, R17
   \   00000102   8302               STD     Z+2, R16
   \   00000104   C3C1               RJMP    ??configuration_procedure_4
   2508          						break;
   2509          
   2510          						case 0xF0: //reset EEP configuration
   2511                        if(state.main_state == STATE_PROGRAMMING_DURING)
   \                     ??configuration_procedure_6:
   \   00000106   9100....           LDS     R16, (state + 2)
   \   0000010A   9110....           LDS     R17, (state + 3)
   \   0000010E   3000               CPI     R16, 0
   \   00000110   E221               LDI     R18, 33
   \   00000112   0712               CPC     R17, R18
   \   00000114   F009               BREQ    $+2+2
   \   00000116   C3B8               RJMP    ??configuration_procedure_4
   2512                        {
   2513          							  factory_default();
   \   00000118   ........           CALL    factory_default
   2514          							  system_reset();
   \                     ??configuration_procedure_20:
   \   0000011C   ........           CALL    system_reset
   \   00000120   C3B3               RJMP    ??configuration_procedure_4
   2515                        }
   2516          						break;
   2517          
   2518          						case 0xFA: //configuration aborted
   2519                        if(state.main_state == STATE_PROGRAMMING_DURING || state.main_state == STATE_TEST_DURING)
   \                     ??configuration_procedure_7:
   \   00000122   ....               LDI     R30, LOW(state)
   \   00000124   ....               LDI     R31, (state) >> 8
   \   00000126   8102               LDD     R16, Z+2
   \   00000128   8113               LDD     R17, Z+3
   \   0000012A   3000               CPI     R16, 0
   \   0000012C   E221               LDI     R18, 33
   \   0000012E   0712               CPC     R17, R18
   \   00000130   F039               BREQ    ??configuration_procedure_21
   \   00000132   8102               LDD     R16, Z+2
   \   00000134   8113               LDD     R17, Z+3
   \   00000136   3002               CPI     R16, 2
   \   00000138   E220               LDI     R18, 32
   \   0000013A   0712               CPC     R17, R18
   \   0000013C   F009               BREQ    $+2+2
   \   0000013E   C3A4               RJMP    ??configuration_procedure_4
   2520                        {
   2521          							  state.main_state = STATE_NORMAL;
   \                     ??configuration_procedure_21:
   \   00000140   93A0....           STS     (state + 2), R26
   \   00000144   93A0....           STS     (state + 3), R26
   2522                          led_blinking_normal();
   \                     ??configuration_procedure_22:
   \   00000148   ........           CALL    led_blinking_normal
   \   0000014C   C39D               RJMP    ??configuration_procedure_4
   2523                        }
   2524          						break;
   2525          
   2526          						case 0xFF: //end of configuration
   2527                        if(flags.KO_erase_main && flags.KO_conf_right == 0)
   \                     ??configuration_procedure_8:
   \   0000014E   ....               LDI     R30, LOW(flags)
   \   00000150   ....               LDI     R31, (flags) >> 8
   \   00000152   8102               LDD     R16, Z+2
   \   00000154   8113               LDD     R17, Z+3
   \   00000156   FF03               SBRS    R16, 3
   \   00000158   C059               RJMP    ??configuration_procedure_23
   \   0000015A   8102               LDD     R16, Z+2
   \   0000015C   8113               LDD     R17, Z+3
   \   0000015E   FD01               SBRC    R16, 1
   \   00000160   C055               RJMP    ??configuration_procedure_23
   2528                        {
   2529                          flags.KO_erase_main = 0;
   \   00000162   8102               LDD     R16, Z+2
   \   00000164   8113               LDD     R17, Z+3
   \   00000166   7F07               ANDI    R16, 0xF7
   \   00000168   8313               STD     Z+3, R17
   \   0000016A   8302               STD     Z+2, R16
   2530          								if(flags.AA_received)
   \   0000016C   8102               LDD     R16, Z+2
   \   0000016E   8113               LDD     R17, Z+3
   \   00000170   2F01               MOV     R16, R17
   \   00000172   FF06               SBRS    R16, 6
   \   00000174   C04B               RJMP    ??configuration_procedure_23
   \   00000176   ....               LDI     R30, LOW(flash_KO)
   \   00000178   ....               LDI     R31, (flash_KO) >> 8
   \   0000017A   8100               LD      R16, Z
   \   0000017C   ....               LDI     R20, LOW(ee_KO)
   \   0000017E   ....               LDI     R21, (ee_KO) >> 8
   \   00000180   ........           CALL    __eeput8_16
   2531          								{	
   2532                          	//load_default_parameter();
   2533          	              	//remember_parameter();
   2534                          	ee_KO[0] = flash_KO[0];
   2535                          	ee_KO[1] = flash_KO[1];
   \   00000184   8111               LDD     R17, Z+1
   \   00000186   ....               LDI     R20, LOW((ee_KO + 1))
   \   00000188   ....               LDI     R21, HIGH((ee_KO + 1))
   \   0000018A   2F01               MOV     R16, R17
   \   0000018C   ........           CALL    __eeput8_16
   2536                          	ee_KO[2] = flash_KO[2];
   \   00000190   8122               LDD     R18, Z+2
   \   00000192   ....               LDI     R20, LOW((ee_KO + 2))
   \   00000194   ....               LDI     R21, HIGH((ee_KO + 2))
   \   00000196   2F02               MOV     R16, R18
   \   00000198   ........           CALL    __eeput8_16
   2537                          	ee_KO[3] = flash_KO[3];
   \   0000019C   8103               LDD     R16, Z+3
   \   0000019E   ....               LDI     R20, LOW((ee_KO + 3))
   \   000001A0   ....               LDI     R21, HIGH((ee_KO + 3))
   \   000001A2   ........           CALL    __eeput8_16
   \   000001A6   8130               LD      R19, Z
   \   000001A8   9330....           STS     KO, R19
   2538                          	KO[0] = flash_KO[0];
   2539                          	KO[1] = flash_KO[1];
   \   000001AC   9310....           STS     (KO + 1), R17
   2540                          	KO[2] = flash_KO[2];
   \   000001B0   9320....           STS     (KO + 2), R18
   2541                          	KO[3] = flash_KO[3];
   \   000001B4   9300....           STS     (KO + 3), R16
   \   000001B8   E000               LDI     R16, 0
   \   000001BA   ....               LDI     R20, LOW((ee_product_information + 4))
   \   000001BC   ....               LDI     R21, HIGH((ee_product_information + 4))
   \   000001BE   ........           CALL    __eeput8_16
   2542                          	ee_product_information.cen_system = 0;
   2543          	              	ee_product_information.conf_type = NONE_CONFED;
   \   000001C2   E003               LDI     R16, 3
   \   000001C4   ....               LDI     R20, LOW(ee_product_information)
   \   000001C6   ....               LDI     R21, (ee_product_information) >> 8
   \   000001C8   ........           CALL    __eeput8_16
   2544                          	product_information.cen_system = 0;
   \   000001CC   93A0....           STS     (product_information + 4), R26
   2545          	              	product_information.conf_type = NONE_CONFED;
   \   000001D0   9300....           STS     product_information, R16
   \   000001D4   E300               LDI     R16, 48
   \   000001D6   ....               LDI     R20, LOW((ee_configurators + 1))
   \   000001D8   ....               LDI     R21, HIGH((ee_configurators + 1))
   \   000001DA   ........           CALL    __eeput8_16
   2546          
   2547          	              	ee_configurators.A = '0';
   2548          	              	ee_configurators.PL = '0';
   \   000001DE   ....               LDI     R20, LOW((ee_configurators + 2))
   \   000001E0   ....               LDI     R21, HIGH((ee_configurators + 2))
   \   000001E2   ........           CALL    __eeput8_16
   2549          	              	ee_configurators.M = '0';
   \   000001E6   ....               LDI     R20, LOW((ee_configurators + 3))
   \   000001E8   ....               LDI     R21, HIGH((ee_configurators + 3))
   \   000001EA   ........           CALL    __eeput8_16
   2550          	              	ee_configurators.S = '0';
   \   000001EE   ....               LDI     R20, LOW((ee_configurators + 4))
   \   000001F0   ....               LDI     R21, HIGH((ee_configurators + 4))
   \   000001F2   ........           CALL    __eeput8_16
   2551          	              	ee_configurators.T = '0';
   \   000001F6   ....               LDI     R20, LOW((ee_configurators + 5))
   \   000001F8   ....               LDI     R21, HIGH((ee_configurators + 5))
   \   000001FA   ........           CALL    __eeput8_16
   2552          
   2553                          	Configurators.A = '0';
   \   000001FE   ....               LDI     R30, LOW(Configurators)
   \   00000200   ....               LDI     R31, (Configurators) >> 8
   \   00000202   8301               STD     Z+1, R16
   2554          	             		Configurators.PL = '0';
   \   00000204   8302               STD     Z+2, R16
   2555          	              	Configurators.M = '0';
   \   00000206   8303               STD     Z+3, R16
   2556          	              	Configurators.S = '0';
   \   00000208   8304               STD     Z+4, R16
   2557          	              	Configurators.T = '0';
   \   0000020A   8305               STD     Z+5, R16
   2558                          	//flag_reset = 1;
   2559          								}
   2560                        }
   2561          
   2562                        if(flags.KO_conf_right)
   \                     ??configuration_procedure_23:
   \   0000020C   ....               LDI     R30, LOW(flags)
   \   0000020E   ....               LDI     R31, (flags) >> 8
   \   00000210   8102               LDD     R16, Z+2
   \   00000212   8113               LDD     R17, Z+3
   \   00000214   FF01               SBRS    R16, 1
   \   00000216   C0E9               RJMP    ??configuration_procedure_24
   2563                        {
   2564          								if(flags.AA_received )
   \   00000218   8102               LDD     R16, Z+2
   \   0000021A   8113               LDD     R17, Z+3
   \   0000021C   2F01               MOV     R16, R17
   \   0000021E   FF06               SBRS    R16, 6
   \   00000220   C0E2               RJMP    ??configuration_procedure_25
   2565          								{
   2566          									if(product_information.cen_system == 0)
   \   00000222   ....               LDI     R24, LOW(product_information)
   \   00000224   ....               LDI     R25, (product_information) >> 8
   \   00000226   9100....           LDS     R16, (product_information + 4)
   \   0000022A   2300               TST     R16
   \   0000022C   F009               BREQ    $+2+2
   \   0000022E   C074               RJMP    ??configuration_procedure_26
   \   00000230   9100....           LDS     R16, KO
   \   00000234   ....               LDI     R20, LOW(ee_KO)
   \   00000236   ....               LDI     R21, (ee_KO) >> 8
   \   00000238   ........           CALL    __eeput8_16
   2567          									{
   2568          										ee_KO[0] = KO[0];
   2569          										ee_KO[1] = KO[1];
   \   0000023C   9100....           LDS     R16, (KO + 1)
   \   00000240   ....               LDI     R20, LOW((ee_KO + 1))
   \   00000242   ....               LDI     R21, HIGH((ee_KO + 1))
   \   00000244   ........           CALL    __eeput8_16
   2570          										ee_KO[2] = KO[2];
   \   00000248   9100....           LDS     R16, (KO + 2)
   \   0000024C   ....               LDI     R20, LOW((ee_KO + 2))
   \   0000024E   ....               LDI     R21, HIGH((ee_KO + 2))
   \   00000250   ........           CALL    __eeput8_16
   2571          										ee_KO[3] = KO[3];
   \   00000254   9100....           LDS     R16, (KO + 3)
   \   00000258   ....               LDI     R20, LOW((ee_KO + 3))
   \   0000025A   ....               LDI     R21, HIGH((ee_KO + 3))
   \   0000025C   ........           CALL    __eeput8_16
   \   00000260   9100....           LDS     R16, KO
   \   00000264   ....               LDI     R20, LOW(ee_KO_last)
   \   00000266   ....               LDI     R21, (ee_KO_last) >> 8
   \   00000268   ........           CALL    __eeput8_16
   2572          										//to avoid power up KO confdiguration
   2573          										ee_KO_last[0] = KO[0];
   2574          										ee_KO_last[1] = KO[1];
   \   0000026C   9100....           LDS     R16, (KO + 1)
   \   00000270   ....               LDI     R20, LOW((ee_KO_last + 1))
   \   00000272   ....               LDI     R21, HIGH((ee_KO_last + 1))
   \   00000274   ........           CALL    __eeput8_16
   2575          										ee_KO_last[2] = KO[2];
   \   00000278   9100....           LDS     R16, (KO + 2)
   \   0000027C   ....               LDI     R20, LOW((ee_KO_last + 2))
   \   0000027E   ....               LDI     R21, HIGH((ee_KO_last + 2))
   \   00000280   ........           CALL    __eeput8_16
   2576          										ee_KO_last[3] = KO[3];
   \   00000284   9100....           LDS     R16, (KO + 3)
   \   00000288   ....               LDI     R20, LOW((ee_KO_last + 3))
   \   0000028A   ....               LDI     R21, HIGH((ee_KO_last + 3))
   \   0000028C   ........           CALL    __eeput8_16
   2577          										//ee_KO_conf = KO_conf;  //2009 04 17
   2578          										KO_parameter_initial();
   \   00000290   ........           CALL    KO_parameter_initial
   \   00000294   019E               MOVW    R19:R18, R29:R28
   \   00000296   5E2C               SUBI    R18, 236
   \   00000298   4F3F               SBCI    R19, 255
   \   0000029A   0189               MOVW    R17:R16, R19:R18
   \   0000029C   ....               LDI     R30, LOW(KO_conf)
   \   0000029E   ....               LDI     R31, (KO_conf) >> 8
   \   000002A0   E342               LDI     R20, 50
   \   000002A2   E050               LDI     R21, 0
   \   000002A4   ........           CALL    ?ML_SRAM_SRAM_16_L07
   \   000002A8   01BE               MOVW    R23:R22, R29:R28
   \   000002AA   5E6C               SUBI    R22, 236
   \   000002AC   4F7F               SBCI    R23, 255
   \   000002AE   ....               LDI     R20, LOW(ee_KO_conf)
   \   000002B0   ....               LDI     R21, (ee_KO_conf) >> 8
   \   000002B2   01FB               MOVW    R31:R30, R23:R22
   \   000002B4   E312               LDI     R17, 50
   \   000002B6   E020               LDI     R18, 0
   \   000002B8   ........           CALL    ?ML_SRAM_EEPROM_16_16_L07
   2579          										//KO_conf = ee_KO_conf;
   2580          										ee_KO_conf = KO_conf;
   2581          										//ee_PnG_KO_conf = KO_conf;
   2582          										ee_variable.GR = KO_conf.GR;
   \   000002BC   9100....           LDS     R16, (KO_conf + 6)
   \   000002C0   ....               LDI     R20, LOW(ee_variable)
   \   000002C2   ....               LDI     R21, (ee_variable) >> 8
   \   000002C4   ........           CALL    __eeput8_16
   2583          										ee_variable.Reference = KO_conf.Reference;
   \   000002C8   9100....           LDS     R16, (KO_conf + 5)
   \   000002CC   ....               LDI     R20, LOW((ee_variable + 1))
   \   000002CE   ....               LDI     R21, HIGH((ee_variable + 1))
   \   000002D0   ........           CALL    __eeput8_16
   2584          										ee_flags.PnG_confed = 1;
   \   000002D4   ....               LDI     R20, LOW(ee_flags)
   \   000002D6   ....               LDI     R21, (ee_flags) >> 8
   \   000002D8   ........           CALL    __eeget16_16
   \   000002DC   6002               ORI     R16, 0x02
   \   000002DE   ....               LDI     R20, LOW(ee_flags)
   \   000002E0   ....               LDI     R21, (ee_flags) >> 8
   \   000002E2   ........           CALL    __eeput16_16
   2585          										
   2586          										if(KO_conf.AddressType == PP)
   \   000002E6   9100....           LDS     R16, (KO_conf + 1)
   \   000002EA   2300               TST     R16
   \   000002EC   F479               BRNE    ??configuration_procedure_27
   2587          										{
   2588          											CharToStr(KO_conf.DesAdd,buffer);
   \   000002EE   019E               MOVW    R19:R18, R29:R28
   \   000002F0   9100....           LDS     R16, (KO_conf + 2)
   \   000002F4   ........           CALL    CharToStr
   \   000002F8   8108               LD      R16, Y
   \   000002FA   ....               LDI     R20, LOW((ee_configurators + 1))
   \   000002FC   ....               LDI     R21, HIGH((ee_configurators + 1))
   \   000002FE   ........           CALL    __eeput8_16
   2589          											ee_configurators.A = buffer[0];
   2590          											ee_configurators.PL = buffer[1];
   \   00000302   8109               LDD     R16, Y+1
   \   00000304   ....               LDI     R20, LOW((ee_configurators + 2))
   \   00000306   ....               LDI     R21, HIGH((ee_configurators + 2))
   \   00000308   ........           CALL    __eeput8_16
   2591          										}
   2592          										
   2593          										ee_product_information = product_information;
   \                     ??configuration_procedure_27:
   \   0000030C   ....               LDI     R20, LOW(ee_product_information)
   \   0000030E   ....               LDI     R21, (ee_product_information) >> 8
   \   00000310   01FC               MOVW    R31:R30, R25:R24
   \   00000312   E017               LDI     R17, 7
   \   00000314   E020               LDI     R18, 0
   \   00000316   C065               RJMP    ??configuration_procedure_28
   2594          									}
   2595          									else if(product_information.cen_system == 1)
   \                     ??configuration_procedure_26:
   \   00000318   3001               CPI     R16, 1
   \   0000031A   F009               BREQ    $+2+2
   \   0000031C   C064               RJMP    ??configuration_procedure_25
   2596          									{
   2597          									  buffer[0] = temp_product_information.local_A;
   \   0000031E   9100....           LDS     R16, (temp_product_information + 2)
   \   00000322   8308               ST      Y, R16
   2598          										buffer[1] = temp_product_information.local_PL;
   \   00000324   9100....           LDS     R16, (temp_product_information + 3)
   \   00000328   8309               STD     Y+1, R16
   2599          										unsigned char address = StrToChar(buffer);
   \   0000032A   018E               MOVW    R17:R16, R29:R28
   \   0000032C   ........           CALL    StrToChar
   2600          										if(address > 0 && address <= 0xAF)
   \   00000330   2300               TST     R16
   \   00000332   F409               BRNE    $+2+2
   \   00000334   C058               RJMP    ??configuration_procedure_25
   \   00000336   3B00               CPI     R16, 176
   \   00000338   F008               BRCS    $+2+2
   \   0000033A   C055               RJMP    ??configuration_procedure_25
   \   0000033C   9100....           LDS     R16, KO
   \   00000340   ....               LDI     R20, LOW(ee_KO)
   \   00000342   ....               LDI     R21, (ee_KO) >> 8
   \   00000344   ........           CALL    __eeput8_16
   2601          										{
   2602          											ee_KO[0] = KO[0];
   2603          											ee_KO[1] = KO[1];
   \   00000348   9100....           LDS     R16, (KO + 1)
   \   0000034C   ....               LDI     R20, LOW((ee_KO + 1))
   \   0000034E   ....               LDI     R21, HIGH((ee_KO + 1))
   \   00000350   ........           CALL    __eeput8_16
   2604          											ee_KO[2] = KO[2];
   \   00000354   9100....           LDS     R16, (KO + 2)
   \   00000358   ....               LDI     R20, LOW((ee_KO + 2))
   \   0000035A   ....               LDI     R21, HIGH((ee_KO + 2))
   \   0000035C   ........           CALL    __eeput8_16
   2605          											ee_KO[3] = KO[3];
   \   00000360   9100....           LDS     R16, (KO + 3)
   \   00000364   ....               LDI     R20, LOW((ee_KO + 3))
   \   00000366   ....               LDI     R21, HIGH((ee_KO + 3))
   \   00000368   ........           CALL    __eeput8_16
   \   0000036C   9100....           LDS     R16, KO
   \   00000370   ....               LDI     R20, LOW(ee_KO_last)
   \   00000372   ....               LDI     R21, (ee_KO_last) >> 8
   \   00000374   ........           CALL    __eeput8_16
   2606          	
   2607          											ee_KO_last[0] = KO[0];
   2608          											ee_KO_last[1] = KO[1];
   \   00000378   9100....           LDS     R16, (KO + 1)
   \   0000037C   ....               LDI     R20, LOW((ee_KO_last + 1))
   \   0000037E   ....               LDI     R21, HIGH((ee_KO_last + 1))
   \   00000380   ........           CALL    __eeput8_16
   2609          											ee_KO_last[2] = KO[2];
   \   00000384   9100....           LDS     R16, (KO + 2)
   \   00000388   ....               LDI     R20, LOW((ee_KO_last + 2))
   \   0000038A   ....               LDI     R21, HIGH((ee_KO_last + 2))
   \   0000038C   ........           CALL    __eeput8_16
   2610          											ee_KO_last[3] = KO[3];
   \   00000390   9100....           LDS     R16, (KO + 3)
   \   00000394   ....               LDI     R20, LOW((ee_KO_last + 3))
   \   00000396   ....               LDI     R21, HIGH((ee_KO_last + 3))
   \   00000398   ........           CALL    __eeput8_16
   2611          	
   2612          											KO_parameter_initial();
   \   0000039C   ........           CALL    KO_parameter_initial
   2613          											ee_KO_conf = KO_conf;
   \   000003A0   019E               MOVW    R19:R18, R29:R28
   \   000003A2   5E2C               SUBI    R18, 236
   \   000003A4   4F3F               SBCI    R19, 255
   \   000003A6   0189               MOVW    R17:R16, R19:R18
   \   000003A8   ....               LDI     R30, LOW(KO_conf)
   \   000003AA   ....               LDI     R31, (KO_conf) >> 8
   \   000003AC   E342               LDI     R20, 50
   \   000003AE   E050               LDI     R21, 0
   \   000003B0   ........           CALL    ?ML_SRAM_SRAM_16_L07
   \   000003B4   01BE               MOVW    R23:R22, R29:R28
   \   000003B6   5E6C               SUBI    R22, 236
   \   000003B8   4F7F               SBCI    R23, 255
   \   000003BA   ....               LDI     R20, LOW(ee_KO_conf)
   \   000003BC   ....               LDI     R21, (ee_KO_conf) >> 8
   \   000003BE   01FB               MOVW    R31:R30, R23:R22
   \   000003C0   E312               LDI     R17, 50
   \   000003C2   E020               LDI     R18, 0
   \   000003C4   ........           CALL    ?ML_SRAM_EEPROM_16_16_L07
   2614          											
   2615          											ee_flags.PnG_confed = 1;
   \   000003C8   ....               LDI     R20, LOW(ee_flags)
   \   000003CA   ....               LDI     R21, (ee_flags) >> 8
   \   000003CC   ........           CALL    __eeget16_16
   \   000003D0   6002               ORI     R16, 0x02
   \   000003D2   ....               LDI     R20, LOW(ee_flags)
   \   000003D4   ....               LDI     R21, (ee_flags) >> 8
   \   000003D6   ........           CALL    __eeput16_16
   2616          											ee_product_information = product_information;
   \   000003DA   ....               LDI     R20, LOW(ee_product_information)
   \   000003DC   ....               LDI     R21, (ee_product_information) >> 8
   \   000003DE   01FC               MOVW    R31:R30, R25:R24
   \   000003E0   E017               LDI     R17, 7
   \                     ??configuration_procedure_28:
   \   000003E2   ........           CALL    ?ML_SRAM_EEPROM_16_16_L07
   2617          										}
   2618          									}
   2619          								}
   2620          								flag_reset = 1;
   \                     ??configuration_procedure_25:
   \   000003E6   E0A1               LDI     R26, 1
   \   000003E8   C01F               RJMP    ??configuration_procedure_29
   2621                        }
   2622          							else if(flags.parameter_write_right)
   \                     ??configuration_procedure_24:
   \   000003EA   8102               LDD     R16, Z+2
   \   000003EC   8113               LDD     R17, Z+3
   \   000003EE   FF07               SBRS    R16, 7
   \   000003F0   C01B               RJMP    ??configuration_procedure_29
   2623          							{
   2624          								ee_KO_conf = KO_conf;
   \   000003F2   019E               MOVW    R19:R18, R29:R28
   \   000003F4   5E2C               SUBI    R18, 236
   \   000003F6   4F3F               SBCI    R19, 255
   \   000003F8   0189               MOVW    R17:R16, R19:R18
   \   000003FA   ....               LDI     R30, LOW(KO_conf)
   \   000003FC   ....               LDI     R31, (KO_conf) >> 8
   \   000003FE   E342               LDI     R20, 50
   \   00000400   E050               LDI     R21, 0
   \   00000402   ........           CALL    ?ML_SRAM_SRAM_16_L07
   \   00000406   01BE               MOVW    R23:R22, R29:R28
   \   00000408   5E6C               SUBI    R22, 236
   \   0000040A   4F7F               SBCI    R23, 255
   \   0000040C   ....               LDI     R20, LOW(ee_KO_conf)
   \   0000040E   ....               LDI     R21, (ee_KO_conf) >> 8
   \   00000410   01FB               MOVW    R31:R30, R23:R22
   \   00000412   E312               LDI     R17, 50
   \   00000414   E020               LDI     R18, 0
   \   00000416   ........           CALL    ?ML_SRAM_EEPROM_16_16_L07
   2625          								flags.parameter_write_right = 0;
   \   0000041A   ....               LDI     R30, LOW(flags)
   \   0000041C   ....               LDI     R31, (flags) >> 8
   \   0000041E   8102               LDD     R16, Z+2
   \   00000420   8113               LDD     R17, Z+3
   \   00000422   770F               ANDI    R16, 0x7F
   \   00000424   8313               STD     Z+3, R17
   \   00000426   8302               STD     Z+2, R16
   2626          							}
   2627          
   2628                        if(flags.KO_erase_all && flags.KO_conf_right == 0)
   \                     ??configuration_procedure_29:
   \   00000428   ....               LDI     R30, LOW(flags)
   \   0000042A   ....               LDI     R31, (flags) >> 8
   \   0000042C   8102               LDD     R16, Z+2
   \   0000042E   8113               LDD     R17, Z+3
   \   00000430   FF02               SBRS    R16, 2
   \   00000432   C00C               RJMP    ??configuration_procedure_30
   \   00000434   8102               LDD     R16, Z+2
   \   00000436   8113               LDD     R17, Z+3
   \   00000438   FD01               SBRC    R16, 1
   \   0000043A   C008               RJMP    ??configuration_procedure_30
   2629                        {
   2630          								if(flags.AA_received)
   \   0000043C   8102               LDD     R16, Z+2
   \   0000043E   8113               LDD     R17, Z+3
   \   00000440   2F01               MOV     R16, R17
   \   00000442   FF06               SBRS    R16, 6
   \   00000444   C002               RJMP    ??configuration_procedure_31
   2631                          	factory_default();
   \   00000446   ........           CALL    factory_default
   2632                          flag_reset = 1;
   \                     ??configuration_procedure_31:
   \   0000044A   E0A1               LDI     R26, 1
   2633                        }
   2634          
   2635                        if( flags.scenario_scs_confed )
   \                     ??configuration_procedure_30:
   \   0000044C   ....               LDI     R30, LOW(flags)
   \   0000044E   ....               LDI     R31, (flags) >> 8
   \   00000450   8102               LDD     R16, Z+2
   \   00000452   8113               LDD     R17, Z+3
   \   00000454   FF06               SBRS    R16, 6
   \   00000456   C00F               RJMP    ??configuration_procedure_32
   2636                        {
   2637                          ee_scenario[temp_variable.conf_KO_scenario].confed = 1;
   \   00000458   ....               LDI     R18, LOW((ee_scenario + 6))
   \   0000045A   ....               LDI     R19, HIGH((ee_scenario + 6))
   \   0000045C   9140....           LDS     R20, (temp_variable + 6)
   \   00000460   E050               LDI     R21, 0
   \   00000462   E007               LDI     R16, 7
   \   00000464   E010               LDI     R17, 0
   \   00000466   ........           CALL    ?S_EC_MUL_L02
   \   0000046A   0F20               ADD     R18, R16
   \   0000046C   1F31               ADC     R19, R17
   \   0000046E   E001               LDI     R16, 1
   \   00000470   01A9               MOVW    R21:R20, R19:R18
   \   00000472   ........           CALL    __eeput8_16
   2638                          //flag_reset = 1;
   2639                        }
   2640          
   2641                        if(flags.KO_erase_scenario)
   \                     ??configuration_procedure_32:
   \   00000476   8102               LDD     R16, Z+2
   \   00000478   8113               LDD     R17, Z+3
   \   0000047A   FF04               SBRS    R16, 4
   \   0000047C   C003               RJMP    ??configuration_procedure_33
   2642                        {
   2643                          scenario_remove(temp_variable.erase_KO_scenario);
   \   0000047E   9100....           LDS     R16, (temp_variable + 5)
   \   00000482   ....               RCALL   scenario_remove
   2644                        }
   2645          
   2646                        if(flags_muti_step.cen_system_step == 2)
   \                     ??configuration_procedure_33:
   \   00000484   9100....           LDS     R16, flags_muti_step
   \   00000488   3002               CPI     R16, 2
   \   0000048A   F459               BRNE    ??configuration_procedure_34
   2647                        {
   2648                          remember_parameter();
   \   0000048C   ........           CALL    remember_parameter
   2649                          ee_product_information = temp_product_information;
   \   00000490   ....               LDI     R20, LOW(ee_product_information)
   \   00000492   ....               LDI     R21, (ee_product_information) >> 8
   \   00000494   ....               LDI     R30, LOW(temp_product_information)
   \   00000496   ....               LDI     R31, (temp_product_information) >> 8
   \   00000498   E017               LDI     R17, 7
   \   0000049A   E020               LDI     R18, 0
   \   0000049C   ........           CALL    ?ML_SRAM_EEPROM_16_16_L07
   2650                          flag_reset = 1;
   \   000004A0   E0A1               LDI     R26, 1
   2651                        }
   2652          
   2653                        if(state.main_state == STATE_PROGRAMMING_DURING)
   \                     ??configuration_procedure_34:
   \   000004A2   ....               LDI     R24, LOW(state)
   \   000004A4   ....               LDI     R25, (state) >> 8
   \   000004A6   01FC               MOVW    R31:R30, R25:R24
   \   000004A8   8102               LDD     R16, Z+2
   \   000004AA   8113               LDD     R17, Z+3
   \   000004AC   3000               CPI     R16, 0
   \   000004AE   E221               LDI     R18, 33
   \   000004B0   0712               CPC     R17, R18
   \   000004B2   F009               BREQ    $+2+2
   \   000004B4   C060               RJMP    ??configuration_procedure_35
   2654                        {
   2655          							  if(flags.virtul_configuration_right)
   \   000004B6   ....               LDI     R30, LOW(flags)
   \   000004B8   ....               LDI     R31, (flags) >> 8
   \   000004BA   8100               LD      R16, Z
   \   000004BC   8111               LDD     R17, Z+1
   \   000004BE   FF06               SBRS    R16, 6
   \   000004C0   C05A               RJMP    ??configuration_procedure_35
   2656          							  {
   2657          								  state.main_state = STATE_NORMAL;
   \   000004C2   E000               LDI     R16, 0
   \   000004C4   01FC               MOVW    R31:R30, R25:R24
   \   000004C6   8302               STD     Z+2, R16
   \   000004C8   8303               STD     Z+3, R16
   2658          								  flags.virtul_configuration_right = 0;
   \   000004CA   ....               LDI     R30, LOW(flags)
   \   000004CC   ....               LDI     R31, (flags) >> 8
   \   000004CE   8100               LD      R16, Z
   \   000004D0   8111               LDD     R17, Z+1
   \   000004D2   7B0F               ANDI    R16, 0xBF
   \   000004D4   8311               STD     Z+1, R17
   \   000004D6   8300               ST      Z, R16
   \   000004D8   9100....           LDS     R16, (temp_variable + 7)
   \   000004DC   ....               LDI     R20, LOW((ee_configurators + 1))
   \   000004DE   ....               LDI     R21, HIGH((ee_configurators + 1))
   \   000004E0   ........           CALL    __eeput8_16
   2659                            ee_configurators.A = temp_variable.configurators[0];
   2660          									ee_configurators.PL = temp_variable.configurators[1];
   \   000004E4   9100....           LDS     R16, (temp_variable + 8)
   \   000004E8   ....               LDI     R20, LOW((ee_configurators + 2))
   \   000004EA   ....               LDI     R21, HIGH((ee_configurators + 2))
   \   000004EC   ........           CALL    __eeput8_16
   2661          									ee_configurators.M = temp_variable.configurators[2];
   \   000004F0   9110....           LDS     R17, (temp_variable + 9)
   \   000004F4   ....               LDI     R20, LOW((ee_configurators + 3))
   \   000004F6   ....               LDI     R21, HIGH((ee_configurators + 3))
   \   000004F8   2F01               MOV     R16, R17
   \   000004FA   ........           CALL    __eeput8_16
   2662          									ee_configurators.S = temp_variable.configurators[3];
   \   000004FE   9100....           LDS     R16, (temp_variable + 10)
   \   00000502   ....               LDI     R20, LOW((ee_configurators + 4))
   \   00000504   ....               LDI     R21, HIGH((ee_configurators + 4))
   \   00000506   ........           CALL    __eeput8_16
   2663          									ee_configurators.T = temp_variable.configurators[4];
   \   0000050A   9100....           LDS     R16, (temp_variable + 11)
   \   0000050E   ....               LDI     R20, LOW((ee_configurators + 5))
   \   00000510   ....               LDI     R21, HIGH((ee_configurators + 5))
   \   00000512   ........           CALL    __eeput8_16
   2664          
   2665                            if(temp_variable.configurators[2] == '0' || temp_variable.configurators[2] == '1' || temp_variable.configurators[2] == '3' || temp_variable.configurators[2] == '4')
   \   00000516   3310               CPI     R17, 48
   \   00000518   F031               BREQ    ??configuration_procedure_36
   \   0000051A   3311               CPI     R17, 49
   \   0000051C   F021               BREQ    ??configuration_procedure_36
   \   0000051E   3313               CPI     R17, 51
   \   00000520   F011               BREQ    ??configuration_procedure_36
   \   00000522   3314               CPI     R17, 52
   \   00000524   F439               BRNE    ??configuration_procedure_37
   2666                            {
   2667                              ee_KO_conf.DesAdd = StrToChar(&temp_variable.configurators[0]);
   \                     ??configuration_procedure_36:
   \   00000526   ....               LDI     R16, LOW((temp_variable + 7))
   \   00000528   ....               LDI     R17, HIGH((temp_variable + 7))
   \   0000052A   ........           CALL    StrToChar
   \   0000052E   ....               LDI     R20, LOW((ee_KO_conf + 2))
   \   00000530   ....               LDI     R21, HIGH((ee_KO_conf + 2))
   \   00000532   C014               RJMP    ??configuration_procedure_38
   2668                            }
   2669                            else if(temp_variable.configurators[2] == '2')
   \                     ??configuration_procedure_37:
   \   00000534   3312               CPI     R17, 50
   \   00000536   F4A1               BRNE    ??configuration_procedure_39
   2670                            {
   2671                              ee_KO_conf.DesAdd = StrToChar(&temp_variable.configurators[0]);
   \   00000538   ....               LDI     R16, LOW((temp_variable + 7))
   \   0000053A   ....               LDI     R17, HIGH((temp_variable + 7))
   \   0000053C   ........           CALL    StrToChar
   \   00000540   ....               LDI     R20, LOW((ee_KO_conf + 2))
   \   00000542   ....               LDI     R21, HIGH((ee_KO_conf + 2))
   \   00000544   ........           CALL    __eeput8_16
   \   00000548   9100....           LDS     R16, (temp_variable + 7)
   \   0000054C   ....               LDI     R20, LOW((ee_product_information + 2))
   \   0000054E   ....               LDI     R21, HIGH((ee_product_information + 2))
   \   00000550   ........           CALL    __eeput8_16
   2672                              ee_product_information.local_A = temp_variable.configurators[0];
   2673                              ee_product_information.local_PL = temp_variable.configurators[1];
   \   00000554   9100....           LDS     R16, (temp_variable + 8)
   \   00000558   ....               LDI     R20, LOW((ee_product_information + 3))
   \   0000055A   ....               LDI     R21, HIGH((ee_product_information + 3))
   \                     ??configuration_procedure_38:
   \   0000055C   ........           CALL    __eeput8_16
   2674                            }
   2675          
   2676          									ee_product_information.conf_type = 0x01;
   \                     ??configuration_procedure_39:
   \   00000560   E001               LDI     R16, 1
   \   00000562   ....               LDI     R20, LOW(ee_product_information)
   \   00000564   ....               LDI     R21, (ee_product_information) >> 8
   \   00000566   ........           CALL    __eeput8_16
   2677          									ee_KO_conf.AddressType = 0;
   \   0000056A   E000               LDI     R16, 0
   \   0000056C   ....               LDI     R20, LOW((ee_KO_conf + 1))
   \   0000056E   ....               LDI     R21, HIGH((ee_KO_conf + 1))
   \   00000570   ........           CALL    __eeput8_16
   2678          									flag_reset = 1;
   \   00000574   E0A1               LDI     R26, 1
   2679          							  }
   2680                          /*
   2681                          else
   2682                          {
   2683                            state.main_state = STATE_NORMAL;
   2684                            remember_parameter();
   2685                            led_blinking_normal();
   2686                          }
   2687                          */
   2688                        }
   2689          
   2690                        if(flag_reset)
   \                     ??configuration_procedure_35:
   \   00000576   23AA               TST     R26
   \   00000578   F009               BREQ    $+2+2
   \   0000057A   CDD0               RJMP    ??configuration_procedure_20
   2691                        {
   2692                          system_reset();
   2693                        }
   2694                        else if(state.main_state == STATE_PROGRAMMING_DURING || state.main_state == STATE_TEST_DURING)
   \   0000057C   01FC               MOVW    R31:R30, R25:R24
   \   0000057E   8102               LDD     R16, Z+2
   \   00000580   8113               LDD     R17, Z+3
   \   00000582   3000               CPI     R16, 0
   \   00000584   E221               LDI     R18, 33
   \   00000586   0712               CPC     R17, R18
   \   00000588   F039               BREQ    ??configuration_procedure_40
   \   0000058A   8102               LDD     R16, Z+2
   \   0000058C   8113               LDD     R17, Z+3
   \   0000058E   3002               CPI     R16, 2
   \   00000590   E220               LDI     R18, 32
   \   00000592   0712               CPC     R17, R18
   \   00000594   F009               BREQ    $+2+2
   \   00000596   C178               RJMP    ??configuration_procedure_4
   2695                        {
   2696                          state.main_state = STATE_NORMAL;
   \                     ??configuration_procedure_40:
   \   00000598   E000               LDI     R16, 0
   \   0000059A   8302               STD     Z+2, R16
   \   0000059C   8303               STD     Z+3, R16
   2697                          product_information = ee_product_information;
   \   0000059E   ....               LDI     R30, LOW(product_information)
   \   000005A0   ....               LDI     R31, (product_information) >> 8
   \   000005A2   ....               LDI     R20, LOW(ee_product_information)
   \   000005A4   ....               LDI     R21, (ee_product_information) >> 8
   \   000005A6   E017               LDI     R17, 7
   \   000005A8   E020               LDI     R18, 0
   \   000005AA   ........           CALL    ?ML_EEPROM_SRAM_16_16_L07
   \   000005AE   ....               LDI     R20, LOW(ee_KO)
   \   000005B0   ....               LDI     R21, (ee_KO) >> 8
   \   000005B2   ........           CALL    __eeget8_16
   \   000005B6   9300....           STS     KO, R16
   2698                          KO[0] = ee_KO[0];
   2699                          KO[1] = ee_KO[1];
   \   000005BA   ....               LDI     R20, LOW((ee_KO + 1))
   \   000005BC   ....               LDI     R21, HIGH((ee_KO + 1))
   \   000005BE   ........           CALL    __eeget8_16
   \   000005C2   9300....           STS     (KO + 1), R16
   2700                          KO[2] = ee_KO[2];
   \   000005C6   ....               LDI     R20, LOW((ee_KO + 2))
   \   000005C8   ....               LDI     R21, HIGH((ee_KO + 2))
   \   000005CA   ........           CALL    __eeget8_16
   \   000005CE   9300....           STS     (KO + 2), R16
   2701                          KO[3] = ee_KO[3];
   \   000005D2   ....               LDI     R20, LOW((ee_KO + 3))
   \   000005D4   ....               LDI     R21, HIGH((ee_KO + 3))
   \   000005D6   ........           CALL    __eeget8_16
   \   000005DA   9300....           STS     (KO + 3), R16
   2702                          led_blinking_normal();
   \   000005DE   CDB4               RJMP    ??configuration_procedure_22
   2703                        }
   2704          						break;
   2705          
   2706          						default:break;
   2707          					}
   2708          				break;
   2709          				
   2710          				case 0x01:  //test frame
   2711          					switch(g_asc_reception_buffer[7])
   \                     ??configuration_procedure_1:
   \   000005E0   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   000005E4   5F0A               SUBI    R16, 250
   \   000005E6   F031               BREQ    ??configuration_procedure_41
   \   000005E8   5005               SUBI    R16, 5
   \   000005EA   F021               BREQ    ??configuration_procedure_41
   \   000005EC   950A               DEC     R16
   \   000005EE   F009               BREQ    $+2+2
   \   000005F0   C14B               RJMP    ??configuration_procedure_4
   2712          					{
   2713                      case 0x00:
   2714          							  state.main_state = STATE_PRE_PROGRAMMING;
   \   000005F2   CD2E               RJMP    ??configuration_procedure_9
   2715          						break;
   2716          						
   2717          						case 0xFA:
   2718                        if(state.main_state == STATE_TEST_DURING)
   \                     ??configuration_procedure_41:
   \   000005F4   9100....           LDS     R16, (state + 2)
   \   000005F8   9110....           LDS     R17, (state + 3)
   \   000005FC   3002               CPI     R16, 2
   \   000005FE   E220               LDI     R18, 32
   \   00000600   0712               CPC     R17, R18
   \   00000602   F009               BREQ    $+2+2
   \   00000604   C141               RJMP    ??configuration_procedure_4
   \   00000606   CD9C               RJMP    ??configuration_procedure_21
   2719                        {
   2720                          state.main_state = STATE_NORMAL;
   2721          							  led_blinking_normal();
   2722                        }
   2723          						break;
   2724          
   2725          						case 0xFF:
   2726          							if(state.main_state == STATE_TEST_DURING)
   2727                        {
   2728                          state.main_state = STATE_NORMAL;
   2729          							  led_blinking_normal();
   2730                        }
   2731          						break;
   2732          
   2733          						default:break;
   2734          					}
   2735          				break;
   2736          
   2737          				case 0x09:	//PnL group frame
   2738          					switch(g_asc_reception_buffer[7])
   \                     ??configuration_procedure_2:
   \   00000608   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   0000060C   ....               LDI     R30, LOW(`?<Jumptable for configuration_procedure>_0`)
   \   0000060E   ....               LDI     R31, (`?<Jumptable for configuration_procedure>_0`) >> 8
   \   00000610   ........           JMP     ?CV_SWITCH_L06
   2739          					{
   2740                      //////////////////////////////////////
   2741                      //same as group assigned
   2742                      case 0x06: //group assign
   2743                        if( state.main_state == PNL_NONE_CONFED_WAIT_FOR_GROUP_ASSIGN )
   \                     ??configuration_procedure_42:
   \   00000614   9100....           LDS     R16, (state + 2)
   \   00000618   9110....           LDS     R17, (state + 3)
   \   0000061C   3003               CPI     R16, 3
   \   0000061E   E920               LDI     R18, 144
   \   00000620   0712               CPC     R17, R18
   \   00000622   F009               BREQ    $+2+2
   \   00000624   C131               RJMP    ??configuration_procedure_4
   2744                        {
   2745                          flags.group_assigned = 1;
   \                     ??configuration_procedure_43:
   \   00000626   ....               LDI     R30, LOW(flags)
   \   00000628   ....               LDI     R31, (flags) >> 8
   \   0000062A   8102               LDD     R16, Z+2
   \   0000062C   8113               LDD     R17, Z+3
   \   0000062E   6001               ORI     R16, 0x01
   \   00000630   CD67               RJMP    ??configuration_procedure_19
   2746                        }
   \                     ??configuration_procedure_44:
   \   00000632   9100....           LDS     R16, (KO_conf + 6)
   \   00000636   9110....           LDS     R17, (g_asc_reception_buffer + 5)
   \   0000063A   1701               CP      R16, R17
   \   0000063C   F009               BREQ    $+2+2
   \   0000063E   C124               RJMP    ??configuration_procedure_4
   2747                      break;
   2748          
   2749          						case 0x09:
   2750          							if(KO_conf.GR == g_asc_reception_buffer[5])
   2751          								send_group_pnl_frame(ANSWER,KO_conf.GR,GROUP_USED_REQUEST);
   \   00000640   E329               LDI     R18, 57
   \   00000642   9110....           LDS     R17, (KO_conf + 6)
   \   00000646   E304               LDI     R16, 52
   \   00000648   ....               RCALL   send_group_pnl_frame
   \   0000064A   C11E               RJMP    ??configuration_procedure_4
   2752          						break;
   2753          						
   2754          						case 0xF9:
   2755          							if(KO_conf.GR == g_asc_reception_buffer[5])
   2756          								send_group_pnl_frame(ANSWER,KO_conf.GR,GROUP_USED_REQUEST);
   2757          						break;
   2758          						
   2759          						case 0xF3:
   2760          							if(product_information.conf_type == ADVANCED && KO_conf.AddressType == GROUP)
   \                     ??configuration_procedure_45:
   \   0000064C   9100....           LDS     R16, product_information
   \   00000650   3002               CPI     R16, 2
   \   00000652   F009               BREQ    $+2+2
   \   00000654   C119               RJMP    ??configuration_procedure_4
   \   00000656   9100....           LDS     R16, (KO_conf + 1)
   \   0000065A   3002               CPI     R16, 2
   \   0000065C   F009               BREQ    $+2+2
   \   0000065E   C114               RJMP    ??configuration_procedure_4
   2761          							{
   2762          								KO_conf.Reference = g_asc_reception_buffer[5];
   \   00000660   9100....           LDS     R16, (g_asc_reception_buffer + 5)
   \   00000664   9300....           STS     (KO_conf + 5), R16
   2763          								ee_KO_conf.Reference = g_asc_reception_buffer[5];
   \   00000668   9100....           LDS     R16, (g_asc_reception_buffer + 5)
   \   0000066C   ....               LDI     R20, LOW((ee_KO_conf + 5))
   \   0000066E   ....               LDI     R21, HIGH((ee_KO_conf + 5))
   \                     ??configuration_procedure_46:
   \   00000670   ........           CALL    __eeput8_16
   \   00000674   C109               RJMP    ??configuration_procedure_4
   2764          							}
   2765          						break;
   2766          						
   2767                      case 0xF6:
   2768                        if( state.main_state == PNL_NONE_CONFED_WAIT_FOR_GROUP_ASSIGN )
   \                     ??configuration_procedure_47:
   \   00000676   9100....           LDS     R16, (state + 2)
   \   0000067A   9110....           LDS     R17, (state + 3)
   \   0000067E   3003               CPI     R16, 3
   \   00000680   E920               LDI     R18, 144
   \   00000682   0712               CPC     R17, R18
   \   00000684   F009               BREQ    $+2+2
   \   00000686   C100               RJMP    ??configuration_procedure_4
   \   00000688   CFCE               RJMP    ??configuration_procedure_43
   2769                        {
   2770                          flags.group_assigned = 1;
   2771                        }
   2772          						break;
   2773          
   2774                      case 0x46:
   2775                        if( state.main_state == PNL_NONE_CONFED_WAIT_FOR_GROUP_ASSIGN )
   2776                        {
   2777                          flags.group_assigned = 1;
   2778                        }
   2779          						break;
   2780                      //            over               /////
   2781                      //////////////////////////////////////
   2782          						
   2783          						case 0x40: //start PnL
   2784          						case 0x00:	
   2785          							key_result.short_pressed = 0;
   \                     ??configuration_procedure_48:
   \   0000068A   93A0....           STS     key_result, R26
   2786          							
   2787          							if(state.main_state == PNL_AD_CONFED_STEP2 && state.pnl_slave == NORMAL)
   \   0000068E   ....               LDI     R30, LOW(state)
   \   00000690   ....               LDI     R31, (state) >> 8
   \   00000692   8102               LDD     R16, Z+2
   \   00000694   8113               LDD     R17, Z+3
   \   00000696   3008               CPI     R16, 8
   \   00000698   E920               LDI     R18, 144
   \   0000069A   0712               CPC     R17, R18
   \   0000069C   F491               BRNE    ??configuration_procedure_49
   \   0000069E   9100....           LDS     R16, (state + 4)
   \   000006A2   2300               TST     R16
   \   000006A4   F471               BRNE    ??configuration_procedure_49
   2788          							{
   2789          								if(g_asc_reception_buffer[5] != 0 && g_asc_reception_buffer[5] != KO_conf.GR)
   \   000006A6   9100....           LDS     R16, (g_asc_reception_buffer + 5)
   \   000006AA   2300               TST     R16
   \   000006AC   F051               BREQ    ??configuration_procedure_49
   \   000006AE   9100....           LDS     R16, (g_asc_reception_buffer + 5)
   \   000006B2   9110....           LDS     R17, (KO_conf + 6)
   \   000006B6   1701               CP      R16, R17
   \   000006B8   F021               BREQ    ??configuration_procedure_49
   2790          								{
   2791          									state.main_state = NORMAL;
   \   000006BA   83A2               STD     Z+2, R26
   \   000006BC   83A3               STD     Z+3, R26
   2792          									led_blinking_normal();
   \   000006BE   ........           CALL    led_blinking_normal
   \                     ??configuration_procedure_49:
   \   000006C2   9100....           LDS     R16, (g_asc_reception_buffer + 5)
   \   000006C6   9300....           STS     (temp_variable + 14), R16
   2793          								}
   2794          							}
   2795          							
   2796          							temp_variable.GR = g_asc_reception_buffer[5];
   2797          							if( flags.scs_pnl_group_sensor_starded == 0 )
   \   000006CA   ....               LDI     R30, LOW(flags)
   \   000006CC   ....               LDI     R31, (flags) >> 8
   \   000006CE   8102               LDD     R16, Z+2
   \   000006D0   8113               LDD     R17, Z+3
   \   000006D2   2F01               MOV     R16, R17
   \   000006D4   FD00               SBRC    R16, 0
   \   000006D6   C04E               RJMP    ??configuration_procedure_50
   2798          							{
   2799          								if(g_asc_reception_buffer[5] != 0)
   \   000006D8   9100....           LDS     R16, (g_asc_reception_buffer + 5)
   \   000006DC   2300               TST     R16
   \   000006DE   F409               BRNE    $+2+2
   \   000006E0   C046               RJMP    ??configuration_procedure_51
   \   000006E2   9100....           LDS     R16, (KO_conf + 1)
   \   000006E6   3002               CPI     R16, 2
   \   000006E8   F009               BREQ    $+2+2
   \   000006EA   C044               RJMP    ??configuration_procedure_50
   2800          								{	
   2801          									//advance started
   2802          									if(KO_conf.AddressType == GROUP)
   2803          									{
   2804          										state.pnl_slave = START_PNL_GROUP_SENSOR;
   \   000006EC   E001               LDI     R16, 1
   \   000006EE   9300....           STS     (state + 4), R16
   2805          										if(KO_conf.GR == temp_variable.GR)
   \   000006F2   9100....           LDS     R16, (temp_variable + 14)
   \   000006F6   9110....           LDS     R17, (KO_conf + 6)
   \   000006FA   1710               CP      R17, R16
   \   000006FC   F499               BRNE    ??configuration_procedure_52
   2806          										{
   2807          											led_blinking_ms(250,250,600000);
   \   000006FE   EC00               LDI     R16, 192
   \   00000700   E217               LDI     R17, 39
   \   00000702   E029               LDI     R18, 9
   \   00000704   E030               LDI     R19, 0
   \   00000706   933A               ST      -Y, R19
   \   00000708   932A               ST      -Y, R18
   \   0000070A   931A               ST      -Y, R17
   \   0000070C   930A               ST      -Y, R16
   \   0000070E   EF4A               LDI     R20, 250
   \   00000710   E050               LDI     R21, 0
   \   00000712   E060               LDI     R22, 0
   \   00000714   E070               LDI     R23, 0
   \   00000716   EF0A               LDI     R16, 250
   \   00000718   E010               LDI     R17, 0
   \   0000071A   E020               LDI     R18, 0
   \   0000071C   ........           CALL    led_blinking_ms
   2808          											state.pnl_slave = GR_EQUAL;
   \   00000720   E003               LDI     R16, 3
   \   00000722   C026               RJMP    ??configuration_procedure_53
   2809          										}
   2810          										else if(KO_conf.GS1 == temp_variable.GR || KO_conf.GS2 == temp_variable.GR)
   \                     ??configuration_procedure_52:
   \   00000724   9110....           LDS     R17, (KO_conf + 7)
   \   00000728   1710               CP      R17, R16
   \   0000072A   F021               BREQ    ??configuration_procedure_54
   \   0000072C   9110....           LDS     R17, (KO_conf + 8)
   \   00000730   1710               CP      R17, R16
   \   00000732   F4C9               BRNE    ??configuration_procedure_55
   2811          										{
   2812          											led_blinking_ms(250,250,600000);
   \                     ??configuration_procedure_54:
   \   00000734   EC00               LDI     R16, 192
   \   00000736   E217               LDI     R17, 39
   \   00000738   E029               LDI     R18, 9
   \   0000073A   E030               LDI     R19, 0
   \   0000073C   933A               ST      -Y, R19
   \   0000073E   932A               ST      -Y, R18
   \   00000740   931A               ST      -Y, R17
   \   00000742   930A               ST      -Y, R16
   \   00000744   EF4A               LDI     R20, 250
   \   00000746   E050               LDI     R21, 0
   \   00000748   E060               LDI     R22, 0
   \   0000074A   E070               LDI     R23, 0
   \   0000074C   EF0A               LDI     R16, 250
   \   0000074E   E010               LDI     R17, 0
   \   00000750   E020               LDI     R18, 0
   \   00000752   ........           CALL    led_blinking_ms
   2813          											flags.wait_GS_remove = 1;
   \   00000756   ....               LDI     R30, LOW(flags)
   \   00000758   ....               LDI     R31, (flags) >> 8
   \   0000075A   8102               LDD     R16, Z+2
   \   0000075C   8113               LDD     R17, Z+3
   \   0000075E   6012               ORI     R17, 0x02
   \                     ??configuration_procedure_56:
   \   00000760   8313               STD     Z+3, R17
   \   00000762   8302               STD     Z+2, R16
   \   00000764   C007               RJMP    ??configuration_procedure_50
   2814          										}
   2815          										else
   2816          										{
   2817          											flags.wait_GS_remove = 0;
   \                     ??configuration_procedure_55:
   \   00000766   8102               LDD     R16, Z+2
   \   00000768   8113               LDD     R17, Z+3
   \   0000076A   7F1D               ANDI    R17, 0xFD
   \   0000076C   CFF9               RJMP    ??configuration_procedure_56
   2818          										}
   2819          									}
   2820          									
   2821          								}
   2822          								else
   2823          								{
   2824          									state.pnl_slave = START_PNL_NONE_CONFED_GROUP_SENSOR;
   \                     ??configuration_procedure_51:
   \   0000076E   E002               LDI     R16, 2
   \                     ??configuration_procedure_53:
   \   00000770   9300....           STS     (state + 4), R16
   2825          								}
   2826          							}
   2827          							flags.scs_pnl_group_sensor_starded = 1;
   \                     ??configuration_procedure_50:
   \   00000774   ....               LDI     R30, LOW(flags)
   \   00000776   ....               LDI     R31, (flags) >> 8
   \   00000778   8102               LDD     R16, Z+2
   \   0000077A   8113               LDD     R17, Z+3
   \   0000077C   6011               ORI     R17, 0x01
   \   0000077E   CCC0               RJMP    ??configuration_procedure_19
   \                     ??configuration_procedure_57:
   \   00000780   9100....           LDS     R16, (KO_conf + 6)
   \   00000784   9110....           LDS     R17, (g_asc_reception_buffer + 5)
   \   00000788   1701               CP      R16, R17
   \   0000078A   F461               BRNE    ??configuration_procedure_58
   2828          						break;
   2829          
   2830          						case 0x41: //group confirmation
   2831          						break;
   2832          
   2833          						case 0x42: //group refusing
   2834          						break;
   2835          
   2836          						case 0x43: //referent transmission
   2837          						break;
   2838          
   2839          						case 0x44: //group ereasing
   2840          							if(KO_conf.GR == g_asc_reception_buffer[5])
   2841          							{
   2842          								KO_conf.GS1 = 0;
   \   0000078C   E000               LDI     R16, 0
   \   0000078E   9300....           STS     (KO_conf + 7), R16
   \   00000792   ....               LDI     R20, LOW((ee_KO_conf + 7))
   \   00000794   ....               LDI     R21, HIGH((ee_KO_conf + 7))
   \   00000796   ........           CALL    __eeput8_16
   2843          								ee_KO_conf.GS1 = 0;
   2844          								KO_conf.GS2 = 0;
   \                     ??configuration_procedure_59:
   \   0000079A   9300....           STS     (KO_conf + 8), R16
   2845          								ee_KO_conf.GS2 = 0;
   \   0000079E   ....               LDI     R20, LOW((ee_KO_conf + 8))
   \   000007A0   ....               LDI     R21, HIGH((ee_KO_conf + 8))
   \   000007A2   CF66               RJMP    ??configuration_procedure_46
   2846          							}
   2847          							else if(KO_conf.GS1 == g_asc_reception_buffer[5])
   \                     ??configuration_procedure_58:
   \   000007A4   9100....           LDS     R16, (KO_conf + 7)
   \   000007A8   9110....           LDS     R17, (g_asc_reception_buffer + 5)
   \   000007AC   1701               CP      R16, R17
   \   000007AE   F431               BRNE    ??configuration_procedure_60
   2848          							{
   2849          								KO_conf.GS1 = 0;
   \                     ??configuration_procedure_61:
   \   000007B0   E000               LDI     R16, 0
   \   000007B2   9300....           STS     (KO_conf + 7), R16
   2850          								ee_KO_conf.GS1 = 0;
   \   000007B6   ....               LDI     R20, LOW((ee_KO_conf + 7))
   \   000007B8   ....               LDI     R21, HIGH((ee_KO_conf + 7))
   \   000007BA   CF5A               RJMP    ??configuration_procedure_46
   2851          							}
   2852          							else if(KO_conf.GS2 == g_asc_reception_buffer[5])
   \                     ??configuration_procedure_60:
   \   000007BC   9100....           LDS     R16, (KO_conf + 8)
   \   000007C0   9110....           LDS     R17, (g_asc_reception_buffer + 5)
   \   000007C4   1701               CP      R16, R17
   \   000007C6   F009               BREQ    $+2+2
   \   000007C8   C05F               RJMP    ??configuration_procedure_4
   2853          							{
   2854          								KO_conf.GS2 = 0;
   \                     ??configuration_procedure_62:
   \   000007CA   E000               LDI     R16, 0
   \   000007CC   CFE6               RJMP    ??configuration_procedure_59
   2855          								ee_KO_conf.GS2 = 0;
   2856          							}
   \                     ??configuration_procedure_63:
   \   000007CE   9100....           LDS     R16, (KO_conf + 7)
   \   000007D2   9110....           LDS     R17, (g_asc_reception_buffer + 5)
   \   000007D6   1701               CP      R16, R17
   \   000007D8   F359               BREQ    ??configuration_procedure_61
   2857          						break;
   2858          
   2859          						case 0x45: //group request
   2860          						break;
   2861          
   2862          						case 0x47:
   2863          							if(KO_conf.GS1 == g_asc_reception_buffer[5])
   2864          							{
   2865          								KO_conf.GS1 = 0;
   2866          								ee_KO_conf.GS1 = 0;
   2867          							}
   2868          							else if(KO_conf.GS2 == g_asc_reception_buffer[5])
   \   000007DA   9100....           LDS     R16, (KO_conf + 8)
   \   000007DE   9110....           LDS     R17, (g_asc_reception_buffer + 5)
   \   000007E2   1701               CP      R16, R17
   \   000007E4   F009               BREQ    $+2+2
   \   000007E6   C050               RJMP    ??configuration_procedure_4
   \   000007E8   CFF0               RJMP    ??configuration_procedure_62
   2869          							{
   2870          								KO_conf.GS2 = 0;
   2871          								ee_KO_conf.GS2 = 0;
   2872          							}
   2873          						break;
   2874          
   2875          						case 0x48:
   2876          						break;
   2877          
   2878          						case 0x49:
   2879          						break;
   2880          
   2881          						case 0x4A: //disable load control
   2882          						break;
   2883          
   2884          						case 0x0F:
   2885          						case 0x4F: //end PnL
   2886          							key_result.short_pressed = 0;
   \                     ??configuration_procedure_64:
   \   000007EA   93A0....           STS     key_result, R26
   2887          							state.main_state = NORMAL;
   \   000007EE   ....               LDI     R30, LOW(state)
   \   000007F0   ....               LDI     R31, (state) >> 8
   \   000007F2   83A2               STD     Z+2, R26
   \   000007F4   83A3               STD     Z+3, R26
   2888          							state.pnl_slave = NORMAL;
   \   000007F6   93A0....           STS     (state + 4), R26
   2889          							flags.scs_pnl_group_sensor_starded = 0;
   \   000007FA   ....               LDI     R30, LOW(flags)
   \   000007FC   ....               LDI     R31, (flags) >> 8
   \   000007FE   8102               LDD     R16, Z+2
   \   00000800   8113               LDD     R17, Z+3
   \   00000802   7F1E               ANDI    R17, 0xFE
   \   00000804   8313               STD     Z+3, R17
   \   00000806   8302               STD     Z+2, R16
   2890          							led_blinking_normal();
   \   00000808   CC9F               RJMP    ??configuration_procedure_22
   2891          						break;
   2892          
   2893          						default:break;
   2894          					}
   2895          				break;
   2896          
   2897          				case 0x0A:  //PnL scenario frame
   2898          					switch(g_asc_reception_buffer[7])
   \                     ??configuration_procedure_3:
   \   0000080A   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   0000080E   3009               CPI     R16, 9
   \   00000810   F5D9               BRNE    ??configuration_procedure_4
   2899          					{
   2900          						case 0x00:
   2901          						break;
   2902          
   2903          						case 0x05:
   2904          						break;
   2905          
   2906          						case 0x06:
   2907          						break;
   2908          
   2909          						case 0x07:
   2910          						break;
   2911          
   2912          						case 0x08:
   2913          						break;
   2914          
   2915          						case 0x09:
   2916          							for(i=0;i<16;i++)
   \   00000812   E080               LDI     R24, 0
   \   00000814   C037               RJMP    ??configuration_procedure_65
   2917          							{
   2918          								if(g_asc_reception_buffer[5] == ee_scenario[i].ns_number)
   \                     ??configuration_procedure_66:
   \   00000816   9120....           LDS     R18, (g_asc_reception_buffer + 5)
   \   0000081A   2F48               MOV     R20, R24
   \   0000081C   E050               LDI     R21, 0
   \   0000081E   E007               LDI     R16, 7
   \   00000820   E010               LDI     R17, 0
   \   00000822   ........           CALL    ?S_EC_MUL_L02
   \   00000826   ....               LDI     R20, LOW(ee_scenario)
   \   00000828   ....               LDI     R21, (ee_scenario) >> 8
   \   0000082A   0F40               ADD     R20, R16
   \   0000082C   1F51               ADC     R21, R17
   \   0000082E   ........           CALL    __eeget8_16
   \   00000832   1720               CP      R18, R16
   \   00000834   F531               BRNE    ??configuration_procedure_67
   2919          								{	
   2920          									i = 16;
   \   00000836   E180               LDI     R24, 16
   2921          									strncpy(buffer_tx,"D20001348C000A09",17);
   \   00000838   E141               LDI     R20, 17
   \   0000083A   E050               LDI     R21, 0
   \   0000083C   ....               LDI     R18, LOW((`?<Constant "D20001348C0000AB">` + 34))
   \   0000083E   ....               LDI     R19, HIGH((`?<Constant "D20001348C0000AB">` + 34))
   \   00000840   018E               MOVW    R17:R16, R29:R28
   \   00000842   5F0D               SUBI    R16, 253
   \   00000844   4F1F               SBCI    R17, 255
   \   00000846   ........           CALL    strncpy
   2922          									CharToStr(KO_conf.DesAdd,buffer);
   \   0000084A   019E               MOVW    R19:R18, R29:R28
   \   0000084C   9100....           LDS     R16, (KO_conf + 2)
   \   00000850   ........           CALL    CharToStr
   2923          									buffer_tx[2] = buffer[0];
   \   00000854   8108               LD      R16, Y
   \   00000856   830D               STD     Y+5, R16
   2924          									buffer_tx[3] = buffer[1];
   \   00000858   8109               LDD     R16, Y+1
   \   0000085A   830E               STD     Y+6, R16
   2925          									buffer_tx[10] = g_reception_buffer[10];
   \   0000085C   9100....           LDS     R16, (g_reception_buffer + 10)
   \   00000860   870D               STD     Y+13, R16
   2926          									buffer_tx[11] = g_reception_buffer[11];
   \   00000862   9100....           LDS     R16, (g_reception_buffer + 11)
   \   00000866   870E               STD     Y+14, R16
   2927          									send_frame_pp_ext_broad(buffer_tx,0);
   \   00000868   E020               LDI     R18, 0
   \   0000086A   E030               LDI     R19, 0
   \   0000086C   018E               MOVW    R17:R16, R29:R28
   \   0000086E   5F0D               SUBI    R16, 253
   \   00000870   4F1F               SBCI    R17, 255
   \   00000872   ........           CALL    send_frame_pp_ext_broad
   2928          									timer_flex_initial(3000);
   \   00000876   EB08               LDI     R16, 184
   \   00000878   E01B               LDI     R17, 11
   \   0000087A   E020               LDI     R18, 0
   \   0000087C   E030               LDI     R19, 0
   \   0000087E   ........           CALL    timer_flex_initial
   2929          								}
   2930          							}	
   \                     ??configuration_procedure_67:
   \   00000882   9583               INC     R24
   \                     ??configuration_procedure_65:
   \   00000884   3180               CPI     R24, 16
   \   00000886   F238               BRCS    ??configuration_procedure_66
   2931          						break;
   2932          
   2933          						case 0x0F:
   2934          						break;
   2935          
   2936          						default:break;
   2937          					}
   2938          				break;
   2939          				
   2940          				case 0x0B:  //PnL IR scenario frame
   2941          				break;
   2942          
   2943          				default:break;
   2944          			}
   2945          }
   \                     ??configuration_procedure_4:
   \   00000888   96EF               ADIW    R29:R28, 63
   \   0000088A   9627               ADIW    R29:R28, 7
   \   0000088C   E0E3               LDI     R30, 3
   \   0000088E   ........           JMP     ?EPILOGUE_B3_L09
   2946          

   \                                 In  segment CODE, align 2, keep-with-next
   2947          void aux_procedure(void)
   \                     aux_procedure:
   2948          {
   2949            unsigned char i;
   2950            if(g_asc_reception_buffer[3] == 0x08)
   \   00000000   ....               LDI     R30, LOW(g_asc_reception_buffer)
   \   00000002   ....               LDI     R31, (g_asc_reception_buffer) >> 8
   \   00000004   8103               LDD     R16, Z+3
   \   00000006   3008               CPI     R16, 8
   \   00000008   F529               BRNE    ??aux_procedure_0
   2951            {
   2952              if(g_reception_buffer[9] == '1')
   \   0000000A   9100....           LDS     R16, (g_reception_buffer + 9)
   \   0000000E   3301               CPI     R16, 49
   \   00000010   F509               BRNE    ??aux_procedure_0
   2953              {
   2954                if(g_asc_reception_buffer[7] == 0x66)
   \   00000012   8107               LDD     R16, Z+7
   \   00000014   3606               CPI     R16, 102
   \   00000016   F4F1               BRNE    ??aux_procedure_0
   2955                {
   2956                  for(i=0;i<16;i++)
   \   00000018   E020               LDI     R18, 0
   \   0000001A   C001               RJMP    ??aux_procedure_1
   \                     ??aux_procedure_2:
   \   0000001C   9523               INC     R18
   \                     ??aux_procedure_1:
   \   0000001E   3120               CPI     R18, 16
   \   00000020   F4C8               BRCC    ??aux_procedure_0
   2957                  {
   2958                    if(ee_scenario[i].confed)
   \   00000022   2F42               MOV     R20, R18
   \   00000024   E050               LDI     R21, 0
   \   00000026   E007               LDI     R16, 7
   \   00000028   E010               LDI     R17, 0
   \   0000002A   ........           CALL    ?S_EC_MUL_L02
   \   0000002E   ....               LDI     R22, LOW(ee_scenario)
   \   00000030   ....               LDI     R23, (ee_scenario) >> 8
   \   00000032   0F60               ADD     R22, R16
   \   00000034   1F71               ADC     R23, R17
   \   00000036   01AB               MOVW    R21:R20, R23:R22
   \   00000038   5F4A               SUBI    R20, 250
   \   0000003A   4F5F               SBCI    R21, 255
   \   0000003C   ........           CALL    __eeget8_16
   \   00000040   2300               TST     R16
   \   00000042   F361               BREQ    ??aux_procedure_2
   2959                    {
   2960                      if(ee_scenario[i].ns_number == g_asc_reception_buffer[5])
   \   00000044   01AB               MOVW    R21:R20, R23:R22
   \   00000046   ........           CALL    __eeget8_16
   \   0000004A   8115               LDD     R17, Z+5
   \   0000004C   1701               CP      R16, R17
   \   0000004E   F731               BRNE    ??aux_procedure_2
   2961                      {
   2962                        scenario_remove(i);
   \   00000050   2F02               MOV     R16, R18
   \   00000052   ....               RCALL   scenario_remove
   2963                        break;
   2964                      }
   2965                    }
   2966                  }
   2967                }
   2968              }
   2969            }
   2970          }
   \                     ??aux_procedure_0:
   \   00000054   9508               RET
   2971          

   \                                 In  segment CODE, align 2, keep-with-next
   2972          void scenario_remove(unsigned char number)
   \                     scenario_remove:
   2973          {
   \   00000000   2F10               MOV     R17, R16
   2974            ee_scenario_index = 0;
   \   00000002   E000               LDI     R16, 0
   \   00000004   ....               LDI     R20, LOW(ee_scenario_index)
   \   00000006   ....               LDI     R21, (ee_scenario_index) >> 8
   \   00000008   ........           CALL    __eeput8_16
   2975            ee_scenario[number].ns_number = 0x01;
   \   0000000C   2F41               MOV     R20, R17
   \   0000000E   E050               LDI     R21, 0
   \   00000010   E007               LDI     R16, 7
   \   00000012   E010               LDI     R17, 0
   \   00000014   ........           CALL    ?S_EC_MUL_L02
   \   00000018   ....               LDI     R18, LOW(ee_scenario)
   \   0000001A   ....               LDI     R19, (ee_scenario) >> 8
   \   0000001C   0F20               ADD     R18, R16
   \   0000001E   1F31               ADC     R19, R17
   \   00000020   E001               LDI     R16, 1
   \   00000022   01A9               MOVW    R21:R20, R19:R18
   \   00000024   ........           CALL    __eeput8_16
   2976          	ee_scenario[number].reg_type = 0x01;
   \   00000028   01A9               MOVW    R21:R20, R19:R18
   \   0000002A   5F4F               SUBI    R20, 255
   \   0000002C   4F5F               SBCI    R21, 255
   \   0000002E   ........           CALL    __eeput8_16
   2977          	for(unsigned char i=0;i<3;i++)
   \   00000032   E060               LDI     R22, 0
   \   00000034   C007               RJMP    ??scenario_remove_0
   2978          	{
   2979          	  ee_scenario[number].id[i] = 0;
   \                     ??scenario_remove_1:
   \   00000036   0F46               ADD     R20, R22
   \   00000038   1F50               ADC     R21, R16
   \   0000003A   5F4E               SUBI    R20, 254
   \   0000003C   4F5F               SBCI    R21, 255
   \   0000003E   ........           CALL    __eeput8_16
   2980            }
   \   00000042   9563               INC     R22
   \                     ??scenario_remove_0:
   \   00000044   3063               CPI     R22, 3
   \   00000046   E000               LDI     R16, 0
   \   00000048   01A9               MOVW    R21:R20, R19:R18
   \   0000004A   F3A8               BRCS    ??scenario_remove_1
   2981            ee_scenario[number].key_number = 0;
   \   0000004C   5F4B               SUBI    R20, 251
   \   0000004E   4F5F               SBCI    R21, 255
   \   00000050   ........           CALL    __eeput8_16
   2982            ee_scenario[number].confed = 0;
   \   00000054   5F2A               SUBI    R18, 250
   \   00000056   4F3F               SBCI    R19, 255
   \   00000058   01A9               MOVW    R21:R20, R19:R18
   \   0000005A   ........           CALL    __eeput8_16
   2983          }
   \   0000005E   9508               RET
   2984          

   \                                 In  segment CODE, align 2, keep-with-next
   2985          void KO_setting_error_frame(unsigned char send_type,unsigned char channel)
   \                     KO_setting_error_frame:
   2986          {
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   9764               SBIW    R29:R28, 20
   \   00000006   2F90               MOV     R25, R16
   \   00000008   2F81               MOV     R24, R17
   2987          	unsigned char buffer_tx[17] = "D20001348BFF0201";
   \   0000000A   019E               MOVW    R19:R18, R29:R28
   \   0000000C   5F2D               SUBI    R18, 253
   \   0000000E   4F3F               SBCI    R19, 255
   \   00000010   0189               MOVW    R17:R16, R19:R18
   \   00000012   ....               LDI     R30, LOW(`?<Constant "D20001348BFF0201">`)
   \   00000014   ....               LDI     R31, (`?<Constant "D20001348BFF0201">`) >> 8
   \   00000016   E141               LDI     R20, 17
   \   00000018   E050               LDI     R21, 0
   \   0000001A   ........           CALL    ?ML_FLASH_SRAM_16EC_16_L07
   2988          	unsigned char buffer[3];
   2989          	
   2990          	CharToStr(channel,buffer);
   \   0000001E   019E               MOVW    R19:R18, R29:R28
   \   00000020   2F08               MOV     R16, R24
   \   00000022   ........           CALL    CharToStr
   2991          	buffer_tx[14] = buffer[0];
   \   00000026   8108               LD      R16, Y
   \   00000028   8B09               STD     Y+17, R16
   2992          	buffer_tx[15] = buffer[1];
   \   0000002A   8109               LDD     R16, Y+1
   \   0000002C   8B0A               STD     Y+18, R16
   2993          	
   2994          	switch(send_type)
   \   0000002E   5090               SUBI    R25, 0
   \   00000030   F039               BREQ    ??KO_setting_error_frame_0
   \   00000032   959A               DEC     R25
   \   00000034   F089               BREQ    ??KO_setting_error_frame_1
   \   00000036   959A               DEC     R25
   \   00000038   F099               BREQ    ??KO_setting_error_frame_2
   \   0000003A   5092               SUBI    R25, 2
   \   0000003C   F0A9               BREQ    ??KO_setting_error_frame_3
   \   0000003E   C028               RJMP    ??KO_setting_error_frame_4
   2995          	{
   2996          		case NOT_IMPLEMENTED:
   2997          			SetBit(channel,7);
   2998          			CharToStr(channel,buffer);
   \                     ??KO_setting_error_frame_0:
   \   00000040   019E               MOVW    R19:R18, R29:R28
   \   00000042   6880               ORI     R24, 0x80
   \   00000044   2F08               MOV     R16, R24
   \   00000046   ........           CALL    CharToStr
   2999          			buffer_tx[14] = buffer[0];
   \   0000004A   8108               LD      R16, Y
   \   0000004C   8B09               STD     Y+17, R16
   3000          			buffer_tx[15] = buffer[1];
   \   0000004E   8109               LDD     R16, Y+1
   \   00000050   8B0A               STD     Y+18, R16
   3001          			buffer_tx[12] = '0';
   \   00000052   E300               LDI     R16, 48
   \   00000054   870F               STD     Y+15, R16
   3002          			buffer_tx[13] = '0';
   \   00000056   C014               RJMP    ??KO_setting_error_frame_5
   3003          			send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   3004          		break;
   3005          		
   3006          		case BUSY:
   3007          			buffer_tx[12] = '0';
   \                     ??KO_setting_error_frame_1:
   \   00000058   E300               LDI     R16, 48
   \   0000005A   870F               STD     Y+15, R16
   3008          			buffer_tx[13] = '1';
   \   0000005C   E301               LDI     R16, 49
   \   0000005E   C010               RJMP    ??KO_setting_error_frame_5
   3009          			send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   3010          		break;
   3011          		
   3012          		case ASSIGNED_AGAIN:
   3013          			buffer_tx[12] = '0';
   \                     ??KO_setting_error_frame_2:
   \   00000060   E300               LDI     R16, 48
   \   00000062   870F               STD     Y+15, R16
   3014          			buffer_tx[13] = '2';
   \   00000064   E302               LDI     R16, 50
   \   00000066   C00C               RJMP    ??KO_setting_error_frame_5
   3015          			send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   3016          		break;
   3017          		
   3018          		case OUT_KO:
   3019          			SetBit(channel,7);
   3020          			CharToStr(channel,buffer);
   \                     ??KO_setting_error_frame_3:
   \   00000068   019E               MOVW    R19:R18, R29:R28
   \   0000006A   6880               ORI     R24, 0x80
   \   0000006C   2F08               MOV     R16, R24
   \   0000006E   ........           CALL    CharToStr
   3021          			buffer_tx[14] = buffer[0];
   \   00000072   8108               LD      R16, Y
   \   00000074   8B09               STD     Y+17, R16
   3022          			buffer_tx[15] = buffer[1];
   \   00000076   8109               LDD     R16, Y+1
   \   00000078   8B0A               STD     Y+18, R16
   3023          			buffer_tx[12] = '0';
   \   0000007A   E300               LDI     R16, 48
   \   0000007C   870F               STD     Y+15, R16
   3024          			buffer_tx[13] = '4';
   \   0000007E   E304               LDI     R16, 52
   \                     ??KO_setting_error_frame_5:
   \   00000080   8B08               STD     Y+16, R16
   3025          			send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   \   00000082   E322               LDI     R18, 50
   \   00000084   E030               LDI     R19, 0
   \   00000086   018E               MOVW    R17:R16, R29:R28
   \   00000088   5F0D               SUBI    R16, 253
   \   0000008A   4F1F               SBCI    R17, 255
   \   0000008C   ........           CALL    send_frame_pp_ext_broad
   3026          		break;
   3027          		
   3028          		default:break;
   3029          	}
   3030          }
   \                     ??KO_setting_error_frame_4:
   \   00000090   9664               ADIW    R29:R28, 20
   \   00000092   9189               LD      R24, Y+
   \   00000094   9199               LD      R25, Y+
   \   00000096   9508               RET

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "D000010400000000"`:
   \   00000000   304430303130       DC8 "D000010400000000"
   \              343030303030
   \              3030303000  
   \                     `?<Initializer for <Constant "00000000">>`:
   \   00000011   303030303030       DC8 "00000000"
   \              303000      

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "D200013415000000"`:
   \   00000000   324430303130       DC8 "D200013415000000"
   \              343335313030
   \              3030303000  
   \                     `?<Initializer for <Constant "D200013416000000"`:
   \   00000011   324430303130       DC8 "D200013416000000"
   \              343336313030
   \              3030303000  
   \                     `?<Initializer for <Constant "D200013483000000"`:
   \   00000022   324430303130       DC8 "D200013483000000"
   \              343333383030
   \              3030303000  
   \                     `?<Initializer for <Constant "D20001348C0000AA"`:
   \   00000033   324430303130       DC8 "D20001348C0000AA"
   \              343343383030
   \              3030414100  
   \                     `?<Initializer for <Constant "D2000134830000EE"`:
   \   00000044   324430303130       DC8 "D2000134830000EE"
   \              343333383030
   \              3030454500  
   \                     `?<Initializer for <Constant "D200013410100000"`:
   \   00000055   324430303130       DC8 "D200013410100000"
   \              343330313031
   \              3030303000  
   \                     `?<Initializer for <Constant "FFFFFFFF">>`:
   \   00000066   464646464646       DC8 "FFFFFFFF"
   \              464600      
   \                     `?<Initializer for <Constant "C0000AA">>`:
   \   0000006F   304330304130       DC8 "C0000AA"
   \              0041        

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "D20001348C0001FA"`:
   \   00000000   324430303130       DC8 "D20001348C0001FA"
   \              343343383030
   \              3130414600  
   \                     `?<Initializer for <Constant "D20001348C0000FA"`:
   \   00000011   324430303130       DC8 "D20001348C0000FA"
   \              343343383030
   \              3030414600  

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "D20001348B020381"`:
   \   00000000   324430303130       DC8 "D20001348B020381"
   \              343342383230
   \              3330313800  
   \                     `?<Initializer for <Constant "01">>`:
   \   00000011   313000             DC8 "01"
   \                     `?<Initializer for <Constant "D20001348B01AF02"`:
   \   00000014   324430303130       DC8 "D20001348B01AF02"
   \              343342383130
   \              4641323000  
   \                     `?<Initializer for <Constant "D20001348B000000"`:
   \   00000025   324430303130       DC8 "D20001348B000000"
   \              343342383030
   \              3030303000  

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "D20001348C0000AB"`:
   \   00000000   324430303130       DC8 "D20001348C0000AB"
   \              343343383030
   \              3030424100  
   \                     `?<Initializer for <Constant "D20001348C0000EE"`:
   \   00000011   324430303130       DC8 "D20001348C0000EE"
   \              343343383030
   \              3030454500  
   \                     `?<Initializer for <Constant "D20001348C000A09"`:
   \   00000022   324430303130       DC8 "D20001348C000A09"
   \              343343383030
   \              4130393000  

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for ID_buffer>`:
   \   00000000   303030303030       DC8 "00000000"
   \              303000      

   \                                 In  segment SWITCH, align 2, keep-with-next
   \                     `?<Jumptable for configuration_procedure>_0`:
   \   00000000   00                 DB      0
   \   00000001   01                 DB      1
   \   00000002   ....               DW      (??configuration_procedure_4) /2
   \   00000004   ....               DW      (??configuration_procedure_48) /2
   \   00000006   06                 DB      0x6
   \   00000007   ....               DW      (??configuration_procedure_42) /2
   \   00000009   03                 DB      0x3
   \   0000000A   ....               DW      (??configuration_procedure_44) /2
   \   0000000C   06                 DB      0x6
   \   0000000D   ....               DW      (??configuration_procedure_64) /2
   \   0000000F   31                 DB      0x31
   \   00000010   ....               DW      (??configuration_procedure_48) /2
   \   00000012   04                 DB      0x4
   \   00000013   ....               DW      (??configuration_procedure_57) /2
   \   00000015   02                 DB      0x2
   \   00000016   ....               DW      (??configuration_procedure_47) /2
   \   00000018   01                 DB      0x1
   \   00000019   ....               DW      (??configuration_procedure_63) /2
   \   0000001B   08                 DB      0x8
   \   0000001C   ....               DW      (??configuration_procedure_64) /2
   \   0000001E   A4                 DB      0xa4
   \   0000001F   ....               DW      (??configuration_procedure_45) /2
   \   00000021   03                 DB      0x3
   \   00000022   ....               DW      (??configuration_procedure_47) /2
   \   00000024   03                 DB      0x3
   \   00000025   ....               DW      (??configuration_procedure_44) /2
   \   00000027   FB                 DB      251

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "D000010400000000">`:
   \   00000000                      DS8 17
   \   00000011                      REQUIRE `?<Initializer for <Constant "D000010400000000"`
   \   00000011                      DS8 9
   \   0000001A                      REQUIRE `?<Initializer for <Constant "00000000">>`

   \                                 In  segment NEAR_F, align 1, keep-with-next
   \                     `?<Constant "D000010400059876">`:
   \   00000000   304430303130       DC8 "D000010400059876"
   \              343030303530
   \              3839363700  

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "D200013415000000">`:
   \   00000000                      DS8 17
   \   00000011                      REQUIRE `?<Initializer for <Constant "D200013415000000"`
   \   00000011                      DS8 17
   \   00000022                      REQUIRE `?<Initializer for <Constant "D200013416000000"`
   \   00000022                      DS8 17
   \   00000033                      REQUIRE `?<Initializer for <Constant "D200013483000000"`
   \   00000033                      DS8 17
   \   00000044                      REQUIRE `?<Initializer for <Constant "D20001348C0000AA"`
   \   00000044                      DS8 17
   \   00000055                      REQUIRE `?<Initializer for <Constant "D2000134830000EE"`
   \   00000055                      DS8 17
   \   00000066                      REQUIRE `?<Initializer for <Constant "D200013410100000"`
   \   00000066                      DS8 9
   \   0000006F                      REQUIRE `?<Initializer for <Constant "FFFFFFFF">>`
   \   0000006F                      DS8 8
   \   00000077                      REQUIRE `?<Initializer for <Constant "C0000AA">>`

   \                                 In  segment NEAR_F, align 1, keep-with-next
   \                     `?<Constant "D200013480000000">`:
   \   00000000   324430303130       DC8 "D200013480000000"
   \              343330383030
   \              3030303000  

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "D20001348C0001FA">`:
   \   00000000                      DS8 17
   \   00000011                      REQUIRE `?<Initializer for <Constant "D20001348C0001FA"`
   \   00000011                      DS8 17
   \   00000022                      REQUIRE `?<Initializer for <Constant "D20001348C0000FA"`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "D20001348B020381">`:
   \   00000000                      DS8 17
   \   00000011                      REQUIRE `?<Initializer for <Constant "D20001348B020381"`
   \   00000011                      DS8 3
   \   00000014                      REQUIRE `?<Initializer for <Constant "01">>`
   \   00000014                      DS8 17
   \   00000025                      REQUIRE `?<Initializer for <Constant "D20001348B01AF02"`
   \   00000025                      DS8 17
   \   00000036                      REQUIRE `?<Initializer for <Constant "D20001348B000000"`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "D20001348C0000AB">`:
   \   00000000                      DS8 17
   \   00000011                      REQUIRE `?<Initializer for <Constant "D20001348C0000AB"`
   \   00000011                      DS8 17
   \   00000022                      REQUIRE `?<Initializer for <Constant "D20001348C0000EE"`
   \   00000022                      DS8 17
   \   00000033                      REQUIRE `?<Initializer for <Constant "D20001348C000A09"`

   \                                 In  segment NEAR_F, align 1, keep-with-next
   \                     `?<Constant "D20001348D000000">`:
   \   00000000   324430303130       DC8 "D20001348D000000"
   \              343344383030
   \              3030303000  

   \                                 In  segment NEAR_F, align 1, keep-with-next
   \                     `?<Constant "D20001348D000000">_1`:
   \   00000000   324430303130       DC8 "D20001348D000000"
   \              343344383030
   \              3030303000  

   \                                 In  segment NEAR_F, align 1, keep-with-next
   \                     `?<Constant "D20001348D000000">_2`:
   \   00000000   324430303130       DC8 "D20001348D000000"
   \              343344383030
   \              3030303000  

   \                                 In  segment NEAR_F, align 1, keep-with-next
   \                     `?<Constant "D20001348D000000">_3`:
   \   00000000   324430303130       DC8 "D20001348D000000"
   \              343344383030
   \              3030303000  

   \                                 In  segment NEAR_F, align 1, keep-with-next
   \                     `?<Constant "B1009300">`:
   \   00000000   314230303339       DC8 "B1009300"
   \              303000      

   \                                 In  segment NEAR_F, align 1, keep-with-next
   \                     `?<Constant "D20001428C000940">`:
   \   00000000   324430303130       DC8 "D20001428C000940"
   \              323443383030
   \              3930303400  

   \                                 In  segment NEAR_F, align 1, keep-with-next
   \                     `?<Constant "D20001348DFEFE00">`:
   \   00000000   324430303130       DC8 "D20001348DFEFE00"
   \              343344384546
   \              4546303000  

   \                                 In  segment NEAR_F, align 1, keep-with-next
   \                     `?<Constant "D20001348DFEFE80">`:
   \   00000000   324430303130       DC8 "D20001348DFEFE80"
   \              343344384546
   \              4546303800  

   \                                 In  segment NEAR_F, align 1, keep-with-next
   \                     `?<Constant "B5001200">`:
   \   00000000   354230303231       DC8 "B5001200"
   \              303000      
   \   00000009   324430303130       DC8 "D20001428C000944"
   \              323443383030
   \              3930343400  

   \                                 In  segment NEAR_F, align 1, keep-with-next
   \                     `?<Constant "D20001348D000000">_4`:
   \   00000000   324430303130       DC8 "D20001348D000000"
   \              343344383030
   \              3030303000  

   \                                 In  segment NEAR_F, align 1, keep-with-next
   \                     `?<Constant "D20001348BFF0201">`:
   \   00000000   324430303130       DC8 "D20001348BFF0201"
   \              343342384646
   \              3230313000  

   Maximum stack usage in bytes:

     Function                       CSTACK RSTACK
     --------                       ------ ------
     KO_answer_frame                   24      4
       -> strncpy                      24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> strncpy                      24      2
       -> send_frame_pp_ext_broad      24      2
       -> strncpy                      24      2
       -> send_frame_pp_ext_broad      24      2
       -> strncpy                      24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> manual_reception_buffer_clear
                                       24      2
       -> strncpy                      24      2
       -> send_frame_pp_ext_broad      24      2
       -> strncpy                      24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
     KO_setting_error_frame            22      4
       -> CharToStr                    22      2
       -> CharToStr                    22      2
       -> send_frame_pp_ext_broad      22      2
       -> send_frame_pp_ext_broad      22      2
       -> send_frame_pp_ext_broad      22      2
       -> CharToStr                    22      2
       -> send_frame_pp_ext_broad      22      2
     KO_setting_procedure               0      2
       -> KO_setting_error_frame        0      2
       -> KO_parameter_initial_temp     0      2
       -> KO_setting_error_frame        0      2
       -> KO_setting_error_frame        0      2
       -> KO_setting_error_frame        0      2
     address_answer_frame              21      4
       -> ko_answer_all                21      2
       -> send_frame_pp_ext_broad      21      2
       -> send_frame_pp_ext_broad      21      2
       -> KO_answer_frame              21      2
       -> frame_buffer_clear           21      2
       -> KO_answer_frame              21      2
       -> send_frame_pp_ext_broad      21      2
       -> send_frame_pp_ext_broad      21      2
       -> send_frame_pp_ext_broad      21      2
     address_setting_error_frame       24      4
       -> ko_answer_all                24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> frame_buffer_clear           24      2
       -> KO_answer_frame              24      2
       -> send_frame_pp_ext_broad      24      2
       -> send_frame_pp_ext_broad      24      2
       -> send_frame_pp_ext_broad      24      2
       -> send_frame_pp_ext_broad      24      2
     aux_procedure                      0      4
       -> scenario_remove               0      2
     configuration_answer_frame        32      4
       -> StrToChar                    32      2
       -> strncpy                      32      2
       -> CharToStr                    32      2
       -> CharToStr                    32      2
       -> send_frame_pp_ext_broad      32      2
       -> strncpy                      32      2
       -> CharToStr                    32      2
       -> send_frame_pp_ext_broad      32      2
       -> strncpy                      32      2
       -> CharToStr                    32      2
       -> CharToStr                    32      2
       -> CharToStr                    32      2
       -> send_frame_pp_ext_broad      32      2
       -> send_frame_pp_ext_broad      32      2
       -> send_frame_pp_ext_broad      32      2
       -> strncpy                      32      2
       -> send_frame_pp_ext_broad      32      2
       -> put_s                        32      2
       -> CharToStr                    32      2
       -> send_frame_pp_ext_broad      32      2
       -> CharToStr                    32      2
       -> send_frame_pp_ext_broad      32      2
       -> KO_answer_frame              32      2
       -> strncpy                      32      2
       -> send_frame_pp_ext_broad      32      2
       -> address_answer_frame         32      2
       -> parameter_answer_frame       32      2
     configuration_procedure           78      4
       -> send_frame_pp_ext_broad      74      2
       -> send_frame_pp_ext_broad      74      2
       -> factory_default              74      2
       -> system_reset                 74      2
       -> led_blinking_normal          74      2
       -> KO_parameter_initial         74      2
       -> CharToStr                    74      2
       -> StrToChar                    74      2
       -> KO_parameter_initial         74      2
       -> factory_default              74      2
       -> scenario_remove              74      2
       -> remember_parameter           74      2
       -> StrToChar                    74      2
       -> StrToChar                    74      2
       -> system_reset                 74      2
       -> led_blinking_normal          74      2
       -> send_group_pnl_frame         74      2
       -> send_group_pnl_frame         74      2
       -> led_blinking_normal          74      2
       -> led_blinking_ms              78      2
       -> led_blinking_ms              78      2
       -> led_blinking_normal          74      2
       -> strncpy                      74      2
       -> CharToStr                    74      2
       -> send_frame_pp_ext_broad      74      2
       -> timer_flex_initial           74      2
     configuration_receive_answer_frame
                                        2      2
       -> led_blinking_normal           2      2
       -> send_frame_pp_ext_broad       2      2
       -> send_frame_pp_ext_broad       2      2
     configuration_setting_frame       21      4
       -> PIR_SENSE_SET                21      2
       -> US_SENSE_SET                 21      2
       -> strncpy                      21      2
       -> send_frame_pp_ext_broad      21      2
       -> write_KO                     21      2
       -> write_ee_KO                  21      2
       -> write_KO                     21      2
       -> write_ee_KO                  21      2
       -> write_KO                     21      2
       -> write_ee_KO                  21      2
       -> strncpy                      21      2
       -> strncpy                      21      2
       -> send_frame_pp_ext_broad      21      2
       -> configuration_answer_frame
                                       21      2
       -> strncpy                      21      2
       -> configuration_checking       21      2
       -> strncpy                      21      2
       -> strncpy                      21      2
       -> send_frame_pp_ext_broad      21      2
       -> strncpy                      21      2
       -> send_frame_pp_ext_broad      21      2
       -> strncpy                      21      2
       -> send_frame_pp_ext_broad      21      2
       -> manual_reception_buffer_clear
                                       21      2
       -> KO_setting_procedure         21      2
       -> configuration_procedure      21      2
       -> KO_answer_frame              21      2
       -> write_KO                     21      2
       -> parameter_setting_error_answer
                                       21      2
       -> write_parameter_scenario     21      2
       -> parameter_setting_error_answer
                                       21      2
       -> parameter_setting_error_answer
                                       21      2
       -> address_setting_error_frame
                                       21      2
       -> address_setting_error_frame
                                       21      2
     diagnostic_frame                  17      4
       -> configuration_answer_frame
                                       17      2
       -> configuration_answer_frame
                                       17      2
       -> configuration_answer_frame
                                       17      2
       -> configuration_answer_frame
                                       17      2
       -> send_frame_pp_ext_broad      17      2
       -> ko_answer_all                17      2
       -> configuration_answer_frame
                                       17      2
       -> frame_buffer_clear           17      2
     dimmer_convert                     0      2
     frame_buffer_clear                 0      4
     id_frame                          21      4
       -> strncpy                      21      2
       -> timer_flex_initial           21      2
       -> send_frame_pp_ext_broad      21      2
       -> ID_setting                   21      2
       -> strncpy                      21      2
       -> strncpy                      21      2
       -> send_frame_pp_ext_broad      21      2
       -> system_reset                 21      2
       -> strncpy                      21      2
       -> send_frame_pp_ext_broad      21      2
       -> diagnostic_frame             21      2
       -> diagnostic_frame             21      2
       -> send_frame_pp_ext_broad      21      2
       -> send_frame_pp_ext_broad      21      2
       -> strcmp                       21      2
     ko_answer_all                      1      2
       -> KO_answer_frame               1      2
     not_allowed_response              22      4
       -> send_frame_pp_ext_broad      22      2
       -> CharToStr                    22      2
       -> send_frame_pp_ext_broad      22      2
     org_ext_broad                     25      2
       -> put_s                        25      2
       -> delay_ms                     25      2
       -> put_s                        25      2
       -> is_gateway_busy              25      2
     parameter_all_answer              24      4
       -> not_allowed_response         24      2
       -> read_KO                      24      2
       -> read_KO                      24      2
       -> CharToStr                    24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> frame_buffer_clear           24      2
       -> not_allowed_response         24      2
       -> CharToStr                    24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> frame_buffer_clear           24      2
       -> not_allowed_response         24      2
       -> read_KO                      24      2
       -> read_KO                      24      2
       -> CharToStr                    24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> CharToStr                    24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> not_allowed_response         24      2
       -> CharToStr                    24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> CharToStr                    24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> CharToStr                    24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> CharToStr                    24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> CharToStr                    24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> frame_buffer_clear           24      2
       -> manual_reception_buffer_clear
                                       24      2
     parameter_answer_frame             0      2
       -> parameter_all_answer          0      2
       -> parameter_specified_index_answer
                                        0      2
     parameter_request_error_frame     19      4
       -> send_frame_pp_ext_broad      19      2
     parameter_set                      0      2
     parameter_setting_error_answer    24      4
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
     parameter_specified_index_answer
                                       24      4
       -> send_frame_pp_ext_broad      24      2
       -> read_KO                      24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> parameter_request_error_frame
                                       24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> not_allowed_response         24      2
       -> not_allowed_response         24      2
       -> KO_answer_frame              24      2
       -> read_KO                      24      2
       -> read_KO                      24      2
       -> CharToStr                    24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> frame_buffer_clear           24      2
       -> KO_answer_frame              24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> frame_buffer_clear           24      2
       -> not_allowed_response         24      2
     scenario_remove                    0      4
     send_aux_frame                    14      4
       -> CharToStr                    14      2
       -> send_frame_pp_broad          14      2
       -> send_frame_pp_broad          14      2
       -> dimmer_convert               14      2
       -> dimmer_convert               14      2
       -> CharToStr                    14      2
       -> send_frame_pp_broad          14      2
       -> CharToStr                    14      2
       -> send_frame_pp_broad          14      2
       -> send_frame_pp_broad          14      2
       -> send_frame_pp_broad          14      2
     send_frame_pp                     17      2
       -> put_s                        17      2
       -> delay_ms                     17      2
       -> put_s                        17      2
       -> is_gateway_busy              17      2
     send_frame_pp_broad               17      2
       -> put_s                        17      2
       -> delay_ms                     17      2
       -> put_s                        17      2
       -> is_gateway_busy              17      2
     send_frame_pp_ext                 23      2
       -> put_s                        23      2
       -> delay_ms                     23      2
     send_frame_pp_ext_broad           28      4
       -> CharToStr                    28      2
       -> CharToStr                    28      2
       -> put_s                        28      2
       -> delay_ms                     28      2
       -> put_s                        28      2
       -> is_gateway_busy              28      2
     send_group_frame                  30      4
       -> CharToStr                    30      2
       -> send_frame_pp_broad          30      2
       -> send_frame_pp_broad          30      2
       -> send_frame_pp_broad          30      2
       -> send_frame_pp_broad          30      2
       -> send_frame_pp_ext_broad      30      2
     send_group_pnl_frame              24      4
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
     write_parameter_scenario           0      4


   Segment part sizes:

     Function/Label                                 Bytes
     --------------                                 -----
     send_frame_pp                                   108
     send_frame_pp_broad                             108
     send_frame_pp_ext                                76
     send_frame_pp_ext_broad                         208
     org_ext_broad                                   104
     id_frame                                       1088
     ID_buffer                                         9
     parameter_set                                     2
     diagnostic_frame                                120
     configuration_setting_frame                    1006
     configuration_answer_frame                      838
     configuration_receive_answer_frame
                                                     210
     KO_answer_frame                                 456
     parameter_answer_frame                           84
     frame_buffer_clear                               54
     parameter_request_error_frame                    58
     not_allowed_response                            120
     parameter_all_answer                            940
     parameter_specified_index_answer
                                                    1064
     send_aux_frame                                  282
     send_group_pnl_frame                            102
     ko_answer_all                                    22
     address_answer_frame                            246
     address_setting_error_frame                     254
     dimmer_convert                                   64
     send_group_frame                                170
     write_parameter_scenario                        168
     parameter_setting_error_answer                  262
     KO_setting_procedure                            434
     configuration_procedure                        2194
     aux_procedure                                    86
     scenario_remove                                  96
     KO_setting_error_frame                          152
     ?<Initializer for <Constant "D000010400000000"   26
     ?<Initializer for <Constant "D200013415000000"  119
     ?<Initializer for <Constant "D20001348C0001FA"   34
     ?<Initializer for <Constant "D20001348B020381"   54
     ?<Initializer for <Constant "D20001348C0000AB"   51
     ?<Initializer for ID_buffer>                      9
     ?<Jumptable for configuration_procedure>_0       40
     ?<Constant "D000010400000000">                   26
     ?<Constant "D000010400059876">                   17
     ?<Constant "D200013415000000">                  119
     ?<Constant "D200013480000000">                   17
     ?<Constant "D20001348C0001FA">                   34
     ?<Constant "D20001348B020381">                   54
     ?<Constant "D20001348C0000AB">                   51
     ?<Constant "D20001348D000000">                   17
     ?<Constant "D20001348D000000">_1                 17
     ?<Constant "D20001348D000000">_2                 17
     ?<Constant "D20001348D000000">_3                 17
     ?<Constant "B1009300">                            9
     ?<Constant "D20001428C000940">                   17
     ?<Constant "D20001348DFEFE00">                   17
     ?<Constant "D20001348DFEFE80">                   17
     ?<Constant "B5001200">                           26
     ?<Constant "D20001348D000000">_4                 17
     ?<Constant "D20001348BFF0201">                   17
      Others                                           6

 
 11 176 bytes in segment CODE
      6 bytes in segment INITTAB
    222 bytes in segment NEAR_F
    293 bytes in segment NEAR_I
    293 bytes in segment NEAR_ID
     40 bytes in segment SWITCH
 
 11 731 bytes of CODE memory (+ 6 bytes shared)
    293 bytes of DATA memory

Errors: none
Warnings: none
