################################################################################
#                                                                              #
#      IAR Universal Linker V4.61B/386                                         #
#                                                                              #
#           Link time     =  05/Aug/2009  16:57:18                             #
#           Target CPU    =  A90                                               #
#           List file     =  D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\List\LM057.map                         #
#           Output file 1 =  D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Exe\LM057.hex                          #
#                            Format: intel-extended, variant: -y(CODE)         #
#           Output file 2 =  D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Exe\LM057.eep                          #
#                            Format: intel-extended, variant: -y(XDATA)        #
#           Command line  =  -y(CODE)                                          #
#                            -Ointel-extended,(XDATA)=D:\avr\Uart_Interrupt\LM #
#                            _Universal\LM_IAR_V5.0\Alan\Release\Exe\LM057.eep #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Obj\IR.r90                             #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Obj\PIR.r90                            #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Obj\US.r90                             #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Obj\application.r90                    #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Obj\board.r90                          #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Obj\configuration.r90                  #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Obj\decode_scs.r90                     #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Obj\decode_scs_next.r90                #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Obj\function_modality.r90              #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Obj\function_service.r90               #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Obj\global_variable.r90                #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Obj\main.r90                           #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Obj\usart.r90                          #
#                            -o                                                #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Exe\LM057.hex                          #
#                            -Fintel-extended -B -z -l                         #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\List\LM057.map                         #
#                            -xmsnio                                           #
#                            "-IC:\Program Files\IAR Systems\Embedded Workbenc #
#                            h 5.0 Evaluation\avr\LIB\"                        #
#                            -f                                                #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            5.0 Evaluation\avr\config\lnkm644ps.xcl"          #
#                            (-D_..X_INTVEC_SIZE=7C -D_..X_FLASH_TEND=FF       #
#                            -D_..X_FLASH_NEND=FFFF -D_..X_FLASH_END=FFFF      #
#                            -D_..X_SRAM_BASE=100 -D_..X_SRAM_TEND=100         #
#                            -D_..X_SRAM_END=10FF -D_..X_EEPROM_END=7FF        #
#                            -D_..X_CSTACK_SIZE=100 -D_..X_RSTACK_SIZE=40      #
#                            -D_..X_HEAP_SIZE=80 -D_..X_NEAR_HEAP_SIZE=80      #
#                            -ca90 -Z(CODE)INTVEC=0-(_..X_INTVEC_SIZE-1)       #
#                            -H1895 -h(CODE)0-_..X_INTVEC_SIZE                 #
#                            -Z(CODE)TINY_F=_..X_INTVEC_SIZE-_..X_FLASH_TEND   #
#                            -Z(CODE)NEAR_F,SWITCH,INITTAB,DIFUNCT=_..X_INTVEC #
#                            _SIZE-_..X_FLASH_END                              #
#                            -Z(CODE)CODE=_..X_INTVEC_SIZE-_..X_FLASH_END      #
#                            -Z(CODE)TINY_ID,NEAR_ID=_..X_INTVEC_SIZE-_..X_FLA #
#                            SH_END                                            #
#                            -Z(CODE)CHECKSUM#_..X_FLASH_END                   #
#                            -Z(DATA)TINY_I,TINY_Z,TINY_N=_..X_SRAM_BASE-_..X_ #
#                            SRAM_TEND                                         #
#                            -Z(DATA)NEAR_I,NEAR_Z,NEAR_N=_..X_SRAM_BASE-_..X_ #
#                            SRAM_END                                          #
#                            -Z(DATA)RSTACK+_..X_RSTACK_SIZE=_..X_SRAM_BASE-_. #
#                            .X_SRAM_END                                       #
#                            -Z(DATA)CSTACK+_..X_CSTACK_SIZE=_..X_SRAM_BASE-_. #
#                            .X_SRAM_END                                       #
#                            -Z(DATA)HEAP+_..X_HEAP_SIZE=_..X_SRAM_BASE-_..X_S #
#                            RAM_END                                           #
#                            -Z(DATA)IOSTREAM_N#_..X_SRAM_BASE-_..X_SRAM_END   #
#                            -Z(DATA)NEAR_HEAP+_..X_NEAR_HEAP_SIZE=_..X_SRAM_B #
#                            ASE-_..X_SRAM_END                                 #
#                            -Z(XDATA)EEPROM_I,EEPROM_N=0-_..X_EEPROM_END      #
#                            -e_PrintfSmall=_Printf                            #
#                            -e_small_write=_formatted_write                   #
#                            -e_small_write_P=_formatted_write_P               #
#                            -e_ScanfSmall=_Scanf                              #
#                            -e_medium_read=_formatted_read                    #
#                            -e_medium_read_P=_formatted_read_P -w29) -s       #
#                            __program_start                                   #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            5.0 Evaluation\avr\LIB\CLIB\cl3s-ec_mul-sf.r90"   #
#                                                                              #
#                        Copyright 1987-2008 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      00000000  Relocatable, from module : ?RESET




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  EEPROM_SIZE     = 2
  R10             = REG
  R11             = REG
  R12             = REG
  R4              = REG
  R5              = REG
  R6              = REG
  R7              = REG
  R8              = REG
  R9              = REG
  __64bit_doubles = disabled
  __cpu           = 3
  __cpu_name      = ATmega644P
  __enhanced_core = enabled
  __has_elpm      = false
  __memory_model  = 2
  __rt_version    = 3



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _..X_NEAR_HEAP_SIZE     00000080 
           _..X_HEAP_SIZE          00000080 
           _..X_RSTACK_SIZE        00000040 
           _..X_CSTACK_SIZE        00000100 
           _..X_EEPROM_END         000007FF 
           _..X_SRAM_END           000010FF 
           _..X_SRAM_TEND          00000100 
           _..X_SRAM_BASE          00000100 
           _..X_FLASH_END          0000FFFF 
           _..X_FLASH_NEND         0000FFFF 
           _..X_FLASH_TEND         000000FF 
           _..X_INTVEC_SIZE        0000007C 
    *************************************************************************

  FILE NAME : D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Alan\Release\Obj\IR.r90
  PROGRAM MODULE, NAME : IR

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 000000CE - 000000CE (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   put_c1
                                                   usart1_rx_ser
                                                   usart_tx_ser
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UDR1                 000000CE 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000CC - 000000CD (0x2 bytes), align: 0
  Segment part 2.             Intra module refs:   init_USART1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UBRR1                000000CC 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000CA - 000000CA (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   init_USART1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSR1C               000000CA 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000C9 - 000000C9 (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   init_USART1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSR1B               000000C9 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000C8 - 000000C8 (0x1 bytes), align: 0
  Segment part 5.             Intra module refs:   init_USART1
                                                   put_c1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSR1A               000000C8 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000008A - 0000008B (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   IR_36kHz
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_OCR1B                0000008A 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000088 - 00000089 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   IR_36kHz
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_OCR1A                00000088 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000086 - 00000087 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   IR_36kHz
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_ICR1                 00000086 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000081 - 00000081 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   PWM_output_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR1B               00000081 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000080 - 00000080 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   PWM_output_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR1A               00000080 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000514 - 000005DF (0xcc bytes), align: 1
  Segment part 25.            Intra module refs:   usart1_rx_ser::??INTVEC 112
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usart1_rx_ser           00000514 
               interrupt function
               stack 1 = 00000000 ( 00000007 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000005E0 - 0000062F (0x50 bytes), align: 1
  Segment part 26.            Intra module refs:   usart_tx_ser::??INTVEC 120
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usart_tx_ser            000005E0 
               interrupt function
               stack 1 = 00000000 ( 00000005 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000630 - 0000067F (0x50 bytes), align: 1
  Segment part 27.            Intra module refs:   put_s1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           put_c1                  00000630 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000680 - 000006DF (0x60 bytes), align: 1
  Segment part 28.            Intra module refs:   decode_IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           put_s1                  00000680 
               calls direct
               stack 1 = 00000000 ( 00000005 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000006E0 - 000006FF (0x20 bytes), align: 1
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           init_USART1             000006E0        main (main)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000700 - 0000071F (0x20 bytes), align: 1
  Segment part 30.            Intra module refs:   decode_IR
                                                   put_s1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _calculate_crc          00000700 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000720 - 0000072D (0xe bytes), align: 1
  Segment part 31.            Intra module refs:   IR_36kHz
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PWM_output_init         00000720 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000072E - 0000074F (0x22 bytes), align: 1
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IR_36kHz                0000072E        main (main)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 33. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           close_IR_36kHz          
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000750 - 00000779 (0x2a bytes), align: 1
  Segment part 34.            Intra module refs:   decode_IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer_IR_initial        00000750 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000077A - 00001401 (0xc88 bytes), align: 1
  Segment part 35.            Intra module refs:   Segment part 41
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           decode_IR               0000077A        main (main)
               calls direct
               stack 1 = 00000000 ( 00000042 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000003F5 - 000003F5 (0x1 bytes), align: 0
  Segment part 22.            Intra module refs:   decode_IR
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001402 - 0000142B (0x2a bytes), align: 1
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ir_buffer_clear         00001402        all_reception_buffer_clear (application)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000142C - 00001A1B (0x5f0 bytes), align: 1
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ir_pnl                  0000142C        service_main (application)
               calls direct
               stack 1 = 00000000 ( 00000018 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000003F6 - 000003F7 (0x2 bytes), align: 0
  Segment part 24.            Intra module refs:   ir_pnl
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           temp_ns                 000003F6 
    -------------------------------------------------------------------------
CODE
  Segment part 38. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           setting_diagnostic_ir   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_current_scenario_number
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001A1C - 00001A53 (0x38 bytes), align: 1
  Segment part 40.            Intra module refs:   decode_IR
                                                   ir_pnl
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           is_scenario_full        00001A1C 
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001F, align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 0000001F        Segment part 0 (?EEPROM_16)
                                                   Segment part 1 (?EEPROM_16)
                                                   Segment part 8 (?EEPROM_16)
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000020, align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 00000020        __eeget16_16 (?EEPROM_16)
                                                   __eeget32_16 (?EEPROM_16)
                                                   __eeget8_16 (?EEPROM_16)
                                                   __eeput16_16 (?EEPROM_16)
                                                   __eeput32_16 (?EEPROM_16)
                                                   __eeput8_16 (?EEPROM_16)
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000021, align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                00000021        Segment part 1 (?EEPROM_16)
                                                   Segment part 8 (?EEPROM_16)
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000022, align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                00000022        Segment part 1 (?EEPROM_16)
                                                   Segment part 8 (?EEPROM_16)
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000073 (0x74 bytes), align: 1
  Segment part 15. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usart1_rx_ser::??INTVEC 112
                                   00000070 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000007B (0x7c bytes), align: 1
  Segment part 16. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usart_tx_ser::??INTVEC 120
                                   00000078 
    -------------------------------------------------------------------------
CSTACK
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000B9F2 - 0000BAE1 (0xf0 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 19
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE 00000508 - 0000050D (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 10 (decode_scs)
                                                   Segment part 11 (decode_scs_next)
                                                   Segment part 14 (decode_scs_next)
                                                   Segment part 16 (decode_scs_next)
                                                   Segment part 19
                                                   Segment part 19 (application)
                                                   Segment part 24 (application)
                                                   Segment part 27 (application)
                                                   Segment part 28 (decode_scs_next)
                                                   Segment part 29 (application)
                                                   Segment part 31 (decode_scs_next)
                                                   Segment part 7 (decode_scs)
                                                   Segment part 7 (decode_scs_next)
                                                   flash_KO (global_variable)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_I>
                                   00000508 
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE 0000050E - 00000513 (0x6 bytes), align: 0
  Segment part 23.            Intra module refs:   Configurators (global_variable)
                                                   DLL (global_variable)
                                                   Delay_Time_set (global_variable)
                                                   First_detection_enable (global_variable)
                                                   KO (global_variable)
                                                   KO_conf (global_variable)
                                                   M2_timer (global_variable)
                                                   M2_timer_count (global_variable)
                                                   M2_type (global_variable)
                                                   PIR_detection_en (global_variable)
                                                   SCS_received (global_variable)
                                                   Segment part 14 (global_variable)
                                                   Segment part 20 (usart)
                                                   Segment part 22
                                                   Segment part 32 (application)
                                                   Segment part 34 (application)
                                                   Segment part 7 (PIR)
                                                   Time_delay (global_variable)
                                                   US_detection_en (global_variable)
                                                   Usonic (US)
                                                   Walk_Through_flag (global_variable)
                                                   g_asc_reception_buffer (global_variable)
                                                   g_asc_short_buffer (global_variable)
                                                   g_ir_reception (global_variable)
                                                   g_reception_buffer (global_variable)
                                                   g_short_buffer (global_variable)
                                                   g_slope (global_variable)
                                                   g_temp (global_variable)
                                                   g_timer2_flag (global_variable)
                                                   modality0_delay_ms (global_variable)
                                                   motion_resutl (global_variable)
                                                   motion_total (global_variable)
                                                   pir (global_variable)
                                                   product_information (global_variable)
                                                   scs_frame (global_variable)
                                                   set_point (global_variable)
                                                   temp_ns
                                                   temp_product_information (global_variable)
                                                   temp_variable (global_variable)
                                                   tx1_buffer (global_variable)
                                                   tx1_counter (global_variable)
                                                   tx1_rd_index (global_variable)
                                                   tx1_wr_index (global_variable)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   0000050E 
    -------------------------------------------------------------------------
SWITCH
  Relative segment, address: CODE 000002BA - 000002EB (0x32 bytes), align: 1
  Segment part 41.            Intra module refs:   decode_IR
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 00000100 - 000001EF (0xf0 bytes), align: 0
  Segment part 19.            Intra module refs:   decode_IR
                                                   ir_pnl

    *************************************************************************

  FILE NAME : D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Alan\Release\Obj\PIR.r90
  PROGRAM MODULE, NAME : PIR

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00001A54 - 00001A79 (0x26 bytes), align: 1
  Segment part 9.             Intra module refs:   PIR_detect
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PIR_SENSE_SET           00001A54        configuration_setting_frame (decode_scs_next)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001A7A - 00001C43 (0x1ca bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PIR_detect              00001A7A        motion_detect (application)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000003F8 - 00000407 (0x10 bytes), align: 0
  Segment part 7.             Intra module refs:   PIR_detect
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 1. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 8. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   

    *************************************************************************

  FILE NAME : D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Alan\Release\Obj\US.r90
  PROGRAM MODULE, NAME : US

  SEGMENTS IN THE MODULE
  ======================
NEAR_Z
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DTFLAG_STATUS           
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           INDSAMPLE_CNT           
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000408 - 0000043A (0x33 bytes), align: 0
  Segment part 10.            Intra module refs:   US_SENSE_SET
                                                   Ultrasonic_detection
                                                   ultWarmUpEvents
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Usonic                  00000408 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001C44 - 00001C69 (0x26 bytes), align: 1
  Segment part 11.            Intra module refs:   us_detection
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           US_SENSE_SET            00001C44        configuration_setting_frame (decode_scs_next)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001C6A - 00001CE1 (0x78 bytes), align: 1
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ultWarmUpEvents         00001C6A        function_service_init (function_service)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001CE2 - 00001E25 (0x144 bytes), align: 1
  Segment part 13.            Intra module refs:   us_detection
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Ultrasonic_detection    00001CE2 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001E26 - 00001E2B (0x6 bytes), align: 1
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           us_detection            00001E26        get_us (application)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 1. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 8. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   

    *************************************************************************

  FILE NAME : D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Alan\Release\Obj\application.r90
  PROGRAM MODULE, NAME : application

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 000000B6 - 000000B6 (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   timer0_enable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_ASSR                 000000B6 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000B4 - 000000B4 (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   timer2_enable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_OCR2B                000000B4 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000B3 - 000000B3 (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   timer2_enable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_OCR2A                000000B3 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000B1 - 000000B1 (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   timer2_enable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR2B               000000B1 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000B0 - 000000B0 (0x1 bytes), align: 0
  Segment part 5.             Intra module refs:   timer2_enable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR2A               000000B0 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000006E - 0000006E (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   timer0_enable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TIMSK0               0000006E 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000048 - 00000048 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   timer0_enable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_OCR0B                00000048 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000047 - 00000047 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   timer0_enable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_OCR0A                00000047 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000046 - 00000046 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   timer0_enable
                                                   timer0_ovf_ser (board)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCNT0                00000046 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000045 - 00000045 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   timer0_enable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR0B               00000045 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000044 - 00000044 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   timer0_enable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR0A               00000044 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000028 - 00000028 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   Dled_light_on_ms
                                                   IO_Initial (board)
                                                   led_blinking_disable
                                                   motion_detect
                                                   scs_pnl_none_confed_master
                                                   start_conf
                                                   timer0_ovf_ser (board)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTC                00000028 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001E2C - 00001F77 (0x14c bytes), align: 1
  Segment part 35.            Intra module refs:   service_main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           factory_calibration     00001E2C 
               calls direct
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001F78 - 00002063 (0xec bytes), align: 1
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Mode_frame_GR           00001F78        Check_SCS_received (function_service)
                                                   GS_presence_send (function_service)
                                                   ON_takeline (function_service)
                                                   _Initial_state (function_service)
                                                   _Maintain_state (function_service)
                                                   _ReTrigger_State (function_service)
                                                   _Standby_state (function_service)
                                                   frame_OFF_send (function_service)
                                                   frame_ON_send (function_service)
                                                   function_check_status (function_service)
               calls direct
               stack 1 = 00000000 ( 0000000B )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002064 - 00002135 (0xd2 bytes), align: 1
  Segment part 37.            Intra module refs:   Actuator_regulation
                                                   Dimmer_regulation
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dimmer_command          00002064        frame_OFF_send (function_service)
               calls direct
               stack 1 = 00000000 ( 00000016 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 38. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Mode_frame_P2P          
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002136 - 00002201 (0xcc bytes), align: 1
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           frame_M2_answer         00002136        Check_SCS_received (function_service)
                                                   decode_SCS (decode_scs)
               calls direct
               stack 1 = 00000000 ( 00000018 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002202 - 0000227B (0x7a bytes), align: 1
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DLL_setpoint            00002202        Check_SCS_received (function_service)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000227C - 000023ED (0x172 bytes), align: 1
  Segment part 41.            Intra module refs:   Dimmer_regulation
                                                   daylight_set_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           factor_divcalc          0000227C 
               stack 1 = 00000000 ( 00000006 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 0000043B - 00000442 (0x8 bytes), align: 0
  Segment part 32.            Intra module refs:   factor_divcalc
    -------------------------------------------------------------------------
CODE
  Segment part 42. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           factor_mulcalc          
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000023EE - 000024D5 (0xe8 bytes), align: 1
  Segment part 43.            Intra module refs:   Light_regulation
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Actuator_regulation     000023EE 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000024D6 - 000026FD (0x228 bytes), align: 1
  Segment part 44.            Intra module refs:   Light_regulation
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Dimmer_regulation       000024D6 
               calls direct
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 45. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Dimmer_dec              
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000026FE - 0000271B (0x1e bytes), align: 1
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Light_regulation        000026FE        Function_KO119 (function_service)
                                                   Function_KO168 (function_service)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000271C - 0000276D (0x52 bytes), align: 1
  Segment part 47.            Intra module refs:   DLL_setpoint
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           daylight_set_init       0000271C        function_service_init (function_service)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000276E - 000027E7 (0x7a bytes), align: 1
  Segment part 48.            Intra module refs:   daylight_service
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PofL_calc               0000276E 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000027E8 - 00002A09 (0x222 bytes), align: 1
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           daylight_service        000027E8        Function_KO168 (function_service)
               calls direct
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002A0A - 00002A89 (0x80 bytes), align: 1
  Segment part 50.            Intra module refs:   DLL_setpoint
                                                   daylight_service
                                                   factory_calibration
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_dl_level            00002A0A        Function_KO128 (function_service)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002A8A - 00002B7D (0xf4 bytes), align: 1
  Segment part 51.            Intra module refs:   get_dl_level
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           real_daylight_calc      00002A8A 
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002B7E - 00002B9F (0x22 bytes), align: 1
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer0_enable           00002B7E        function_service_init (function_service)
                                                   main (main)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002BA0 - 00002BB9 (0x1a bytes), align: 1
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer2_enable           00002BA0        main (main)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002BBA - 00002C21 (0x68 bytes), align: 1
  Segment part 54.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           motion_detect           00002BBA        occupancy_detect (function_service)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002C22 - 00002C59 (0x38 bytes), align: 1
  Segment part 55.            Intra module refs:   motion_detect
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_us                  00002C22 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 56. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           load_update             
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002C5A - 00002CDD (0x84 bytes), align: 1
  Segment part 57.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           button_press_detect     00002C5A        main (main)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 58. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           button_release_detect   
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002CDE - 0000326F (0x592 bytes), align: 1
  Segment part 59.            Intra module refs:   service_main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           scs_pnl_advance_master
                                   00002CDE 
               calls direct
               stack 1 = 00000000 ( 00000014 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000443 - 00000447 (0x5 bytes), align: 0
  Segment part 34.            Intra module refs:   scs_pnl_advance_master
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00003270 - 000035B3 (0x344 bytes), align: 1
  Segment part 60.            Intra module refs:   service_main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           scs_pnl_none_confed_master
                                   00003270 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000035B4 - 000039B3 (0x400 bytes), align: 1
  Segment part 61.            Intra module refs:   service_main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           scs_pnl_advance_slave   000035B4 
               calls direct
               stack 1 = 00000000 ( 00000014 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 62. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           scs_advance_from_none_confed
                                   
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000039B4 - 00003BD7 (0x224 bytes), align: 1
  Segment part 63.            Intra module refs:   service_main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           scs_pnl_none_confed_slave
                                   000039B4 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 64. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           scs_pnl_group_sensor_detector
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00003BD8 - 00003BEB (0x14 bytes), align: 1
  Segment part 65.            Intra module refs:   button_press_detect
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           key_time_clear          00003BD8 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 66. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led_blinking_double_disable
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00003BEC - 00003C2D (0x42 bytes), align: 1
  Segment part 67.            Intra module refs:   led_blinking_ms
                                                   led_blinking_normal
                                                   scs_pnl_advance_master
                                                   scs_pnl_advance_slave
                                                   scs_pnl_none_confed_master
                                                   scs_pnl_none_confed_slave
                                                   service_main
                                                   start_conf
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led_blinking            00003BEC        decode_IR (IR)
                                                   ir_pnl (IR)
                                                   scs_calibration (decode_scs)
                                                   timer0_ovf_ser (board)
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00003C2E - 00003C65 (0x38 bytes), align: 1
  Segment part 68.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led_blinking_ms         00003C2E        configuration_procedure (decode_scs_next)
               calls direct
               stack 1 = 00000000 ( 00000008 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00003C66 - 00003C8D (0x28 bytes), align: 1
  Segment part 69.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Dled_light_on_ms        00003C66        occupancy_detect (function_service)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00003C8E - 00003CA7 (0x1a bytes), align: 1
  Segment part 70.            Intra module refs:   PnL_ad_end
                                                   led_blinking_normal
                                                   scs_pnl_advance_master
                                                   scs_pnl_advance_slave
                                                   scs_pnl_none_confed_master
                                                   service_main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led_blinking_disable    00003C8E        ir_pnl (IR)
                                                   scs_calibration (decode_scs)
                                                   timer0_ovf_ser (board)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00003CA8 - 00003CD1 (0x2a bytes), align: 1
  Segment part 71.            Intra module refs:   scs_pnl_advance_master
                                                   scs_pnl_advance_slave
                                                   scs_pnl_none_confed_master
                                                   scs_pnl_none_confed_slave
                                                   service_main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer_flex_initial      00003CA8        configuration_procedure (decode_scs_next)
                                                   decode_IR (IR)
                                                   id_frame (decode_scs_next)
                                                   ir_pnl (IR)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00003CD2 - 00003CFB (0x2a bytes), align: 1
  Segment part 72.            Intra module refs:   scs_pnl_advance_slave
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer_flex2_initial     00003CD2 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00003CFC - 00003D25 (0x2a bytes), align: 1
  Segment part 73.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer_dimmer_initial    00003CFC        decode_IR (IR)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00003D26 - 00003D5F (0x3a bytes), align: 1
  Segment part 74.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           all_reception_buffer_clear
                                   00003D26        main (main)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00003D60 - 00003D87 (0x28 bytes), align: 1
  Segment part 75.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           manual_reception_buffer_clear
                                   00003D60        KO_answer_frame (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   parameter_all_answer (decode_scs_next)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00003D88 - 000040B1 (0x32a bytes), align: 1
  Segment part 76.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           start_conf              00003D88        main (main)
               calls direct
               stack 1 = 00000000 ( 0000000D )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000040B2 - 000041FB (0x14a bytes), align: 1
  Segment part 77.            Intra module refs:   scs_pnl_advance_master
                                                   scs_pnl_none_confed_master
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           factory_default         000040B2        configuration_procedure (decode_scs_next)
                                                   decode_IR (IR)
               calls direct
               stack 1 = 00000000 ( 00000035 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000041FC - 0000435B (0x160 bytes), align: 1
  Segment part 78.            Intra module refs:   Segment part 94
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           configurator_to_KO      000041FC        load_parameter (configuration)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000435C - 00004531 (0x1d6 bytes), align: 1
  Segment part 79.            Intra module refs:   Segment part 95
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           service_main            0000435C        main (main)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 80. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led_status_recover      
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004532 - 0000453F (0xe bytes), align: 1
  Segment part 81.            Intra module refs:   scs_pnl_none_confed_master
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           frame_send_disable_automatic_control
                                   00004532 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004540 - 0000454D (0xe bytes), align: 1
  Segment part 82.            Intra module refs:   PnL_NONE_end
                                                   scs_pnl_none_confed_master
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           frame_send_enable_automatic_control
                                   00004540 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000454E - 0000455B (0xe bytes), align: 1
  Segment part 83.            Intra module refs:   scs_pnl_none_confed_master
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           frame_send_start_pnl_none_group_confed
                                   0000454E 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000455C - 00004595 (0x3a bytes), align: 1
  Segment part 84.            Intra module refs:   scs_pnl_none_confed_master
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           frame_send_start_pnl_group_confed
                                   0000455C 
               calls direct
               stack 1 = 00000000 ( 00000014 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004596 - 000045A3 (0xe bytes), align: 1
  Segment part 85.            Intra module refs:   PnL_NONE_end
                                                   scs_pnl_none_confed_master
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           frame_send_end_pnl      00004596 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000045A4 - 000045B1 (0xe bytes), align: 1
  Segment part 86.            Intra module refs:   scs_pnl_none_confed_master
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           frame_send_group_request
                                   000045A4 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000045B2 - 00004633 (0x82 bytes), align: 1
  Segment part 87.            Intra module refs:   PnL_NONE_end
                                                   scs_pnl_advance_slave
                                                   scs_pnl_none_confed_master
                                                   scs_pnl_none_confed_slave
                                                   service_main
                                                   start_conf
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led_blinking_normal     000045B2        configuration_procedure (decode_scs_next)
                                                   configuration_receive_answer_frame (decode_scs_next)
                                                   decode_IR (IR)
               calls direct
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004634 - 000046AB (0x78 bytes), align: 1
  Segment part 88.            Intra module refs:   scs_pnl_none_confed_master
                                                   scs_pnl_none_confed_slave
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           load_default_advance_parameter
                                   00004634 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000046AC - 000046D5 (0x2a bytes), align: 1
  Segment part 89.            Intra module refs:   scs_pnl_advance_master
                                                   scs_pnl_none_confed_master
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led_blinking_stage2_initial
                                   000046AC 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000046D6 - 0000473B (0x66 bytes), align: 1
  Segment part 90.            Intra module refs:   scs_pnl_advance_master
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PnL_ad_end              000046D6        timer0_ovf_ser (board)
               calls direct
               stack 1 = 00000000 ( 00000014 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000473C - 00004751 (0x16 bytes), align: 1
  Segment part 91.            Intra module refs:   scs_pnl_none_confed_master
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PnL_NONE_end            0000473C        timer0_ovf_ser (board)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004752 - 0000477D (0x2c bytes), align: 1
  Segment part 92.            Intra module refs:   Actuator_regulation
                                                   Dimmer_regulation
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           regulation_timer_initial
                                   00004752        Check_SCS_received (function_service)
                                                   application_decode_short (decode_scs)
                                                   frame_ON_send (function_service)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000477E - 000047A7 (0x2a bytes), align: 1
  Segment part 93.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           relay_timer_initial     0000477E        Function_KO128 (function_service)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 13. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 14. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 15. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 16. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000BAE2 - 0000BAF2 (0x11 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 19
    -------------------------------------------------------------------------
INITTAB
  Segment part 21. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_I>
                                   
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000BAF3 - 0000BB51 (0x5f bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 24
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000BB52 - 0000BB68 (0x17 bytes), align: 0
  Segment part 28.            Intra module refs:   Segment part 27
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000BB69 - 0000BB8A (0x22 bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 29
    -------------------------------------------------------------------------
INITTAB
  Segment part 33. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   
    -------------------------------------------------------------------------
SWITCH
  Relative segment, address: CODE 000002EC - 00000305 (0x1a bytes), align: 1
  Segment part 94.            Intra module refs:   configurator_to_KO
    -------------------------------------------------------------------------
SWITCH
  Relative segment, address: CODE 00000306 - 00000327 (0x22 bytes), align: 1
  Segment part 95.            Intra module refs:   service_main
    -------------------------------------------------------------------------
NEAR_F
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 000001F0 - 00000200 (0x11 bytes), align: 0
  Segment part 19.            Intra module refs:   dimmer_command
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 00000201 - 0000025F (0x5f bytes), align: 0
  Segment part 24.            Intra module refs:   PnL_ad_end
                                                   frame_send_disable_automatic_control
                                                   frame_send_enable_automatic_control
                                                   frame_send_end_pnl
                                                   frame_send_group_request
                                                   frame_send_start_pnl_none_group_confed
                                                   scs_pnl_advance_master
                                                   scs_pnl_advance_slave
                                                   scs_pnl_none_confed_master
                                                   scs_pnl_none_confed_slave
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 00000260 - 00000276 (0x17 bytes), align: 0
  Segment part 27.            Intra module refs:   start_conf
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 00000277 - 00000298 (0x22 bytes), align: 0
  Segment part 29.            Intra module refs:   service_main
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000007C - 0000008C (0x11 bytes), align: 0
  Segment part 23.            Intra module refs:   scs_pnl_advance_master
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000008D - 0000009D (0x11 bytes), align: 0
  Segment part 26.            Intra module refs:   scs_pnl_advance_slave
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000009E - 000000AE (0x11 bytes), align: 0
  Segment part 31.            Intra module refs:   frame_send_start_pnl_group_confed

    *************************************************************************

  FILE NAME : D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Alan\Release\Obj\board.r90
  PROGRAM MODULE, NAME : board

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 000000B2 - 000000B2 (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   timer2_ovf_ser
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCNT2                000000B2 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_OCR1B                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_OCR1A                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_ICR1                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCNT1                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 6. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR1B               
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 7. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR1A               
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000007E - 0000007E (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   adc_initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DIDR0                0000007E 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000007C - 0000007C (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   adc_initial
                                                   read_adc10bit
                                                   read_adc8bit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_ADMUX                0000007C 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000007A - 0000007A (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   adc_initial
                                                   read_adc10bit
                                                   read_adc8bit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_ADCSRA               0000007A 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000078 - 00000079 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   read_adc10bit
                                                   read_adc8bit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_ADC                  00000078 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PRR                  
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000060 - 00000060 (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   WDT_off
                                                   system_reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_WDTCSR               00000060 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000054 - 00000054 (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   WDT_off
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_MCUSR                00000054 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 15. TENTATIVE. Used definition from application
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCNT0                
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000002B - 0000002B (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   IO_Initial
                                                   timer0_ovf_ser
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTD                0000002B 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000002A - 0000002A (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   IO_Initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRD                 0000002A 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 18. TENTATIVE. Used definition from application
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTC                
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000027 - 00000027 (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   IO_Initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRC                 00000027 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000025 - 00000025 (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   IO_Initial
                                                   timer2_ovf_ser
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTB                00000025 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000024 - 00000024 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   IO_Initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRB                 00000024 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000023 - 00000023 (0x1 bytes), align: 0
  Segment part 22.            Intra module refs:   get_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PINB                 00000023 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000022 - 00000022 (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   IO_Initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTA                00000022 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000021 - 00000021 (0x1 bytes), align: 0
  Segment part 24.            Intra module refs:   IO_Initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRA                 00000021 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000047A8 - 00005073 (0x8cc bytes), align: 1
  Segment part 34.            Intra module refs:   timer0_ovf_ser::??INTVEC 72
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer0_ovf_ser          000047A8 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 00000012 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005074 - 0000509F (0x2c bytes), align: 1
  Segment part 35.            Intra module refs:   timer2_ovf_ser::??INTVEC 44
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer2_ovf_ser          00005074 
               interrupt function
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000050A0 - 000050D5 (0x36 bytes), align: 1
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IO_Initial              000050A0        main (main)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000050D6 - 000050F7 (0x22 bytes), align: 1
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           delay_ms                000050D6        DLL_setpoint (application)
                                                   org_ext_broad (decode_scs_next)
                                                   put_s1 (IR)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_advance_slave (application)
                                                   scs_pnl_none_confed_slave (application)
                                                   send_frame_pp_broad (decode_scs_next)
                                                   send_frame_pp_ext_broad (decode_scs_next)
                                                   start_conf (application)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000050F8 - 00005117 (0x20 bytes), align: 1
  Segment part 38.            Intra module refs:   read_adc10bit
                                                   read_adc8bit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           delay_us                000050F8        get_us (application)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           delay_ms_1              
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 40. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           buzzer                  
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005118 - 00005139 (0x22 bytes), align: 1
  Segment part 41.            Intra module refs:   timer0_ovf_ser
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           not_bit                 00005118 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000513A - 00005187 (0x4e bytes), align: 1
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           StrToChar               0000513A        configuration_answer_frame (decode_scs_next)
                                                   configuration_checking (configuration)
                                                   configuration_procedure (decode_scs_next)
                                                   decode_IR (IR)
                                                   decode_SCS (decode_scs)
                                                   decode_id (decode_scs)
                                                   function_service (function_service)
                                                   is_gateway_busy (decode_scs)
                                                   load_parameter (configuration)
                                                   scs_pnl_advance_master (application)
                                                   start_conf (application)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005188 - 000051C7 (0x40 bytes), align: 1
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CharToStr               00005188        KO_answer_frame (decode_scs_next)
                                                   KO_setting_error_frame (decode_scs_next)
                                                   Mode_frame_GR (application)
                                                   PnL_ad_end (application)
                                                   address_setting_error_frame (decode_scs_next)
                                                   configuration_answer_frame (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   decode_IR (IR)
                                                   dimmer_command (application)
                                                   frame_M2_answer (application)
                                                   frame_pp_on_off (function_service)
                                                   frame_presence (function_service)
                                                   frame_send_start_pnl_group_confed (application)
                                                   ir_pnl (IR)
                                                   not_allowed_response (decode_scs_next)
                                                   parameter_all_answer (decode_scs_next)
                                                   parameter_setting_error_answer (decode_scs_next)
                                                   parameter_specified_index_answer (decode_scs_next)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_advance_slave (application)
                                                   send_aux_frame (decode_scs_next)
                                                   send_frame_pp_ext_broad (decode_scs_next)
                                                   send_group_frame (decode_scs_next)
                                                   send_group_pnl_frame (decode_scs_next)
                                                   test_ID_assigned (main)
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000051C8 - 000051F1 (0x2a bytes), align: 1
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           buzzer_ms               000051C8        DLL_setpoint (application)
                                                   Delay_Alert (function_service)
                                                   decode_IR (IR)
                                                   factory_calibration (application)
                                                   load_parameter (configuration)
                                                   main (main)
                                                   scs_calibration (decode_scs)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000051F2 - 000051FD (0xc bytes), align: 1
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_key                 000051F2        button_press_detect (application)
                                                   service_main (application)
                                                   start_conf (application)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000051FE - 000051FF (0x2 bytes), align: 1
  Segment part 46.            Intra module refs:   timer1_ovf_ser::??INTVEC 60
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer1_ovf_ser          000051FE 
               interrupt function
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 47. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_PIR_trigger         
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 48. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_US_trigger          
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 49. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer1_initial          
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005200 - 0000521D (0x1e bytes), align: 1
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           adc_initial             00005200        main (main)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000521E - 00005259 (0x3c bytes), align: 1
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           read_adc10bit           0000521E        get_dl_level (application)
                                                   test_ID_assigned (main)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000525A - 00005289 (0x30 bytes), align: 1
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           read_adc8bit            0000525A        PIR_detect (PIR)
                                                   Ultrasonic_detection (US)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000528A - 00005297 (0xe bytes), align: 1
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           system_reset            0000528A        configuration_procedure (decode_scs_next)
                                                   decode_IR (IR)
                                                   id_frame (decode_scs_next)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_none_confed_master (application)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005298 - 000052AF (0x18 bytes), align: 1
  Segment part 54.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WDT_off                 00005298        main (main)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 25. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 26. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 27. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 28. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000002F (0x30 bytes), align: 1
  Segment part 29. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer2_ovf_ser::??INTVEC 44
                                   0000002C 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000003F (0x40 bytes), align: 1
  Segment part 30. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer1_ovf_ser::??INTVEC 60
                                   0000003C 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000004B (0x4c bytes), align: 1
  Segment part 31. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer0_ovf_ser::??INTVEC 72
                                   00000048 
    -------------------------------------------------------------------------
CSTACK
  Segment part 32. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 33. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Alan\Release\Obj\configuration.r90
  PROGRAM MODULE, NAME : configuration

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           configuration_read      
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           power_up_configuration
                                   
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000052B0 - 00005353 (0xa4 bytes), align: 1
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           remember_parameter      000052B0        configuration_procedure (decode_scs_next)
               calls direct
               stack 1 = 00000000 ( 0000003A )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005354 - 0000550F (0x1bc bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           load_parameter          00005354        main (main)
               calls direct
               stack 1 = 00000000 ( 00000005 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005510 - 00005533 (0x24 bytes), align: 1
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ID_setting              00005510        id_frame (decode_scs_next)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005534 - 000055E9 (0xb6 bytes), align: 1
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           configuration_checking
                                   00005534        configuration_setting_frame (decode_scs_next)
               calls direct
               stack 1 = 00000000 ( 00000007 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000055EA - 000058EB (0x302 bytes), align: 1
  Segment part 16.            Intra module refs:   Segment part 24
                                                   Segment part 25
                                                   remember_parameter
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           write_KO                000055EA        configuration_setting_frame (decode_scs_next)
                                                   decode_IR (IR)
                                                   scs_calibration (decode_scs)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000058EC - 00005BAD (0x2c2 bytes), align: 1
  Segment part 17.            Intra module refs:   Segment part 26
                                                   Segment part 27
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           write_ee_KO             000058EC        configuration_setting_frame (decode_scs_next)
                                                   decode_IR (IR)
                                                   scs_calibration (decode_scs)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           read_KO_none_confed     
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005BAE - 00005D85 (0x1d8 bytes), align: 1
  Segment part 19.            Intra module refs:   Segment part 29
                                                   Segment part 30
                                                   remember_parameter
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           read_KO                 00005BAE        decode_IR (IR)
                                                   parameter_all_answer (decode_scs_next)
                                                   parameter_specified_index_answer (decode_scs_next)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005D86 - 00005E8B (0x106 bytes), align: 1
  Segment part 20.            Intra module refs:   load_parameter
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KO_parameter_initial    00005D86        configuration_procedure (decode_scs_next)
                                                   load_default_advance_parameter (application)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005E8C - 00005FBB (0x130 bytes), align: 1
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KO_parameter_initial_temp
                                   00005E8C        KO_setting_procedure (decode_scs_next)
                                                   factory_default (application)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005FBC - 0000606F (0xb4 bytes), align: 1
  Segment part 22.            Intra module refs:   KO_parameter_initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           write_moudle_parameter
                                   00005FBC 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00006070 - 000060DB (0x6c bytes), align: 1
  Segment part 23.            Intra module refs:   KO_parameter_initial_temp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           write_moudle_parameter_temp
                                   00006070 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 1. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_ID
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 9. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_I>
                                   
    -------------------------------------------------------------------------
SWITCH
  Relative segment, address: CODE 00000328 - 00000371 (0x4a bytes), align: 1
  Segment part 24.            Intra module refs:   write_KO
    -------------------------------------------------------------------------
SWITCH
  Relative segment, address: CODE 00000372 - 000003AB (0x3a bytes), align: 1
  Segment part 25.            Intra module refs:   write_KO
    -------------------------------------------------------------------------
SWITCH
  Relative segment, address: CODE 000003AC - 000003F5 (0x4a bytes), align: 1
  Segment part 26.            Intra module refs:   write_ee_KO
    -------------------------------------------------------------------------
SWITCH
  Relative segment, address: CODE 000003F6 - 0000042F (0x3a bytes), align: 1
  Segment part 27.            Intra module refs:   write_ee_KO
    -------------------------------------------------------------------------
SWITCH
  Segment part 28. NOT NEEDED.
    -------------------------------------------------------------------------
SWITCH
  Relative segment, address: CODE 00000430 - 00000479 (0x4a bytes), align: 1
  Segment part 29.            Intra module refs:   read_KO
    -------------------------------------------------------------------------
SWITCH
  Relative segment, address: CODE 0000047A - 000004B3 (0x3a bytes), align: 1
  Segment part 30.            Intra module refs:   read_KO
    -------------------------------------------------------------------------
NEAR_I
  Segment part 7. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Alan\Release\Obj\decode_scs.r90
  PROGRAM MODULE, NAME : decode_scs

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 000060DC - 00006135 (0x5a bytes), align: 1
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reception_buffer_clear
                                   000060DC        all_reception_buffer_clear (application)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00006136 - 00006287 (0x152 bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           decode_id               00006136        main (main)
               calls direct
               stack 1 = 00000000 ( 00000008 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00006288 - 000068D7 (0x650 bytes), align: 1
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           decode_SCS              00006288        main (main)
               calls direct
               stack 1 = 00000000 ( 00000019 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000068D8 - 00006959 (0x82 bytes), align: 1
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           is_gateway_busy         000068D8        org_ext_broad (decode_scs_next)
                                                   send_frame_pp_broad (decode_scs_next)
                                                   send_frame_pp_ext_broad (decode_scs_next)
                                                   start_conf (application)
               calls direct
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000695A - 00006C41 (0x2e8 bytes), align: 1
  Segment part 16.            Intra module refs:   Segment part 20
                                                   decode_SCS
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           application_decode_short
                                   0000695A 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00006C42 - 00006CE3 (0xa2 bytes), align: 1
  Segment part 17.            Intra module refs:   decode_SCS
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           application_decode_long
                                   00006C42 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           calibration_decode      
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00006CE4 - 00006EF9 (0x216 bytes), align: 1
  Segment part 19.            Intra module refs:   decode_SCS
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           scs_calibration         00006CE4 
               calls direct
               stack 1 = 00000000 ( 00000008 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 1. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000BB8B - 0000BB9B (0x11 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
INITTAB
  Segment part 9. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_I>
                                   
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000BB9C - 0000BBBD (0x22 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 10
    -------------------------------------------------------------------------
SWITCH
  Relative segment, address: CODE 000004B4 - 000004CB (0x18 bytes), align: 1
  Segment part 20.            Intra module refs:   application_decode_short
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 00000299 - 000002A9 (0x11 bytes), align: 0
  Segment part 7.             Intra module refs:   decode_id
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 000002AA - 000002CB (0x22 bytes), align: 0
  Segment part 10.            Intra module refs:   decode_SCS

    *************************************************************************

  FILE NAME : D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Alan\Release\Obj\decode_scs_next.r90
  PROGRAM MODULE, NAME : decode_scs_next

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 33. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           send_frame_pp           
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00006EFA - 00006F65 (0x6c bytes), align: 1
  Segment part 34.            Intra module refs:   send_aux_frame
                                                   send_group_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           send_frame_pp_broad     00006EFA        Mode_frame_GR (application)
                                                   PnL_ad_end (application)
                                                   decode_IR (IR)
                                                   frame_pp_on_off (function_service)
                                                   frame_presence (function_service)
                                                   frame_send_disable_automatic_control (application)
                                                   frame_send_enable_automatic_control (application)
                                                   ir_pnl (IR)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_advance_slave (application)
                                                   scs_pnl_none_confed_master (application)
                                                   scs_pnl_none_confed_slave (application)
               calls direct
               stack 1 = 00000000 ( 00000011 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 35. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           send_frame_pp_ext       
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00006F66 - 00007035 (0xd0 bytes), align: 1
  Segment part 36.            Intra module refs:   KO_answer_frame
                                                   KO_setting_error_frame
                                                   address_answer_frame
                                                   address_setting_error_frame
                                                   configuration_answer_frame
                                                   configuration_procedure
                                                   configuration_receive_answer_frame
                                                   configuration_setting_frame
                                                   diagnostic_frame
                                                   id_frame
                                                   not_allowed_response
                                                   parameter_all_answer
                                                   parameter_request_error_frame
                                                   parameter_setting_error_answer
                                                   parameter_specified_index_answer
                                                   send_group_frame
                                                   send_group_pnl_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           send_frame_pp_ext_broad
                                   00006F66        PnL_ad_end (application)
                                                   decode_IR (IR)
                                                   decode_SCS (decode_scs)
                                                   decode_id (decode_scs)
                                                   frame_M2_answer (application)
                                                   frame_send_end_pnl (application)
                                                   frame_send_group_request (application)
                                                   frame_send_start_pnl_group_confed (application)
                                                   frame_send_start_pnl_none_group_confed (application)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_advance_slave (application)
                                                   service_main (application)
               calls direct
               stack 1 = 00000000 ( 0000001C )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00007036 - 0000709D (0x68 bytes), align: 1
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           org_ext_broad           00007036        dimmer_command (application)
               calls direct
               stack 1 = 00000000 ( 00000019 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000709E - 000074D3 (0x436 bytes), align: 1
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           id_frame                0000709E        decode_SCS (decode_scs)
                                                   decode_id (decode_scs)
               calls direct
               stack 1 = 00000000 ( 00000011 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 000002CC - 000002E5 (0x1a bytes), align: 0
  Segment part 7.             Intra module refs:   id_frame
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 000002E6 - 0000035C (0x77 bytes), align: 0
  Segment part 11.            Intra module refs:   configuration_answer_frame
                                                   configuration_setting_frame
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 0000035D - 0000037E (0x22 bytes), align: 0
  Segment part 14.            Intra module refs:   configuration_receive_answer_frame
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 0000037F - 000003B4 (0x36 bytes), align: 0
  Segment part 16.            Intra module refs:   KO_answer_frame
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 000003B5 - 000003E7 (0x33 bytes), align: 0
  Segment part 28.            Intra module refs:   configuration_procedure
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 000003E8 - 000003F0 (0x9 bytes), align: 0
  Segment part 31.            Intra module refs:   id_frame
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           parameter_set           
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000074D4 - 0000754B (0x78 bytes), align: 1
  Segment part 40.            Intra module refs:   id_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           diagnostic_frame        000074D4        service_main (application)
               calls direct
               stack 1 = 00000000 ( 00000011 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000754C - 00007939 (0x3ee bytes), align: 1
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           configuration_setting_frame
                                   0000754C        decode_SCS (decode_scs)
               calls direct
               stack 1 = 00000000 ( 00000015 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000793A - 00007C75 (0x33c bytes), align: 1
  Segment part 42.            Intra module refs:   configuration_setting_frame
                                                   diagnostic_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           configuration_answer_frame
                                   0000793A        decode_SCS (decode_scs)
               calls direct
               stack 1 = 00000000 ( 00000020 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00007C76 - 00007D4B (0xd6 bytes), align: 1
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           configuration_receive_answer_frame
                                   00007C76        decode_SCS (decode_scs)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00007D4C - 00007F1D (0x1d2 bytes), align: 1
  Segment part 44.            Intra module refs:   address_answer_frame
                                                   address_setting_error_frame
                                                   configuration_answer_frame
                                                   configuration_setting_frame
                                                   ko_answer_all
                                                   parameter_specified_index_answer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KO_answer_frame         00007D4C 
               calls direct
               stack 1 = 00000000 ( 00000018 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00007F1E - 00007F6D (0x50 bytes), align: 1
  Segment part 45.            Intra module refs:   configuration_answer_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           parameter_answer_frame
                                   00007F1E 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00007F6E - 00007FA9 (0x3c bytes), align: 1
  Segment part 46.            Intra module refs:   address_answer_frame
                                                   address_setting_error_frame
                                                   diagnostic_frame
                                                   parameter_all_answer
                                                   parameter_specified_index_answer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           frame_buffer_clear      00007F6E 
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00007FAA - 00007FE7 (0x3e bytes), align: 1
  Segment part 47.            Intra module refs:   parameter_specified_index_answer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           parameter_request_error_frame
                                   00007FAA 
               calls direct
               stack 1 = 00000000 ( 00000011 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00007FE8 - 00008063 (0x7c bytes), align: 1
  Segment part 48.            Intra module refs:   parameter_all_answer
                                                   parameter_specified_index_answer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           not_allowed_response    00007FE8 
               calls direct
               stack 1 = 00000000 ( 00000014 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00008064 - 0000840F (0x3ac bytes), align: 1
  Segment part 49.            Intra module refs:   parameter_answer_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           parameter_all_answer    00008064 
               calls direct
               stack 1 = 00000000 ( 00000018 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00008410 - 00008849 (0x43a bytes), align: 1
  Segment part 50.            Intra module refs:   parameter_answer_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           parameter_specified_index_answer
                                   00008410 
               calls direct
               stack 1 = 00000000 ( 00000018 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000884A - 00008967 (0x11e bytes), align: 1
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           send_aux_frame          0000884A        decode_IR (IR)
               calls direct
               stack 1 = 00000000 ( 00000011 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00008968 - 000089CD (0x66 bytes), align: 1
  Segment part 52.            Intra module refs:   configuration_procedure
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           send_group_pnl_frame    00008968        PnL_ad_end (application)
                                                   decode_IR (IR)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_advance_slave (application)
                                                   scs_pnl_none_confed_master (application)
                                                   scs_pnl_none_confed_slave (application)
               calls direct
               stack 1 = 00000000 ( 00000018 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000089CE - 000089E3 (0x16 bytes), align: 1
  Segment part 53.            Intra module refs:   address_answer_frame
                                                   address_setting_error_frame
                                                   diagnostic_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ko_answer_all           000089CE 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000089E4 - 00008AE1 (0xfe bytes), align: 1
  Segment part 54.            Intra module refs:   configuration_answer_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           address_answer_frame    000089E4 
               calls direct
               stack 1 = 00000000 ( 00000013 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00008AE2 - 00008BE3 (0x102 bytes), align: 1
  Segment part 55.            Intra module refs:   configuration_setting_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           address_setting_error_frame
                                   00008AE2 
               calls direct
               stack 1 = 00000000 ( 00000016 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00008BE4 - 00008C23 (0x40 bytes), align: 1
  Segment part 56.            Intra module refs:   send_aux_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dimmer_convert          00008BE4 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00008C24 - 00008CCD (0xaa bytes), align: 1
  Segment part 57.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           send_group_frame        00008C24        decode_IR (IR)
               calls direct
               stack 1 = 00000000 ( 0000001E )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00008CCE - 00008D99 (0xcc bytes), align: 1
  Segment part 58.            Intra module refs:   configuration_setting_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           write_parameter_scenario
                                   00008CCE 
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00008D9A - 00008E9F (0x106 bytes), align: 1
  Segment part 59.            Intra module refs:   configuration_setting_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           parameter_setting_error_answer
                                   00008D9A 
               calls direct
               stack 1 = 00000000 ( 00000018 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00008EA0 - 00009051 (0x1b2 bytes), align: 1
  Segment part 60.            Intra module refs:   configuration_setting_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KO_setting_procedure    00008EA0 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009052 - 000098E7 (0x896 bytes), align: 1
  Segment part 61.            Intra module refs:   Segment part 65
                                                   configuration_setting_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           configuration_procedure
                                   00009052 
               calls direct
               stack 1 = 00000000 ( 0000004E )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000098E8 - 00009943 (0x5c bytes), align: 1
  Segment part 62.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aux_procedure           000098E8        decode_SCS (decode_scs)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009944 - 000099A3 (0x60 bytes), align: 1
  Segment part 63.            Intra module refs:   aux_procedure
                                                   configuration_procedure
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           scenario_remove         00009944 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000099A4 - 00009A3B (0x98 bytes), align: 1
  Segment part 64.            Intra module refs:   KO_setting_procedure
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KO_setting_error_frame
                                   000099A4 
               calls direct
               stack 1 = 00000000 ( 00000016 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 1. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000BBBE - 0000BBD7 (0x1a bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
INITTAB
  Segment part 9. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_I>
                                   
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000BBD8 - 0000BC4E (0x77 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 11
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000BC4F - 0000BC70 (0x22 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000BC71 - 0000BCA6 (0x36 bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 16
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000BCA7 - 0000BCD9 (0x33 bytes), align: 0
  Segment part 29.            Intra module refs:   Segment part 28
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000BCDA - 0000BCE2 (0x9 bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 31
    -------------------------------------------------------------------------
SWITCH
  Relative segment, address: CODE 000004CC - 000004F3 (0x28 bytes), align: 1
  Segment part 65.            Intra module refs:   configuration_procedure
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000000AF - 000000BF (0x11 bytes), align: 0
  Segment part 10.            Intra module refs:   diagnostic_frame
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000000C0 - 000000D0 (0x11 bytes), align: 0
  Segment part 13.            Intra module refs:   configuration_answer_frame
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000000D1 - 000000E1 (0x11 bytes), align: 0
  Segment part 18.            Intra module refs:   parameter_request_error_frame
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000000E2 - 000000F2 (0x11 bytes), align: 0
  Segment part 19.            Intra module refs:   not_allowed_response
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000000F3 - 00000103 (0x11 bytes), align: 0
  Segment part 20.            Intra module refs:   parameter_all_answer
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000104 - 00000114 (0x11 bytes), align: 0
  Segment part 21.            Intra module refs:   parameter_specified_index_answer
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000115 - 0000011D (0x9 bytes), align: 0
  Segment part 22.            Intra module refs:   send_aux_frame
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000011E - 0000012E (0x11 bytes), align: 0
  Segment part 23.            Intra module refs:   send_group_pnl_frame
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000012F - 0000013F (0x11 bytes), align: 0
  Segment part 24.            Intra module refs:   address_answer_frame
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000140 - 00000150 (0x11 bytes), align: 0
  Segment part 25.            Intra module refs:   address_setting_error_frame
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000151 - 0000016A (0x1a bytes), align: 0
  Segment part 26.            Intra module refs:   send_group_frame
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000016B - 0000017B (0x11 bytes), align: 0
  Segment part 27.            Intra module refs:   parameter_setting_error_answer
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000017C - 0000018C (0x11 bytes), align: 0
  Segment part 30.            Intra module refs:   KO_setting_error_frame

    *************************************************************************

  FILE NAME : D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Alan\Release\Obj\function_modality.r90
  PROGRAM MODULE, NAME : function_modality

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           modality_service        
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           modality_0_initial      
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           modality_0              
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           modality_1              
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           modality_2              
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           modality_3              
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           modality_4              
               not allocated function
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 1. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 6. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Alan\Release\Obj\function_service.r90
  PROGRAM MODULE, NAME : function_service

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00009A3C - 00009A7D (0x42 bytes), align: 1
  Segment part 7.             Intra module refs:   Function_KO128
                                                   Function_KO165
                                                   frame_OFF_send
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           frame_presence          00009A3C 
               calls direct
               stack 1 = 00000000 ( 0000000C )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009A7E - 00009B07 (0x8a bytes), align: 1
  Segment part 8.             Intra module refs:   frame_OFF_send
                                                   frame_ON_send
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           frame_pp_on_off         00009A7E 
               calls direct
               stack 1 = 00000000 ( 0000000B )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009B08 - 00009B3B (0x34 bytes), align: 1
  Segment part 9.             Intra module refs:   Call_detect_delay
                                                   Check_SCS_received
                                                   Function_KO128
                                                   Function_KO165
                                                   WT_20s_detect
                                                   _Initial_state
                                                   _Maintain_state
                                                   _ReTrigger_State
                                                   _Standby_state
                                                   function_check_status
                                                   function_service_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Start_Time_Delay        00009B08 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009B3C - 00009B6F (0x34 bytes), align: 1
  Segment part 10.            Intra module refs:   Check_SCS_received
                                                   _Maintain_state
                                                   _ReTrigger_State
                                                   _Standby_state
                                                   function_check_status
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Stop_allTimer           00009B3C 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009B70 - 00009BC1 (0x52 bytes), align: 1
  Segment part 11.            Intra module refs:   Check_SCS_received
                                                   ON_takeline
                                                   _Initial_state
                                                   function_check_status
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Call_detect_delay       00009B70 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009BC2 - 00009C73 (0xb2 bytes), align: 1
  Segment part 12.            Intra module refs:   Check_SCS_received
                                                   _Maintain_state
                                                   _Standby_state
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WT_20s_detect           00009BC2 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009C74 - 00009CA1 (0x2e bytes), align: 1
  Segment part 13.            Intra module refs:   _Initial_state
                                                   _Maintain_state
                                                   _ReTrigger_State
                                                   _Standby_state
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GS_presence_send        00009C74 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009CA2 - 00009D01 (0x60 bytes), align: 1
  Segment part 14.            Intra module refs:   Check_SCS_received
                                                   ON_takeline
                                                   _Initial_state
                                                   _ReTrigger_State
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           frame_ON_send           00009CA2        decode_IR (IR)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009D02 - 00009D7B (0x7a bytes), align: 1
  Segment part 15.            Intra module refs:   OFF_takeline
                                                   _Initial_state
                                                   _Maintain_state
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           frame_OFF_send          00009D02        decode_IR (IR)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009D7C - 00009DED (0x72 bytes), align: 1
  Segment part 16.            Intra module refs:   _Maintain_state
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Delay_Alert             00009D7C 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009DEE - 00009E37 (0x4a bytes), align: 1
  Segment part 17.            Intra module refs:   _Initial_state
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ON_takeline             00009DEE 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009E38 - 00009E5F (0x28 bytes), align: 1
  Segment part 18.            Intra module refs:   _Initial_state
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OFF_takeline            00009E38 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009E60 - 00009F83 (0x124 bytes), align: 1
  Segment part 19.            Intra module refs:   Function_LM_GR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           function_check_status   00009E60 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009F84 - 0000A4D1 (0x54e bytes), align: 1
  Segment part 20.            Intra module refs:   function_check_status
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Check_SCS_received      00009F84 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A4D2 - 0000A589 (0xb8 bytes), align: 1
  Segment part 21.            Intra module refs:   Function_KO119
                                                   Function_KO128
                                                   Function_KO165
                                                   Function_KO168
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           occupancy_detect        0000A4D2 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A58A - 0000A6C5 (0x13c bytes), align: 1
  Segment part 22.            Intra module refs:   Function_LM_GR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Initial_state          0000A58A 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A6C6 - 0000A7F5 (0x130 bytes), align: 1
  Segment part 23.            Intra module refs:   Function_LM_GR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Maintain_state         0000A6C6 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A7F6 - 0000A85F (0x6a bytes), align: 1
  Segment part 24.            Intra module refs:   Function_LM_GR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ReTrigger_State        0000A7F6 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A860 - 0000A8EB (0x8c bytes), align: 1
  Segment part 25.            Intra module refs:   Function_LM_GR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Standby_state          0000A860 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A8EC - 0000A97F (0x94 bytes), align: 1
  Segment part 26.            Intra module refs:   Function_KO119
                                                   Function_KO168
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Function_LM_GR          0000A8EC 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A980 - 0000A9A1 (0x22 bytes), align: 1
  Segment part 27.            Intra module refs:   function_service
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Function_KO119          0000A980 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A9A2 - 0000AA59 (0xb8 bytes), align: 1
  Segment part 28.            Intra module refs:   function_service
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Function_KO128          0000A9A2 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000AA5A - 0000AA5B (0x2 bytes), align: 1
  Segment part 29.            Intra module refs:   function_service
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Function_KO166          0000AA5A 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Function_KO164          
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000AA5C - 0000AAA9 (0x4e bytes), align: 1
  Segment part 31.            Intra module refs:   function_service
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Function_KO165          0000AA5C 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000AAAA - 0000AAB7 (0xe bytes), align: 1
  Segment part 32.            Intra module refs:   function_service
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Function_KO168          0000AAAA 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000AAB8 - 0000AC1D (0x166 bytes), align: 1
  Segment part 33.            Intra module refs:   function_service
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           function_service_init   0000AAB8 
               calls direct
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000AC1E - 0000ACB3 (0x96 bytes), align: 1
  Segment part 34.            Intra module refs:   Segment part 36
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           function_service        0000AC1E        service_main (application)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 35. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           check_frame_received_maintain
                                   
               not allocated function
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 1. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
SWITCH
  Relative segment, address: CODE 000004F4 - 00000507 (0x14 bytes), align: 1
  Segment part 36.            Intra module refs:   function_service

    *************************************************************************

  FILE NAME : D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Alan\Release\Obj\global_variable.r90
  PROGRAM MODULE, NAME : global_variable

  SEGMENTS IN THE MODULE
  ======================
NEAR_Z
  Relative segment, address: DATA 00000448 - 00000448 (0x1 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           g_timer2_flag           00000448        timer2_ovf_ser (board)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000449 - 00000449 (0x1 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           g_temp                  00000449        read_adc10bit (board)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 0000044A - 00000539 (0xf0 bytes), align: 0
  Segment part 10.            Intra module refs:   global_variable_initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           scs_frame               0000044A        all_reception_buffer_clear (application)
                                                   decode_SCS (decode_scs)
                                                   decode_id (decode_scs)
                                                   frame_buffer_clear (decode_scs_next)
                                                   is_gateway_busy (decode_scs)
                                                   manual_reception_buffer_clear (application)
                                                   usart0_rx_ser (usart)
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           g_configurator          
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 0000053A - 0000053F (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Configurators           0000053A        configuration_answer_frame (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   configurator_to_KO (application)
                                                   remember_parameter (configuration)
                                                   start_conf (application)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000540 - 00000571 (0x32 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KO_conf                 00000540        Call_detect_delay (function_service)
                                                   Check_SCS_received (function_service)
                                                   Delay_Alert (function_service)
                                                   Dimmer_regulation (application)
                                                   Function_LM_GR (function_service)
                                                   GS_presence_send (function_service)
                                                   KO_parameter_initial_temp (configuration)
                                                   Light_regulation (application)
                                                   Mode_frame_GR (application)
                                                   ON_takeline (function_service)
                                                   PIR_SENSE_SET (PIR)
                                                   PnL_ad_end (application)
                                                   PofL_calc (application)
                                                   Stop_allTimer (function_service)
                                                   US_SENSE_SET (US)
                                                   _Initial_state (function_service)
                                                   _Maintain_state (function_service)
                                                   _ReTrigger_State (function_service)
                                                   _Standby_state (function_service)
                                                   application_decode_long (decode_scs)
                                                   application_decode_short (decode_scs)
                                                   configuration_answer_frame (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   configuration_receive_answer_frame (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   daylight_service (application)
                                                   decode_IR (IR)
                                                   decode_SCS (decode_scs)
                                                   dimmer_command (application)
                                                   factory_default (application)
                                                   frame_M2_answer (application)
                                                   frame_OFF_send (function_service)
                                                   frame_ON_send (function_service)
                                                   frame_pp_on_off (function_service)
                                                   frame_presence (function_service)
                                                   frame_send_start_pnl_group_confed (application)
                                                   function_check_status (function_service)
                                                   function_service (function_service)
                                                   function_service_init (function_service)
                                                   get_dl_level (application)
                                                   load_default_advance_parameter (application)
                                                   load_parameter (configuration)
                                                   occupancy_detect (function_service)
                                                   read_KO (configuration)
                                                   real_daylight_calc (application)
                                                   remember_parameter (configuration)
                                                   scs_calibration (decode_scs)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_advance_slave (application)
                                                   scs_pnl_none_confed_master (application)
                                                   scs_pnl_none_confed_slave (application)
                                                   send_group_frame (decode_scs_next)
                                                   service_main (application)
                                                   start_conf (application)
                                                   write_KO (configuration)
                                                   write_moudle_parameter_temp (configuration)
    -------------------------------------------------------------------------
NEAR_I
  Segment part 32. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           daylight_motion         
    -------------------------------------------------------------------------
NEAR_I
  Segment part 35. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           daylight                
    -------------------------------------------------------------------------
NEAR_I
  Segment part 37. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           motion                  
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 00000000 - 00000000 (0x1 bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           g_ns_index              00000000        decode_IR (IR)
                                                   factory_default (application)
                                                   ir_pnl (IR)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 00000001 - 00000002 (0x2 bytes), align: 0
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ee_flags                00000001        configuration_procedure (decode_scs_next)
                                                   decode_IR (IR)
                                                   factory_default (application)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_none_confed_master (application)
                                                   start_conf (application)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 00000003 - 00000004 (0x2 bytes), align: 0
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ee_variable             00000003        configuration_procedure (decode_scs_next)
                                                   decode_IR (IR)
                                                   scs_pnl_advance_master (application)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 00000005 - 00000008 (0x4 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ee_KO_last              00000005        configuration_procedure (decode_scs_next)
                                                   load_default_advance_parameter (application)
                                                   load_parameter (configuration)
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 000003F1 - 000003F4 (0x4 bytes), align: 0
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           flash_KO                000003F1        configuration_procedure (decode_scs_next)
                                                   factory_default (application)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 00000009 - 0000000C (0x4 bytes), align: 0
  Segment part 55.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ee_KO                   00000009        configuration_procedure (decode_scs_next)
                                                   factory_default (application)
                                                   load_default_advance_parameter (application)
                                                   load_parameter (configuration)
                                                   remember_parameter (configuration)
                                                   start_conf (application)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 0000000D - 0000001E (0x12 bytes), align: 0
  Segment part 56.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ee_parameter            0000000D        configuration_answer_frame (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   decode_IR (IR)
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000018D - 000001BE (0x32 bytes), align: 0
  Segment part 57.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           flash_KO_168            0000018D        KO_parameter_initial (configuration)
                                                   KO_parameter_initial_temp (configuration)
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000001BF - 000001F0 (0x32 bytes), align: 0
  Segment part 58.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           flash_KO_166            000001BF        KO_parameter_initial (configuration)
                                                   KO_parameter_initial_temp (configuration)
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000001F1 - 00000222 (0x32 bytes), align: 0
  Segment part 59.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           flash_KO_119            000001F1        KO_parameter_initial (configuration)
                                                   KO_parameter_initial_temp (configuration)
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000223 - 00000254 (0x32 bytes), align: 0
  Segment part 60.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           flash_KO_128            00000223        KO_parameter_initial (configuration)
                                                   KO_parameter_initial_temp (configuration)
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000255 - 00000286 (0x32 bytes), align: 0
  Segment part 61.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           flash_KO_165            00000255        KO_parameter_initial (configuration)
                                                   KO_parameter_initial_temp (configuration)
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000287 - 000002B8 (0x32 bytes), align: 0
  Segment part 62.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           flash_KO_515            00000287        KO_parameter_initial_temp (configuration)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 0000001F - 00000024 (0x6 bytes), align: 0
  Segment part 63.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ee_configurators        0000001F        configuration_procedure (decode_scs_next)
                                                   configurator_to_KO (application)
                                                   factory_default (application)
                                                   load_parameter (configuration)
                                                   remember_parameter (configuration)
                                                   start_conf (application)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 00000025 - 00000056 (0x32 bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ee_KO_conf              00000025        KO_parameter_initial (configuration)
                                                   configuration_procedure (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   configurator_to_KO (application)
                                                   decode_IR (IR)
                                                   factory_default (application)
                                                   load_default_advance_parameter (application)
                                                   load_parameter (configuration)
                                                   remember_parameter (configuration)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_advance_slave (application)
                                                   scs_pnl_none_confed_master (application)
                                                   scs_pnl_none_confed_slave (application)
                                                   send_frame_pp_ext_broad (decode_scs_next)
                                                   start_conf (application)
                                                   write_ee_KO (configuration)
                                                   write_moudle_parameter (configuration)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 00000057 - 0000005F (0x9 bytes), align: 0
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ee_ID                   00000057        ID_setting (configuration)
                                                   decode_IR (IR)
                                                   diagnostic_frame (decode_scs_next)
                                                   id_frame (decode_scs_next)
                                                   start_conf (application)
                                                   test_ID_assigned (main)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 00000060 - 00000066 (0x7 bytes), align: 0
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ee_product_information
                                   00000060        configuration_procedure (decode_scs_next)
                                                   factory_calibration (application)
                                                   factory_default (application)
                                                   id_frame (decode_scs_next)
                                                   load_parameter (configuration)
                                                   remember_parameter (configuration)
                                                   scs_pnl_none_confed_master (application)
                                                   scs_pnl_none_confed_slave (application)
                                                   start_conf (application)
                                                   test_ID_assigned (main)
                                                   write_moudle_parameter (configuration)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 00000067 - 00000067 (0x1 bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ee_scenario_index       00000067        factory_default (application)
                                                   scenario_remove (decode_scs_next)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 00000068 - 000000D7 (0x70 bytes), align: 0
  Segment part 68.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ee_scenario             00000068        KO_answer_frame (decode_scs_next)
                                                   address_answer_frame (decode_scs_next)
                                                   address_setting_error_frame (decode_scs_next)
                                                   aux_procedure (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   decode_IR (IR)
                                                   factory_default (application)
                                                   ir_pnl (IR)
                                                   is_scenario_full (IR)
                                                   led_blinking_normal (application)
                                                   parameter_all_answer (decode_scs_next)
                                                   parameter_setting_error_answer (decode_scs_next)
                                                   parameter_specified_index_answer (decode_scs_next)
                                                   scenario_remove (decode_scs_next)
                                                   send_aux_frame (decode_scs_next)
                                                   start_conf (application)
                                                   timer0_ovf_ser (board)
                                                   write_parameter_scenario (decode_scs_next)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 000000D8 - 000000DF (0x8 bytes), align: 0
  Segment part 69.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ee_factory_variable     000000D8        factory_calibration (application)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 000000E0 - 000000E1 (0x2 bytes), align: 0
  Segment part 70.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ee_main_state           000000E0        factory_calibration (application)
                                                   load_parameter (configuration)
                                                   scs_calibration (decode_scs)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 000000E2 - 000000E5 (0x4 bytes), align: 0
  Segment part 72.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ee_slope                000000E2        factory_calibration (application)
                                                   load_parameter (configuration)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 000000E6 - 000000ED (0x8 bytes), align: 0
  Segment part 73.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           eep_setpoint            000000E6        DLL_setpoint (application)
                                                   daylight_set_init (application)
    -------------------------------------------------------------------------
EEPROM_I
  Segment part 74. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           eep_factor              
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 000000EE - 000000EE (0x1 bytes), align: 0
  Segment part 75.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           eep_M2_hour             000000EE        decode_SCS (decode_scs)
                                                   frame_M2_answer (application)
                                                   function_service_init (function_service)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 000000EF - 000000EF (0x1 bytes), align: 0
  Segment part 76.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           eep_M2_min              000000EF        decode_SCS (decode_scs)
                                                   frame_M2_answer (application)
                                                   function_service_init (function_service)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 000000F0 - 000000F0 (0x1 bytes), align: 0
  Segment part 77.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           eep_M2_sec              000000F0        decode_SCS (decode_scs)
                                                   frame_M2_answer (application)
                                                   function_service_init (function_service)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 000000F1 - 000000F1 (0x1 bytes), align: 0
  Segment part 78.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           eep_M2_sens             000000F1        decode_SCS (decode_scs)
                                                   frame_M2_answer (application)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000572 - 000005A8 (0x37 bytes), align: 0
  Segment part 14.            Intra module refs:   global_variable_initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IR_reception            00000572        decode_IR (IR)
                                                   ir_buffer_clear (IR)
                                                   send_aux_frame (decode_scs_next)
                                                   send_group_frame (decode_scs_next)
                                                   usart1_rx_ser (IR)
           Sensor_mode             00000584        Actuator_regulation (application)
                                                   Check_SCS_received (function_service)
                                                   Function_LM_GR (function_service)
                                                   Mode_frame_GR (application)
                                                   OFF_takeline (function_service)
                                                   ON_takeline (function_service)
                                                   _Initial_state (function_service)
                                                   _Maintain_state (function_service)
                                                   _ReTrigger_State (function_service)
                                                   _Standby_state (function_service)
                                                   application_decode_short (decode_scs)
                                                   configuration_receive_answer_frame (decode_scs_next)
                                                   daylight_service (application)
                                                   decode_IR (IR)
                                                   dimmer_command (application)
                                                   frame_pp_on_off (function_service)
                                                   function_check_status (function_service)
                                                   function_service (function_service)
                                                   function_service_init (function_service)
                                                   occupancy_detect (function_service)
                                                   real_daylight_calc (application)
                                                   scs_calibration (decode_scs)
                                                   timer0_ovf_ser (board)
           flags                   00000595        Dimmer_regulation (application)
                                                   Function_KO128 (function_service)
                                                   Function_KO165 (function_service)
                                                   KO_setting_procedure (decode_scs_next)
                                                   address_setting_error_frame (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   decode_IR (IR)
                                                   decode_SCS (decode_scs)
                                                   diagnostic_frame (decode_scs_next)
                                                   frame_ON_send (function_service)
                                                   id_frame (decode_scs_next)
                                                   ir_pnl (IR)
                                                   led_blinking_normal (application)
                                                   load_parameter (configuration)
                                                   main (main)
                                                   occupancy_detect (function_service)
                                                   parameter_setting_error_answer (decode_scs_next)
                                                   put_s1 (IR)
                                                   scs_pnl_advance_slave (application)
                                                   scs_pnl_none_confed_master (application)
                                                   scs_pnl_none_confed_slave (application)
                                                   service_main (application)
                                                   start_conf (application)
                                                   test_ID_assigned (main)
                                                   timer0_ovf_ser (board)
           flags_muti_step         000005A8        KO_setting_procedure (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
           frame_extended_type     000005A3 
           key_result              000005A5        button_press_detect (application)
                                                   configuration_procedure (decode_scs_next)
                                                   decode_IR (IR)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_advance_slave (application)
                                                   scs_pnl_none_confed_master (application)
                                                   scs_pnl_none_confed_slave (application)
                                                   service_main (application)
           state                   0000058E        PnL_NONE_end (application)
                                                   PnL_ad_end (application)
                                                   configuration_answer_frame (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   configuration_receive_answer_frame (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   decode_IR (IR)
                                                   decode_SCS (decode_scs)
                                                   decode_id (decode_scs)
                                                   factory_calibration (application)
                                                   id_frame (decode_scs_next)
                                                   ir_pnl (IR)
                                                   led_blinking_normal (application)
                                                   load_parameter (configuration)
                                                   main (main)
                                                   parameter_answer_frame (decode_scs_next)
                                                   scs_calibration (decode_scs)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_advance_slave (application)
                                                   scs_pnl_none_confed_master (application)
                                                   scs_pnl_none_confed_slave (application)
                                                   service_main (application)
                                                   timer0_ovf_ser (board)
           us_result               000005A7        Ultrasonic_detection (US)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000005A9 - 000005B9 (0x11 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           g_reception_buffer      000005A9        KO_setting_procedure (decode_scs_next)
                                                   address_answer_frame (decode_scs_next)
                                                   address_setting_error_frame (decode_scs_next)
                                                   aux_procedure (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   decode_SCS (decode_scs)
                                                   decode_id (decode_scs)
                                                   id_frame (decode_scs_next)
                                                   parameter_request_error_frame (decode_scs_next)
                                                   parameter_setting_error_answer (decode_scs_next)
                                                   parameter_specified_index_answer (decode_scs_next)
                                                   reception_buffer_clear (decode_scs)
                                                   send_frame_pp_ext_broad (decode_scs_next)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000005BA - 000005C1 (0x8 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           g_asc_reception_buffer
                                   000005BA        KO_answer_frame (decode_scs_next)
                                                   KO_setting_procedure (decode_scs_next)
                                                   address_answer_frame (decode_scs_next)
                                                   address_setting_error_frame (decode_scs_next)
                                                   application_decode_long (decode_scs)
                                                   aux_procedure (decode_scs_next)
                                                   configuration_answer_frame (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   configuration_receive_answer_frame (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   decode_SCS (decode_scs)
                                                   decode_id (decode_scs)
                                                   factory_calibration (application)
                                                   ir_pnl (IR)
                                                   ko_answer_all (decode_scs_next)
                                                   parameter_all_answer (decode_scs_next)
                                                   parameter_answer_frame (decode_scs_next)
                                                   parameter_setting_error_answer (decode_scs_next)
                                                   parameter_specified_index_answer (decode_scs_next)
                                                   reception_buffer_clear (decode_scs)
                                                   scs_calibration (decode_scs)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_advance_slave (application)
                                                   scs_pnl_none_confed_master (application)
                                                   scs_pnl_none_confed_slave (application)
                                                   write_parameter_scenario (decode_scs_next)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000005C2 - 000005C9 (0x8 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           g_short_buffer          000005C2        application_decode_short (decode_scs)
                                                   decode_SCS (decode_scs)
                                                   reception_buffer_clear (decode_scs)
                                                   scs_pnl_advance_master (application)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000005CA - 000005CD (0x4 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           g_asc_short_buffer      000005CA        application_decode_short (decode_scs)
                                                   decode_SCS (decode_scs)
                                                   reception_buffer_clear (decode_scs)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_none_confed_master (application)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000005CE - 000005DB (0xe bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           g_ir_reception          000005CE        decode_IR (IR)
                                                   ir_pnl (IR)
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           product_info            
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           flag_timer              
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000005DC - 00000612 (0x37 bytes), align: 0
  Segment part 22.            Intra module refs:   global_variable_initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DLL                     000005DC        Actuator_regulation (application)
                                                   Check_SCS_received (function_service)
                                                   DLL_setpoint (application)
                                                   Dimmer_regulation (application)
                                                   Function_KO119 (function_service)
                                                   Function_KO128 (function_service)
                                                   PofL_calc (application)
                                                   Stop_allTimer (function_service)
                                                   _Initial_state (function_service)
                                                   application_decode_long (decode_scs)
                                                   application_decode_short (decode_scs)
                                                   configuration_answer_frame (decode_scs_next)
                                                   daylight_service (application)
                                                   daylight_set_init (application)
                                                   decode_IR (IR)
                                                   decode_SCS (decode_scs)
                                                   factory_calibration (application)
                                                   frame_M2_answer (application)
                                                   frame_OFF_send (function_service)
                                                   frame_ON_send (function_service)
                                                   get_dl_level (application)
                                                   load_parameter (configuration)
                                                   real_daylight_calc (application)
                                                   scs_calibration (decode_scs)
                                                   timer0_ovf_ser (board)
                                                   write_KO (configuration)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000613 - 00000741 (0x12f bytes), align: 0
  Segment part 23.            Intra module refs:   global_variable_initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Time_delay              00000613        Actuator_regulation (application)
                                                   Call_detect_delay (function_service)
                                                   Check_SCS_received (function_service)
                                                   Delay_Alert (function_service)
                                                   Dimmer_regulation (application)
                                                   Dled_light_on_ms (application)
                                                   Function_KO128 (function_service)
                                                   Function_KO165 (function_service)
                                                   Mode_frame_GR (application)
                                                   OFF_takeline (function_service)
                                                   ON_takeline (function_service)
                                                   Start_Time_Delay (function_service)
                                                   Stop_allTimer (function_service)
                                                   WT_20s_detect (function_service)
                                                   _Initial_state (function_service)
                                                   _Maintain_state (function_service)
                                                   _ReTrigger_State (function_service)
                                                   _Standby_state (function_service)
                                                   application_decode_long (decode_scs)
                                                   application_decode_short (decode_scs)
                                                   button_press_detect (application)
                                                   buzzer_ms (board)
                                                   configuration_setting_frame (decode_scs_next)
                                                   decode_IR (IR)
                                                   decode_id (decode_scs)
                                                   frame_pp_on_off (function_service)
                                                   function_check_status (function_service)
                                                   function_service_init (function_service)
                                                   get_us (application)
                                                   ir_pnl (IR)
                                                   key_time_clear (application)
                                                   led_blinking (application)
                                                   led_blinking_disable (application)
                                                   led_blinking_ms (application)
                                                   led_blinking_stage2_initial (application)
                                                   occupancy_detect (function_service)
                                                   regulation_timer_initial (application)
                                                   relay_timer_initial (application)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_advance_slave (application)
                                                   scs_pnl_none_confed_master (application)
                                                   scs_pnl_none_confed_slave (application)
                                                   service_main (application)
                                                   start_conf (application)
                                                   timer0_ovf_ser (board)
                                                   timer_IR_initial (IR)
                                                   timer_dimmer_initial (application)
                                                   timer_flex2_initial (application)
                                                   timer_flex_initial (application)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000742 - 00000745 (0x4 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pir                     00000742        PIR_SENSE_SET (PIR)
                                                   PIR_detect (PIR)
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 25. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pir_total               
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 26. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           us_total                
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000746 - 00000747 (0x2 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           motion_total            00000746        occupancy_detect (function_service)
                                                   timer0_ovf_ser (board)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000748 - 00000748 (0x1 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           US_detection_en         00000748        Ultrasonic_detection (US)
                                                   get_us (application)
                                                   motion_detect (application)
                                                   occupancy_detect (function_service)
                                                   timer0_ovf_ser (board)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000749 - 0000074C (0x4 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           modality0_delay_ms      00000749        timer0_ovf_ser (board)
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           g_key_value             
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 31. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           g_virtual_basci_configuration_flag
                                   
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 0000074D - 0000074D (0x1 bytes), align: 0
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PIR_detection_en        0000074D        PIR_detect (PIR)
                                                   occupancy_detect (function_service)
                                                   timer0_ovf_ser (board)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 0000074E - 0000075B (0xe bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tx1_buffer              0000074E        put_c1 (IR)
                                                   usart_tx_ser (IR)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 0000075C - 0000075C (0x1 bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tx1_wr_index            0000075C        put_c1 (IR)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 0000075D - 0000075D (0x1 bytes), align: 0
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tx1_rd_index            0000075D        usart_tx_ser (IR)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 0000075E - 0000075E (0x1 bytes), align: 0
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tx1_counter             0000075E        put_c1 (IR)
                                                   usart_tx_ser (IR)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 0000075F - 00000765 (0x7 bytes), align: 0
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           product_information     0000075F        KO_answer_frame (decode_scs_next)
                                                   KO_setting_procedure (decode_scs_next)
                                                   address_answer_frame (decode_scs_next)
                                                   address_setting_error_frame (decode_scs_next)
                                                   configuration_answer_frame (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   decode_IR (IR)
                                                   decode_SCS (decode_scs)
                                                   id_frame (decode_scs_next)
                                                   led_blinking_normal (application)
                                                   load_parameter (configuration)
                                                   main (main)
                                                   occupancy_detect (function_service)
                                                   parameter_all_answer (decode_scs_next)
                                                   parameter_setting_error_answer (decode_scs_next)
                                                   parameter_specified_index_answer (decode_scs_next)
                                                   remember_parameter (configuration)
                                                   scs_pnl_none_confed_master (application)
                                                   scs_pnl_none_confed_slave (application)
                                                   send_frame_pp_ext_broad (decode_scs_next)
                                                   service_main (application)
                                                   test_ID_assigned (main)
                                                   timer0_ovf_ser (board)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000766 - 0000076C (0x7 bytes), align: 0
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           temp_product_information
                                   00000766        KO_setting_procedure (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   write_moudle_parameter_temp (configuration)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 0000076D - 00000770 (0x4 bytes), align: 0
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KO                      0000076D        KO_answer_frame (decode_scs_next)
                                                   KO_parameter_initial (configuration)
                                                   KO_parameter_initial_temp (configuration)
                                                   KO_setting_procedure (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   factory_default (application)
                                                   function_service (function_service)
                                                   load_default_advance_parameter (application)
                                                   load_parameter (configuration)
                                                   not_allowed_response (decode_scs_next)
                                                   parameter_specified_index_answer (decode_scs_next)
                                                   read_KO (configuration)
                                                   remember_parameter (configuration)
                                                   write_KO (configuration)
                                                   write_ee_KO (configuration)
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 49. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           parameters              
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000771 - 00000784 (0x14 bytes), align: 0
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           temp_variable           00000771        KO_setting_procedure (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   decode_IR (IR)
                                                   scs_pnl_advance_slave (application)
                                                   scs_pnl_none_confed_master (application)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000785 - 00000788 (0x4 bytes), align: 0
  Segment part 71.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           g_slope                 00000785        Function_KO128 (function_service)
                                                   factory_calibration (application)
                                                   load_parameter (configuration)
                                                   real_daylight_calc (application)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000789 - 0000078C (0x4 bytes), align: 0
  Segment part 79.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           M2_timer                00000789        decode_SCS (decode_scs)
                                                   function_service_init (function_service)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 0000078D - 00000790 (0x4 bytes), align: 0
  Segment part 80.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           M2_timer_count          0000078D        timer0_ovf_ser (board)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000791 - 00000791 (0x1 bytes), align: 0
  Segment part 81.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           M2_type                 00000791        decode_SCS (decode_scs)
                                                   frame_M2_answer (application)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000792 - 00000792 (0x1 bytes), align: 0
  Segment part 82.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           motion_resutl           00000792        occupancy_detect (function_service)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000793 - 00000794 (0x2 bytes), align: 0
  Segment part 83.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           set_point               00000793        Actuator_regulation (application)
                                                   Check_SCS_received (function_service)
                                                   Dimmer_regulation (application)
                                                   Function_KO119 (function_service)
                                                   _Initial_state (function_service)
                                                   daylight_service (application)
                                                   decode_IR (IR)
                                                   function_service_init (function_service)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000795 - 00000798 (0x4 bytes), align: 0
  Segment part 84.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Delay_Time_set          00000795        Call_detect_delay (function_service)
                                                   Check_SCS_received (function_service)
                                                   Start_Time_Delay (function_service)
                                                   WT_20s_detect (function_service)
                                                   configuration_setting_frame (decode_scs_next)
                                                   decode_IR (IR)
                                                   function_service_init (function_service)
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 85. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           during_on_cnt           
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 86. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           during_off_cnt          
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000799 - 00000799 (0x1 bytes), align: 0
  Segment part 87.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Walk_Through_flag       00000799        Call_detect_delay (function_service)
                                                   Check_SCS_received (function_service)
                                                   Function_LM_GR (function_service)
                                                   WT_20s_detect (function_service)
                                                   _Maintain_state (function_service)
                                                   function_check_status (function_service)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 0000079A - 0000079A (0x1 bytes), align: 0
  Segment part 88.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           First_detection_enable
                                   0000079A        Call_detect_delay (function_service)
                                                   Check_SCS_received (function_service)
                                                   _Maintain_state (function_service)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 0000079B - 0000079F (0x5 bytes), align: 0
  Segment part 89.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SCS_received            0000079B        Check_SCS_received (function_service)
                                                   Dimmer_regulation (application)
                                                   Light_regulation (application)
                                                   _Initial_state (function_service)
                                                   _Maintain_state (function_service)
                                                   _ReTrigger_State (function_service)
                                                   _Standby_state (function_service)
                                                   application_decode_long (decode_scs)
                                                   application_decode_short (decode_scs)
                                                   configuration_receive_answer_frame (decode_scs_next)
                                                   decode_IR (IR)
                                                   decode_SCS (decode_scs)
                                                   dimmer_command (application)
                                                   frame_OFF_send (function_service)
                                                   function_check_status (function_service)
                                                   function_service (function_service)
                                                   occupancy_detect (function_service)
                                                   scs_calibration (decode_scs)
                                                   timer0_ovf_ser (board)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000ACB4 - 0000AE71 (0x1be bytes), align: 1
  Segment part 90.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           global_variable_initial
                                   0000ACB4        main (main)
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 1. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 8. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   
    -------------------------------------------------------------------------
NEAR_ID
  Segment part 33. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 34. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_I>
                                   
    -------------------------------------------------------------------------
NEAR_ID
  Segment part 36. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_ID
  Segment part 38. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000BCE3 - 0000BCE6 (0x4 bytes), align: 0
  Segment part 54.            Intra module refs:   flash_KO

    *************************************************************************

  FILE NAME : D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Alan\Release\Obj\main.r90
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000AE72 - 0000AF35 (0xc4 bytes), align: 1
  Segment part 7.             Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           test_ID_assigned        0000AE72 
               calls direct
               stack 1 = 00000000 ( 00000005 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000AF36 - 0000AFBF (0x8a bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    0000AF36        ?cstartup_call_main (?C_STARTUP)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 1. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 6. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Alan\Release\Obj\usart.r90
  PROGRAM MODULE, NAME : usart

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 000000C6 - 000000C6 (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   put_c
                                                   usart0_rx_ser
                                                   usart0_tx_ser
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UDR0                 000000C6 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000C4 - 000000C5 (0x2 bytes), align: 0
  Segment part 2.             Intra module refs:   init_USART0
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UBRR0                000000C4 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000C2 - 000000C2 (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   init_USART0
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSR0C               000000C2 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000C1 - 000000C1 (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   init_USART0
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSR0B               000000C1 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000C0 - 000000C0 (0x1 bytes), align: 0
  Segment part 5.             Intra module refs:   init_USART0
                                                   put_c
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSR0A               000000C0 
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rx_buffer               
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rx_wr_index             
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rx_rd_index             
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rx_counter              
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rx_buffer_overflow      
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000007A0 - 000007B2 (0x13 bytes), align: 0
  Segment part 20.            Intra module refs:   put_c
                                                   usart0_tx_ser
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tx_buffer               000007A0 
           tx_counter              000007B2 
           tx_rd_index             000007B1 
           tx_wr_index             000007B0 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000AFC0 - 0000B135 (0x176 bytes), align: 1
  Segment part 21.            Intra module refs:   usart0_rx_ser::??INTVEC 80
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usart0_rx_ser           0000AFC0 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 00000015 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B136 - 0000B189 (0x54 bytes), align: 1
  Segment part 22.            Intra module refs:   usart0_tx_ser::??INTVEC 88
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usart0_tx_ser           0000B136 
               interrupt function
               stack 1 = 00000000 ( 00000005 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B18A - 0000B1D9 (0x50 bytes), align: 1
  Segment part 23.            Intra module refs:   put_s
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           put_c                   0000B18A 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B1DA - 0000B1F1 (0x18 bytes), align: 1
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           put_s                   0000B1DA        configuration_answer_frame (decode_scs_next)
                                                   org_ext_broad (decode_scs_next)
                                                   send_frame_pp_broad (decode_scs_next)
                                                   send_frame_pp_ext_broad (decode_scs_next)
                                                   start_conf (application)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B1F2 - 0000B211 (0x20 bytes), align: 1
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           init_USART0             0000B1F2        main (main)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 6. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 7. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 8. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 9. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000053 (0x54 bytes), align: 1
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usart0_rx_ser::??INTVEC 80
                                   00000050 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000005B (0x5c bytes), align: 1
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usart0_tx_ser::??INTVEC 88
                                   00000058 
    -------------------------------------------------------------------------
CSTACK
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 15. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   

    *************************************************************************

  FILE NAME : C:\Program Files\IAR Systems\Embedded Workbench 5.0 Evaluation\avr\LIB\CLIB\cl3s-ec_mul-sf.r90
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B212 - 0000B217 (0x6 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  0000B214 
           ?C_EXIT                 0000B214 
           ?C_FUNCALL              0000B212 
           _exit                   0000B212        ?cstartup_call_main (?C_STARTUP)
           exit                    0000B212        ?cstartup_call_main (?C_STARTUP)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?RESET

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00000000 - 00000003 (0x4 bytes), align: 1
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         00000000        Absolute parts (?ABS_ENTRY_MOD)
           ?RESET                  00000000        Segment part 2 (?C_STARTUP)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?C_STARTUP

  SEGMENTS IN THE MODULE
  ======================
CSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B218, align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?C_STARTUP              0000B218        Segment part 0 (?RESET)
           __RESTART               0000B218 
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __RSTACK_in_external_ram
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __RSTACK_in_external_ram_new_way
                                   
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B218 - 0000B223 (0xc bytes), align: 1
  Segment part 5.             Intra module refs:   Segment part 2
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?zero_reg_initialization
                                   
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B224 - 0000B227 (0x4 bytes), align: 1
  Segment part 7.             Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_low_level_init    0000B224 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B228 - 0000B22F (0x8 bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?need_segment_init      0000B228        ?<Segment init: NEAR_I> (IR)
                                                   ?<Segment init: NEAR_Z> (IR)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B230 - 0000B23B (0xc bytes), align: 1
  Segment part 9.             Intra module refs:   ?call_low_level_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstartup_call_main     0000B230 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?EEPROM_16

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B23C - 0000B241 (0x6 bytes), align: 1
  Segment part 0.             Intra module refs:   Segment part 1
                                                   __eeput16_16
                                                   __eeput32_16
                                                   __eeput8_16
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B242 - 0000B24F (0xe bytes), align: 1
  Segment part 1.             Intra module refs:   __eeget16_16
                                                   __eeget32_16
                                                   __eeget8_16
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B250 - 0000B255 (0x6 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeget8_16             0000B250        ?ML_EEPROM_SRAM_16_16_L07 (?MOVLONG_EEPROM_16_P07)
                                                   KO_answer_frame (decode_scs_next)
                                                   address_answer_frame (decode_scs_next)
                                                   address_setting_error_frame (decode_scs_next)
                                                   aux_procedure (decode_scs_next)
                                                   configuration_answer_frame (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   configurator_to_KO (application)
                                                   decode_IR (IR)
                                                   diagnostic_frame (decode_scs_next)
                                                   frame_M2_answer (application)
                                                   function_service_init (function_service)
                                                   id_frame (decode_scs_next)
                                                   ir_pnl (IR)
                                                   is_scenario_full (IR)
                                                   led_blinking_normal (application)
                                                   load_parameter (configuration)
                                                   parameter_all_answer (decode_scs_next)
                                                   parameter_setting_error_answer (decode_scs_next)
                                                   parameter_specified_index_answer (decode_scs_next)
                                                   scs_pnl_advance_master (application)
                                                   send_aux_frame (decode_scs_next)
                                                   send_frame_pp_ext_broad (decode_scs_next)
                                                   start_conf (application)
                                                   timer0_ovf_ser (board)
                                                   write_ee_KO (configuration)
                                                   write_moudle_parameter (configuration)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B256 - 0000B25F (0xa bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeget16_16            0000B256        configuration_procedure (decode_scs_next)
                                                   daylight_set_init (application)
                                                   decode_IR (IR)
                                                   factory_calibration (application)
                                                   factory_default (application)
                                                   id_frame (decode_scs_next)
                                                   load_parameter (configuration)
                                                   scs_calibration (decode_scs)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_none_confed_master (application)
                                                   start_conf (application)
                                                   test_ID_assigned (main)
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeget24_16            
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B260 - 0000B271 (0x12 bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeget32_16            0000B260        load_parameter (configuration)
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeget64_16            
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B272 - 0000B283 (0x12 bytes), align: 1
  Segment part 8.             Intra module refs:   __eeput16_16
                                                   __eeput32_16
                                                   __eeput8_16
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B284 - 0000B28B (0x8 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeput8_16             0000B284        ?ML_FLASH_EEPROM_16EC_16_L07 (?MOVLONG_EEPROM_16_P07)
                                                   ?ML_SRAM_EEPROM_16_16_L07 (?MOVLONG_EEPROM_16_P07)
                                                   ID_setting (configuration)
                                                   configuration_procedure (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   configurator_to_KO (application)
                                                   decode_IR (IR)
                                                   decode_SCS (decode_scs)
                                                   factory_default (application)
                                                   id_frame (decode_scs_next)
                                                   ir_pnl (IR)
                                                   load_default_advance_parameter (application)
                                                   load_parameter (configuration)
                                                   remember_parameter (configuration)
                                                   scenario_remove (decode_scs_next)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_advance_slave (application)
                                                   scs_pnl_none_confed_master (application)
                                                   scs_pnl_none_confed_slave (application)
                                                   start_conf (application)
                                                   test_ID_assigned (main)
                                                   write_ee_KO (configuration)
                                                   write_moudle_parameter (configuration)
                                                   write_parameter_scenario (decode_scs_next)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B28C - 0000B299 (0xe bytes), align: 1
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeput16_16            0000B28C        DLL_setpoint (application)
                                                   configuration_procedure (decode_scs_next)
                                                   factory_calibration (application)
                                                   factory_default (application)
                                                   id_frame (decode_scs_next)
                                                   scs_calibration (decode_scs)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_none_confed_master (application)
                                                   start_conf (application)
                                                   test_ID_assigned (main)
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeput24_16            
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B29A - 0000B2B3 (0x1a bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeput32_16            0000B29A        factory_calibration (application)
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeput64_16            

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?EEPROM_16_RF

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeget8_16_AT86RF401   
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeget16_16_AT86RF401
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeget24_16_AT86RF401
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeget32_16_AT86RF401
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeget64_16_AT86RF401
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeput8_16_AT86RF401   
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeput16_16_AT86RF401
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeput24_16_AT86RF401
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeput32_16_AT86RF401
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeput64_16_AT86RF401
                                   

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_EC_MUL_L02

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B2B4 - 0000B2C3 (0x10 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_EC_MUL_L02           0000B2B4        Dimmer_regulation (application)
                                                   KO_answer_frame (decode_scs_next)
                                                   PofL_calc (application)
                                                   _Initial_state (function_service)
                                                   address_answer_frame (decode_scs_next)
                                                   address_setting_error_frame (decode_scs_next)
                                                   all_reception_buffer_clear (application)
                                                   aux_procedure (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   daylight_service (application)
                                                   decode_IR (IR)
                                                   decode_SCS (decode_scs)
                                                   decode_id (decode_scs)
                                                   factor_divcalc (application)
                                                   factory_default (application)
                                                   frame_buffer_clear (decode_scs_next)
                                                   function_service_init (function_service)
                                                   global_variable_initial (global_variable)
                                                   ir_pnl (IR)
                                                   is_gateway_busy (decode_scs)
                                                   is_scenario_full (IR)
                                                   led_blinking_normal (application)
                                                   manual_reception_buffer_clear (application)
                                                   parameter_all_answer (decode_scs_next)
                                                   parameter_setting_error_answer (decode_scs_next)
                                                   parameter_specified_index_answer (decode_scs_next)
                                                   real_daylight_calc (application)
                                                   scenario_remove (decode_scs_next)
                                                   send_aux_frame (decode_scs_next)
                                                   start_conf (application)
                                                   timer0_ovf_ser (board)
                                                   usart0_rx_ser (usart)
                                                   write_KO (configuration)
                                                   write_parameter_scenario (decode_scs_next)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_SHL_L02

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B2C4 - 0000B2CF (0xc bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_SHL_L02              0000B2C4        factor_divcalc (application)
                                                   not_bit (board)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SHR_L02

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B2D0 - 0000B2DB (0xc bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SHR_L02             0000B2D0        factor_divcalc (application)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_DIVMOD_L02

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B2DC - 0000B303 (0x28 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_DIVMOD_L02          0000B2DC        ?SS_DIVMOD_L02 (?SS_DIVMOD_L02)
                                                   Dimmer_regulation (application)
                                                   PofL_calc (application)
                                                   decode_IR (IR)
                                                   factor_divcalc (application)
                                                   get_dl_level (application)
                                                   real_daylight_calc (application)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SS_DIVMOD_L02

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B304 - 0000B333 (0x30 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SS_DIVMOD_L02          0000B30C        daylight_service (application)
                                                   real_daylight_calc (application)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_EC_MUL_L03

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B334 - 0000B373 (0x40 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_EC_MUL_L03           0000B334        configuration_setting_frame (decode_scs_next)
                                                   daylight_service (application)
                                                   decode_IR (IR)
                                                   decode_SCS (decode_scs)
                                                   function_service_init (function_service)
                                                   scs_calibration (decode_scs)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SHL_L03

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B374 - 0000B383 (0x10 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SHL_L03              0000B374        decode_IR (IR)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_SHR_L03

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B384 - 0000B393 (0x10 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_SHR_L03             0000B384        Segment part 9 (?FLOATS_L04)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_DIVMOD_L03

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B394 - 0000B3D9 (0x46 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_DIVMOD_L03          0000B394        Dimmer_regulation (application)
                                                   daylight_service (application)
                                                   real_daylight_calc (application)
                                                   scs_calibration (decode_scs)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SL_DIVMOD_L03

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SL_DIVMOD_L03          
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B3DA - 0000B3E9 (0x10 bytes), align: 1
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NEG_L03              0000B3DA        Segment part 9 (?FLOATS_L04)
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NEG_Q_L03            

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLOATS_L04

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B3EA - 0000B413 (0x2a bytes), align: 1
  Segment part 0.             Intra module refs:   ?F2SL_L04
                                                   ?F_ADD_L04
                                                   ?F_DIV_L04
                                                   ?F_MUL_L04
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B414 - 0000B467 (0x54 bytes), align: 1
  Segment part 1.             Intra module refs:   ?F_ADD_L04
                                                   ?F_DIV_L04
                                                   ?F_MUL_L04
                                                   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_ROUND_L04            0000B434 
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B468 - 0000B469 (0x2 bytes), align: 1
  Segment part 3.             Intra module refs:   ?F_ROUND_L04
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SL2F_L04               
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B46A - 0000B475 (0xc bytes), align: 1
  Segment part 5.             Intra module refs:   ?UL2F_L04
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B476 - 0000B479 (0x4 bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL2F_L04               0000B476        Function_KO128 (function_service)
                                                   decode_IR (IR)
                                                   factory_calibration (application)
                                                   real_daylight_calc (application)
                                                   scs_calibration (decode_scs)
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F2UL_L04               
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B47A - 0000B48B (0x12 bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F2SL_L04               0000B47A        Function_KO128 (function_service)
                                                   real_daylight_calc (application)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B48C - 0000B4AF (0x24 bytes), align: 1
  Segment part 9.             Intra module refs:   ?F2SL_L04
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B4B0 - 0000B4DD (0x2e bytes), align: 1
  Segment part 10.            Intra module refs:   ?F_ADD_L04
                                                   ?F_CMP_GE_L04
                                                   ?F_DIV_L04
                                                   ?F_MUL_L04
                                                   Segment part 11
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?TEST_P_L04             0000B4B0 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B4DE - 0000B4FD (0x20 bytes), align: 1
  Segment part 11.            Intra module refs:   ?F_ADD_L04
                                                   ?F_CMP_GE_L04
                                                   ?F_DIV_L04
                                                   ?F_MUL_L04
                                                   Segment part 17
                                                   Segment part 22
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B4FE - 0000B5A5 (0xa8 bytes), align: 1
  Segment part 12.            Intra module refs:   ?F_SUB_L04
                                                   Segment part 17
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_ADD_L04              0000B51E 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B5A6 - 0000B5AB (0x6 bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_SUB_L04              0000B5A6        decode_IR (IR)
                                                   scs_calibration (decode_scs)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B5AC - 0000B5B7 (0xc bytes), align: 1
  Segment part 14.            Intra module refs:   ?F2SL_L04
                                                   ?F_DIV_L04
                                                   ?F_INFINITE_L04
                                                   ?F_MUL_L04
                                                   ?F_NAN_L04
                                                   Segment part 9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_ZERO_L04             0000B5AC 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B5B8 - 0000B5BF (0x8 bytes), align: 1
  Segment part 15.            Intra module refs:   ?F_DIV_L04
                                                   ?F_MUL_L04
                                                   Segment part 3
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_INFINITE_L04         0000B5B8 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B5C0 - 0000B5C5 (0x6 bytes), align: 1
  Segment part 16.            Intra module refs:   ?F_ADD_L04
                                                   ?F_DIV_L04
                                                   ?F_MUL_L04
                                                   Segment part 17
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_NAN_L04              0000B5C0 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B5C6 - 0000B5DF (0x1a bytes), align: 1
  Segment part 17.            Intra module refs:   ?F_DIV_L04
                                                   ?F_MUL_L04
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B5E0 - 0000B6B5 (0xd6 bytes), align: 1
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_MUL_L04              0000B5E0        Function_KO128 (function_service)
                                                   decode_IR (IR)
                                                   real_daylight_calc (application)
                                                   scs_calibration (decode_scs)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B6B6 - 0000B7C5 (0x110 bytes), align: 1
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_DIV_L04              0000B6D2        decode_IR (IR)
                                                   factory_calibration (application)
                                                   scs_calibration (decode_scs)
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_CMP_EQ_L04           
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_CMP_LT_L04           
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B7C6 - 0000B7ED (0x28 bytes), align: 1
  Segment part 22.            Intra module refs:   ?F_CMP_GE_L04
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B7EE - 0000B7FD (0x10 bytes), align: 1
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_CMP_GE_L04           0000B7EE        decode_IR (IR)
                                                   scs_calibration (decode_scs)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xV_SWITCH_L06

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B7FE - 0000B899 (0x9c bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?CV_SWITCH_L06          0000B810        application_decode_short (decode_scs)
                                                   configuration_procedure (decode_scs_next)
                                                   configurator_to_KO (application)
                                                   decode_IR (IR)
                                                   read_KO (configuration)
                                                   write_KO (configuration)
                                                   write_ee_KO (configuration)
           ?SV_SWITCH_L06          0000B818        function_service (function_service)
                                                   service_main (application)
           ?LV_SWITCH_L06          0000B824 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG_L07

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B89A - 0000B8AF (0x16 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_SRAM_SRAM_16_L07    0000B89A        configuration_procedure (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   factory_default (application)
                                                   remember_parameter (configuration)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B8B0 - 0000B8C5 (0x16 bytes), align: 1
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_FLASH_SRAM_16EC_16_L07
                                   0000B8B0        KO_parameter_initial_temp (configuration)
                                                   KO_setting_error_frame (decode_scs_next)
                                                   address_answer_frame (decode_scs_next)
                                                   address_setting_error_frame (decode_scs_next)
                                                   configuration_answer_frame (decode_scs_next)
                                                   diagnostic_frame (decode_scs_next)
                                                   frame_send_start_pnl_group_confed (application)
                                                   not_allowed_response (decode_scs_next)
                                                   parameter_all_answer (decode_scs_next)
                                                   parameter_request_error_frame (decode_scs_next)
                                                   parameter_setting_error_answer (decode_scs_next)
                                                   parameter_specified_index_answer (decode_scs_next)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_advance_slave (application)
                                                   send_aux_frame (decode_scs_next)
                                                   send_group_frame (decode_scs_next)
                                                   send_group_pnl_frame (decode_scs_next)
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_GENERIC24_SRAM_L07
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_SRAM_GENERIC24_L07
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_FLASH_GENERIC24_L07
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_GENERIC_GENERIC_24_L07
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_GENERIC24_FARG_L07
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?LONG_FARG_8_L07        
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?LONG_FARG_16_L07       
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?LONG_FARG_24_L07       
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLASH_FARG_8_L07       
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLASH_FARG_16_L07      
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MEMCLR_8_L07           
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MEMCLR_16_L07          

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVLONG_EEPROM_16_P07

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B8C6 - 0000B8D7 (0x12 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_EEPROM_SRAM_16_16_L07
                                   0000B8C6        configuration_procedure (decode_scs_next)
                                                   load_default_advance_parameter (application)
                                                   load_parameter (configuration)
                                                   start_conf (application)
    -------------------------------------------------------------------------
CODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_EEPROM_RF_SRAM_16_16_L07
                                   
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B8D8 - 0000B8E9 (0x12 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_SRAM_EEPROM_16_16_L07
                                   0000B8D8        configuration_procedure (decode_scs_next)
                                                   factory_default (application)
                                                   remember_parameter (configuration)
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_SRAM_EEPROM_RF_16_16_L07
                                   
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B8EA - 0000B8FB (0x12 bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_FLASH_EEPROM_16EC_16_L07
                                   0000B8EA        KO_parameter_initial (configuration)
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_FLASH_EEPROM_RF_16EC_16_L07
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_EEPROM_EEPROM_16_16EC_L07
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_EEPROM_RF_EEPROM_RF_16_16EC_L07
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_EEPROM_GENERIC_16_24_L07
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_EEPROM_RF_GENERIC_16_24_L07
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_GENERIC_EEPROM_24_16_L07
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_GENERIC_EEPROM_RF_24_16_L07
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EEPROM_FARG_16_L07     
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EEPROM_RF_FARG_16_L07
                                   

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PROLOGUE_L09

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE16_L09         
    -------------------------------------------------------------------------
CODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE15_L09         
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE14_L09         
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B8FC - 0000B8FD (0x2 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE13_L09         0000B8FC        decode_IR (IR)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B8FE - 0000B8FF (0x2 bytes), align: 1
  Segment part 4.             Intra module refs:   ?PROLOGUE13_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE12_L09         0000B8FE 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B900 - 0000B901 (0x2 bytes), align: 1
  Segment part 5.             Intra module refs:   ?PROLOGUE12_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE11_L09         0000B900 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B902 - 0000B903 (0x2 bytes), align: 1
  Segment part 6.             Intra module refs:   ?PROLOGUE11_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE10_L09         0000B902 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B904 - 0000B905 (0x2 bytes), align: 1
  Segment part 7.             Intra module refs:   ?PROLOGUE10_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE9_L09          0000B904 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B906 - 0000B907 (0x2 bytes), align: 1
  Segment part 8.             Intra module refs:   ?PROLOGUE9_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE8_L09          0000B906        scs_calibration (decode_scs)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B908 - 0000B909 (0x2 bytes), align: 1
  Segment part 9.             Intra module refs:   ?PROLOGUE8_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE7_L09          0000B908 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B90A - 0000B90B (0x2 bytes), align: 1
  Segment part 10.            Intra module refs:   ?PROLOGUE7_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE6_L09          0000B90A        factor_divcalc (application)
                                                   frame_M2_answer (application)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B90C - 0000B90D (0x2 bytes), align: 1
  Segment part 11.            Intra module refs:   ?PROLOGUE6_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE5_L09          0000B90C        put_s1 (IR)
                                                   send_aux_frame (decode_scs_next)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B90E - 0000B90F (0x2 bytes), align: 1
  Segment part 12.            Intra module refs:   ?PROLOGUE5_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE4_L09          0000B90E        Dimmer_regulation (application)
                                                   KO_answer_frame (decode_scs_next)
                                                   configuration_answer_frame (decode_scs_next)
                                                   configuration_checking (configuration)
                                                   configuration_procedure (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   daylight_service (application)
                                                   decode_SCS (decode_scs)
                                                   decode_id (decode_scs)
                                                   factory_calibration (application)
                                                   frame_buffer_clear (decode_scs_next)
                                                   function_service_init (function_service)
                                                   global_variable_initial (global_variable)
                                                   ir_pnl (IR)
                                                   is_gateway_busy (decode_scs)
                                                   led_blinking_ms (application)
                                                   org_ext_broad (decode_scs_next)
                                                   parameter_all_answer (decode_scs_next)
                                                   parameter_setting_error_answer (decode_scs_next)
                                                   parameter_specified_index_answer (decode_scs_next)
                                                   real_daylight_calc (application)
                                                   send_frame_pp_broad (decode_scs_next)
                                                   send_frame_pp_ext_broad (decode_scs_next)
                                                   send_group_pnl_frame (decode_scs_next)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B910 - 0000B911 (0x2 bytes), align: 1
  Segment part 13.            Intra module refs:   ?PROLOGUE4_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE3_L09          0000B910        factory_default (application)
                                                   is_scenario_full (IR)
                                                   led_blinking_normal (application)
                                                   start_conf (application)
                                                   write_parameter_scenario (decode_scs_next)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B912 - 0000B913 (0x2 bytes), align: 1
  Segment part 14.            Intra module refs:   ?PROLOGUE3_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE2_L09          0000B912 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B914 - 0000B915 (0x2 bytes), align: 1
  Segment part 15.            Intra module refs:   ?PROLOGUE2_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE1_L09          0000B914 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B916 - 0000B917 (0x2 bytes), align: 1
  Segment part 16.            Intra module refs:   ?PROLOGUE1_L09

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?EPILOGUE_B_L09

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B16_L09       
    -------------------------------------------------------------------------
CODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B15_L09       
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B14_L09       
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B918 - 0000B919 (0x2 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B13_L09       0000B918        decode_IR (IR)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B91A - 0000B91B (0x2 bytes), align: 1
  Segment part 4.             Intra module refs:   ?EPILOGUE_B13_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B12_L09       0000B91A 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B91C - 0000B91D (0x2 bytes), align: 1
  Segment part 5.             Intra module refs:   ?EPILOGUE_B12_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B11_L09       0000B91C 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B91E - 0000B91F (0x2 bytes), align: 1
  Segment part 6.             Intra module refs:   ?EPILOGUE_B11_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B10_L09       0000B91E 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B920 - 0000B921 (0x2 bytes), align: 1
  Segment part 7.             Intra module refs:   ?EPILOGUE_B10_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B9_L09        0000B920 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B922 - 0000B923 (0x2 bytes), align: 1
  Segment part 8.             Intra module refs:   ?EPILOGUE_B9_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B8_L09        0000B922        scs_calibration (decode_scs)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B924 - 0000B925 (0x2 bytes), align: 1
  Segment part 9.             Intra module refs:   ?EPILOGUE_B8_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B7_L09        0000B924 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B926 - 0000B927 (0x2 bytes), align: 1
  Segment part 10.            Intra module refs:   ?EPILOGUE_B7_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B6_L09        0000B926        factor_divcalc (application)
                                                   frame_M2_answer (application)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B928 - 0000B929 (0x2 bytes), align: 1
  Segment part 11.            Intra module refs:   ?EPILOGUE_B6_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B5_L09        0000B928        put_s1 (IR)
                                                   send_aux_frame (decode_scs_next)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B92A - 0000B92B (0x2 bytes), align: 1
  Segment part 12.            Intra module refs:   ?EPILOGUE_B5_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B4_L09        0000B92A        Dimmer_regulation (application)
                                                   KO_answer_frame (decode_scs_next)
                                                   configuration_answer_frame (decode_scs_next)
                                                   configuration_checking (configuration)
                                                   configuration_procedure (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   daylight_service (application)
                                                   decode_SCS (decode_scs)
                                                   decode_id (decode_scs)
                                                   factory_calibration (application)
                                                   frame_buffer_clear (decode_scs_next)
                                                   function_service_init (function_service)
                                                   global_variable_initial (global_variable)
                                                   ir_pnl (IR)
                                                   is_gateway_busy (decode_scs)
                                                   led_blinking_ms (application)
                                                   org_ext_broad (decode_scs_next)
                                                   parameter_all_answer (decode_scs_next)
                                                   parameter_setting_error_answer (decode_scs_next)
                                                   parameter_specified_index_answer (decode_scs_next)
                                                   real_daylight_calc (application)
                                                   send_frame_pp_broad (decode_scs_next)
                                                   send_frame_pp_ext_broad (decode_scs_next)
                                                   send_group_pnl_frame (decode_scs_next)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B92C - 0000B92D (0x2 bytes), align: 1
  Segment part 13.            Intra module refs:   ?EPILOGUE_B4_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B3_L09        0000B92C        factory_default (application)
                                                   is_scenario_full (IR)
                                                   led_blinking_normal (application)
                                                   start_conf (application)
                                                   write_parameter_scenario (decode_scs_next)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B92E - 0000B92F (0x2 bytes), align: 1
  Segment part 14.            Intra module refs:   ?EPILOGUE_B3_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B2_L09        0000B92E 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B930 - 0000B931 (0x2 bytes), align: 1
  Segment part 15.            Intra module refs:   ?EPILOGUE_B2_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B1_L09        0000B930 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B932 - 0000B93B (0xa bytes), align: 1
  Segment part 16.            Intra module refs:   ?EPILOGUE_B1_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B0_L09        0000B932 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR4_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B93C, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R4_is_cg_reg
                                   0000B93C        decode_IR (IR)
                                                   factor_divcalc (application)
                                                   frame_M2_answer (application)
                                                   put_s1 (IR)
                                                   scs_calibration (decode_scs)
                                                   send_aux_frame (decode_scs_next)
                                                   usart0_rx_ser (usart)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR5_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B93C, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R5_is_cg_reg
                                   0000B93C        decode_IR (IR)
                                                   factor_divcalc (application)
                                                   frame_M2_answer (application)
                                                   scs_calibration (decode_scs)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR6_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B93C, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R6_is_cg_reg
                                   0000B93C        decode_IR (IR)
                                                   scs_calibration (decode_scs)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR7_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B93C, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R7_is_cg_reg
                                   0000B93C        decode_IR (IR)
                                                   scs_calibration (decode_scs)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR8_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B93C, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R8_is_cg_reg
                                   0000B93C        decode_IR (IR)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR9_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B93C, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R9_is_cg_reg
                                   0000B93C        decode_IR (IR)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR10_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B93C, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R10_is_cg_reg
                                   0000B93C        decode_IR (IR)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR11_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B93C, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R11_is_cg_reg
                                   0000B93C        decode_IR (IR)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR12_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B93C, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R12_is_cg_reg
                                   0000B93C        decode_IR (IR)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?low_level_init

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B93C - 0000B93F (0x4 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        0000B93C        ?call_low_level_init (?C_STARTUP)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 2. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?segment_init

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B940 - 0000B947 (0x8 bytes), align: 1
  Segment part 3.             Intra module refs:   __segment_init
           LOCAL                   ADDRESS         
           =====                   =======         
           __memclr                0000B940 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B948 - 0000B94F (0x8 bytes), align: 1
  Segment part 4.             Intra module refs:   __segment_init
           LOCAL                   ADDRESS         
           =====                   =======         
           __flashcpy              0000B948 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B950 - 0000B95B (0xc bytes), align: 1
  Segment part 5.             Intra module refs:   __flashcpy
                                                   __memclr
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B95C - 0000B98F (0x34 bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __segment_init          0000B95C        ?need_segment_init (?C_STARTUP)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 7. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strcmp

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B990 - 0000B9BB (0x2c bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcmp                  0000B990        id_frame (decode_scs_next)
                                                   usart0_rx_ser (usart)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 2. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strncpy

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B9BC - 0000B9E7 (0x2c bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strncpy                 0000B9BC        KO_answer_frame (decode_scs_next)
                                                   PnL_ad_end (application)
                                                   configuration_answer_frame (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   decode_IR (IR)
                                                   decode_SCS (decode_scs)
                                                   dimmer_command (application)
                                                   id_frame (decode_scs_next)
                                                   ir_pnl (IR)
                                                   scs_pnl_advance_master (application)
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B9E8 - 0000B9F1 (0xa bytes), align: 1
  Segment part 4.             Intra module refs:   strncpy
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 2. NOT NEEDED.

    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?FILLER_BYTES

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00000000 - 0000007B (0x7c bytes), align: 0
  Segment part 0.




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module                    CODE      DATA      XDATA
------                    ----      ----      -----
                         (Rel)  (Rel)  (Abs)  (Rel)
?C_STARTUP                  36
?EEPROM_16                 120
?EPILOGUE_B_L09             36
?FILLER_BYTES
  + common                 124
?FLOATS_L04              1 044
?L_EC_MUL_L03               64
?L_SHL_L03                  16
?MOVE_LONG_L07              44
?MOVLONG_EEPROM_16_P07      54
?PROLOGUE_L09               28
?RESET
  + common                   4
?SL_DIVMOD_L03              16
?SS_DIVMOD_L02              48
?S_EC_MUL_L02               16
?S_SHL_L02                  12
?UL_DIVMOD_L03              70
?UL_SHR_L03                 16
?US_DIVMOD_L02              40
?US_SHR_L02                 12
?__exit                      6
?low_level_init              4
?segment_init               80
?strcmp                     44
?strncpy                    54
?xV_SWITCH_L06             156
IR                       5 730    243      6
  + shared                  12             8
  + common                 124
PIR                        496     16
US                         488     51
application             10 900    182     10
  + shared                                 2
board                    2 824            16
  + common                  76
configuration            4 024
decode_scs               3 689     51
decode_scs_next         11 629    293
function_service         4 748
global_variable            750    860           242
main                       334
usart                      594     19      6
  + common                  92
N/A (command line)                320
N/A (alignment)
----------              ------  -----     --    ---
Total:                  48 234  2 035     48    242
  + common                 124


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  00000000 00000000
  01  usart1_rx_ser
      | Stack used (prev) :  00000000 00000000
      | + function block  :  00000007 00000002
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000007 00000002


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  00000007 00000002
  01  usart_tx_ser
      | Stack used (prev) :  00000007 00000002
      | + function block  :  00000005 00000002
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  0000000C 00000004


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  0000000C 00000004
  02    not_bit
        | Stack used (prev) :  0000000C 00000004
        | + function block  :  00000000 00000004
  04        led_blinking_disable
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000000 00000002
  04        led_blinking
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000004 00000002
  03      led_blinking_normal
          | Stack used (prev) :  00000010 00000004
          | + function block  :  00000003 00000004
  06            put_c
                | Stack used (prev) :  0000000C 00000004
                | + function block  :  00000000 00000002
  05          put_s
              | Stack used (prev) :  0000000C 00000006
              | + function block  :  00000002 00000002
  06            StrToChar
                | Stack used (prev) :  0000000C 00000004
                | + function block  :  00000000 00000002
  05          is_gateway_busy
              | Stack used (prev) :  0000000C 00000004
              | + function block  :  00000004 00000004
  05          CharToStr
              | Stack used (prev) :  0000000C 00000004
              | + function block  :  00000002 00000002
  05          delay_ms
              | Stack used (prev) :  0000000C 00000004
              | + function block  :  00000000 00000002
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  0000001C 00000002
  03      frame_send_end_pnl
          | Stack used (prev) :  0000002C 0000000A
          | + function block  :  00000000 00000002
  05          put_s
              | Stack used (prev) :  0000000C 00000006
              | + function block  :  00000002 00000002
              |  Already listed
  05          is_gateway_busy
              | Stack used (prev) :  0000000C 00000004
              | + function block  :  00000004 00000004
              |  Already listed
  05          delay_ms
              | Stack used (prev) :  0000000C 00000004
              | + function block  :  00000000 00000002
              |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  00000011 00000002
  03      frame_send_enable_automatic_control
          | Stack used (prev) :  00000021 0000000A
          | + function block  :  00000000 00000002
  02    PnL_NONE_end
        | Stack used (prev) :  0000002C 0000000C
        | + function block  :  00000000 00000002
  03      strncpy
          | Stack used (prev) :  0000000C 00000004
          | + function block  :  00000004 00000002
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  0000001C 00000002
            |  Already listed
  04        CharToStr
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000002 00000002
            |  Already listed
  03      send_group_pnl_frame
          | Stack used (prev) :  0000002C 0000000A
          | + function block  :  00000018 00000002
  03      send_frame_pp_ext_broad
          | Stack used (prev) :  00000010 00000008
          | + function block  :  0000001C 00000002
          |  Already listed
  03      send_frame_pp_broad
          | Stack used (prev) :  00000010 00000008
          | + function block  :  00000011 00000002
          |  Already listed
  03      CharToStr
          | Stack used (prev) :  0000000C 00000004
          | + function block  :  00000002 00000002
          |  Already listed
  03      led_blinking_disable
          | Stack used (prev) :  0000000C 00000004
          | + function block  :  00000000 00000002
          |  Already listed
  02    PnL_ad_end
        | Stack used (prev) :  00000044 0000000C
        | + function block  :  00000014 00000002
  02    led_blinking_disable
        | Stack used (prev) :  0000000C 00000004
        | + function block  :  00000000 00000002
        |  Already listed
  02    led_blinking
        | Stack used (prev) :  0000000C 00000004
        | + function block  :  00000004 00000002
        |  Already listed
  01  timer0_ovf_ser
      | Stack used (prev) :  00000058 0000000E
      | + function block  :  00000012 00000002
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  0000006A 00000010


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  0000006A 00000010
  01  timer2_ovf_ser
      | Stack used (prev) :  0000006A 00000010
      | + function block  :  00000002 00000002
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  0000006C 00000012


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  0000006C 00000012
  01  timer1_ovf_ser
      | Stack used (prev) :  0000006C 00000012
      | + function block  :  00000001 00000002
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  0000006D 00000014


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  0000006D 00000014
  02    strcmp
        | Stack used (prev) :  0000006D 00000014
        | + function block  :  00000000 00000002
  01  usart0_rx_ser
      | Stack used (prev) :  0000006D 00000014
      | + function block  :  00000015 00000004
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000082 00000018


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  00000082 00000018
  01  usart0_tx_ser
      | Stack used (prev) :  00000082 00000018
      | + function block  :  00000005 00000002
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000087 0000001A


  ->Sub-tree of type: Function tree
                             CSTACK   RSTACK
    | Stack used (prev) :  00000087 0000001A
  02    init_USART0
        | Stack used (prev) :  00000087 0000001A
        | + function block  :  00000000 00000002
  04        delay_us
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
  03      read_adc10bit
          | Stack used (prev) :  00000087 0000001C
          | + function block  :  00000000 00000002
  03      CharToStr
          | Stack used (prev) :  0000000C 00000004
          | + function block  :  00000002 00000002
          |  Already listed
  02    test_ID_assigned
        | Stack used (prev) :  00000087 0000001E
        | + function block  :  00000005 00000002
  02    global_variable_initial
        | Stack used (prev) :  00000087 0000001A
        | + function block  :  00000004 00000004
  03      strncpy
          | Stack used (prev) :  0000000C 00000004
          | + function block  :  00000004 00000002
          |  Already listed
  04        scenario_remove
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000004
  03      aux_procedure
          | Stack used (prev) :  00000087 0000001E
          | + function block  :  00000001 00000002
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  0000001C 00000002
            |  Already listed
  04        led_blinking_normal
            | Stack used (prev) :  00000010 00000004
            | + function block  :  00000003 00000004
            |  Already listed
  03      configuration_receive_answer_frame
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
  04        strncpy
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000004 00000002
            |  Already listed
  04        put_s
            | Stack used (prev) :  0000000C 00000006
            | + function block  :  00000002 00000002
            |  Already listed
  07              strncpy
                  | Stack used (prev) :  0000000C 00000004
                  | + function block  :  00000004 00000002
                  |  Already listed
  07              send_frame_pp_ext_broad
                  | Stack used (prev) :  00000010 00000008
                  | + function block  :  0000001C 00000002
                  |  Already listed
  07              send_frame_pp_ext_broad
                  | Stack used (prev) :  00000010 00000008
                  | + function block  :  0000001C 00000002
                  |  Already listed
  07              send_frame_pp_ext_broad
                  | Stack used (prev) :  00000010 00000008
                  | + function block  :  0000001C 00000002
                  |  Already listed
  07              send_frame_pp_ext_broad
                  | Stack used (prev) :  00000010 00000008
                  | + function block  :  0000001C 00000002
                  |  Already listed
  07              send_frame_pp_ext_broad
                  | Stack used (prev) :  00000010 00000008
                  | + function block  :  0000001C 00000002
                  |  Already listed
  07              send_frame_pp_ext_broad
                  | Stack used (prev) :  00000010 00000008
                  | + function block  :  0000001C 00000002
                  |  Already listed
  07              send_frame_pp_ext_broad
                  | Stack used (prev) :  00000010 00000008
                  | + function block  :  0000001C 00000002
                  |  Already listed
  07              CharToStr
                  | Stack used (prev) :  0000000C 00000004
                  | + function block  :  00000002 00000002
                  |  Already listed
  07              manual_reception_buffer_clear
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000001 00000004
  06            KO_answer_frame
                | Stack used (prev) :  00000088 0000001E
                | + function block  :  00000018 00000002
  05          ko_answer_all
              | Stack used (prev) :  000000A0 00000020
              | + function block  :  00000001 00000002
  05          frame_buffer_clear
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000004 00000004
  05          KO_answer_frame
              | Stack used (prev) :  00000088 0000001E
              | + function block  :  00000018 00000002
              |  Already listed
  05          KO_answer_frame
              | Stack used (prev) :  00000088 0000001E
              | + function block  :  00000018 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000010 00000008
              | + function block  :  0000001C 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000010 00000008
              | + function block  :  0000001C 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000010 00000008
              | + function block  :  0000001C 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000010 00000008
              | + function block  :  0000001C 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000010 00000008
              | + function block  :  0000001C 00000002
              |  Already listed
  04        address_answer_frame
            | Stack used (prev) :  000000A1 00000022
            | + function block  :  00000013 00000002
  07              send_frame_pp_ext_broad
                  | Stack used (prev) :  00000010 00000008
                  | + function block  :  0000001C 00000002
                  |  Already listed
  07              send_frame_pp_ext_broad
                  | Stack used (prev) :  00000010 00000008
                  | + function block  :  0000001C 00000002
                  |  Already listed
  07              CharToStr
                  | Stack used (prev) :  0000000C 00000004
                  | + function block  :  00000002 00000002
                  |  Already listed
  06            not_allowed_response
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000014 00000004
  06            not_allowed_response
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000014 00000004
                |  Already listed
  06            not_allowed_response
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000014 00000004
                |  Already listed
  07              send_frame_pp_ext_broad
                  | Stack used (prev) :  00000010 00000008
                  | + function block  :  0000001C 00000002
                  |  Already listed
  06            parameter_request_error_frame
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000011 00000004
  06            frame_buffer_clear
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000004 00000004
                |  Already listed
  06            frame_buffer_clear
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000004 00000004
                |  Already listed
  06            KO_answer_frame
                | Stack used (prev) :  00000088 0000001E
                | + function block  :  00000018 00000002
                |  Already listed
  06            KO_answer_frame
                | Stack used (prev) :  00000088 0000001E
                | + function block  :  00000018 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            read_KO
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000000 00000002
  06            CharToStr
                | Stack used (prev) :  0000000C 00000004
                | + function block  :  00000002 00000002
                |  Already listed
  05          parameter_specified_index_answer
              | Stack used (prev) :  000000A0 00000020
              | + function block  :  00000018 00000002
  06            not_allowed_response
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000014 00000004
                |  Already listed
  06            not_allowed_response
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000014 00000004
                |  Already listed
  06            not_allowed_response
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000014 00000004
                |  Already listed
  06            not_allowed_response
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000014 00000004
                |  Already listed
  06            frame_buffer_clear
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000004 00000004
                |  Already listed
  06            frame_buffer_clear
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000004 00000004
                |  Already listed
  06            frame_buffer_clear
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000004 00000004
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            read_KO
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000000 00000002
                |  Already listed
  06            CharToStr
                | Stack used (prev) :  0000000C 00000004
                | + function block  :  00000002 00000002
                |  Already listed
  06            manual_reception_buffer_clear
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000001 00000004
                |  Already listed
  05          parameter_all_answer
              | Stack used (prev) :  0000009B 0000001E
              | + function block  :  00000018 00000002
  04        parameter_answer_frame
            | Stack used (prev) :  000000B8 00000022
            | + function block  :  00000000 00000002
  04        KO_answer_frame
            | Stack used (prev) :  00000088 0000001E
            | + function block  :  00000018 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  0000001C 00000002
            |  Already listed
  04        CharToStr
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000002 00000002
            |  Already listed
  04        StrToChar
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000000 00000002
            |  Already listed
  03      configuration_answer_frame
          | Stack used (prev) :  000000B8 00000024
          | + function block  :  00000020 00000002
  04        strncpy
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000004 00000002
            |  Already listed
  05          strncpy
              | Stack used (prev) :  0000000C 00000004
              | + function block  :  00000004 00000002
              |  Already listed
  05          scenario_remove
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000000 00000004
              |  Already listed
  05          send_group_pnl_frame
              | Stack used (prev) :  0000002C 0000000A
              | + function block  :  00000018 00000002
              |  Already listed
  05          send_group_pnl_frame
              | Stack used (prev) :  0000002C 0000000A
              | + function block  :  00000018 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000010 00000008
              | + function block  :  0000001C 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000010 00000008
              | + function block  :  0000001C 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000010 00000008
              | + function block  :  0000001C 00000002
              |  Already listed
  06            write_moudle_parameter
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000000 00000004
  06            write_moudle_parameter
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000000 00000004
                |  Already listed
  06            write_moudle_parameter
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000000 00000004
                |  Already listed
  06            write_moudle_parameter
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000000 00000004
                |  Already listed
  06            write_moudle_parameter
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000000 00000004
                |  Already listed
  05          KO_parameter_initial
              | Stack used (prev) :  00000087 0000001E
              | + function block  :  00000002 00000002
  06            read_KO
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000000 00000002
                |  Already listed
  06            write_KO
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000001 00000004
  05          remember_parameter
              | Stack used (prev) :  00000088 0000001E
              | + function block  :  0000003A 00000002
  05          system_reset
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000000 00000002
  05          CharToStr
              | Stack used (prev) :  0000000C 00000004
              | + function block  :  00000002 00000002
              |  Already listed
  05          StrToChar
              | Stack used (prev) :  0000000C 00000004
              | + function block  :  00000000 00000002
              |  Already listed
  05          led_blinking_normal
              | Stack used (prev) :  00000010 00000004
              | + function block  :  00000003 00000004
              |  Already listed
  07              write_moudle_parameter_temp
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
  07              write_moudle_parameter_temp
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              write_moudle_parameter_temp
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              write_moudle_parameter_temp
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              write_moudle_parameter_temp
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              write_moudle_parameter_temp
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  06            KO_parameter_initial_temp
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000000 00000004
  05          factory_default
              | Stack used (prev) :  00000087 0000001E
              | + function block  :  00000035 00000002
  05          timer_flex_initial
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000000 00000002
  06            led_blinking
                | Stack used (prev) :  0000000C 00000004
                | + function block  :  00000004 00000002
                |  Already listed
  05          led_blinking_ms
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000008 00000002
  04        configuration_procedure
            | Stack used (prev) :  000000C2 00000020
            | + function block  :  0000004A 00000002
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000010 00000008
                | + function block  :  0000001C 00000002
                |  Already listed
  06            CharToStr
                | Stack used (prev) :  0000000C 00000004
                | + function block  :  00000002 00000002
                |  Already listed
  05          KO_setting_error_frame
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000016 00000004
  05          KO_setting_error_frame
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000016 00000004
              |  Already listed
  05          KO_setting_error_frame
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000016 00000004
              |  Already listed
  05          KO_setting_error_frame
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000016 00000004
              |  Already listed
  05          KO_parameter_initial_temp
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000000 00000004
              |  Already listed
  04        KO_setting_procedure
            | Stack used (prev) :  0000009D 0000001E
            | + function block  :  00000000 00000002
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000010 00000008
              | + function block  :  0000001C 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000010 00000008
              | + function block  :  0000001C 00000002
              |  Already listed
  05          CharToStr
              | Stack used (prev) :  0000000C 00000004
              | + function block  :  00000002 00000002
              |  Already listed
  04        parameter_setting_error_answer
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000018 00000004
  04        parameter_setting_error_answer
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000018 00000004
            |  Already listed
  04        parameter_setting_error_answer
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000018 00000004
            |  Already listed
  04        write_parameter_scenario
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000003 00000004
  05          ko_answer_all
              | Stack used (prev) :  000000A0 00000020
              | + function block  :  00000001 00000002
              |  Already listed
  05          frame_buffer_clear
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000004 00000004
              |  Already listed
  05          KO_answer_frame
              | Stack used (prev) :  00000088 0000001E
              | + function block  :  00000018 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000010 00000008
              | + function block  :  0000001C 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000010 00000008
              | + function block  :  0000001C 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000010 00000008
              | + function block  :  0000001C 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000010 00000008
              | + function block  :  0000001C 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000010 00000008
              | + function block  :  0000001C 00000002
              |  Already listed
  05          CharToStr
              | Stack used (prev) :  0000000C 00000004
              | + function block  :  00000002 00000002
              |  Already listed
  04        address_setting_error_frame
            | Stack used (prev) :  000000A1 00000022
            | + function block  :  00000016 00000002
  04        address_setting_error_frame
            | Stack used (prev) :  000000A1 00000022
            | + function block  :  00000016 00000002
            |  Already listed
  04        KO_answer_frame
            | Stack used (prev) :  00000088 0000001E
            | + function block  :  00000018 00000002
            |  Already listed
  04        configuration_answer_frame
            | Stack used (prev) :  000000B8 00000024
            | + function block  :  00000020 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  0000001C 00000002
            |  Already listed
  04        write_ee_KO
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000001 00000004
  04        write_KO
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000001 00000004
            |  Already listed
  05          StrToChar
              | Stack used (prev) :  0000000C 00000004
              | + function block  :  00000000 00000002
              |  Already listed
  04        configuration_checking
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000007 00000002
  04        manual_reception_buffer_clear
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000001 00000004
            |  Already listed
  04        US_SENSE_SET
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
  04        PIR_SENSE_SET
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
  03      configuration_setting_frame
          | Stack used (prev) :  0000010C 00000026
          | + function block  :  00000015 00000002
  04        strncpy
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000004 00000002
            |  Already listed
  04        strcmp
            | Stack used (prev) :  0000006D 00000014
            | + function block  :  00000000 00000002
            |  Already listed
  05          ko_answer_all
              | Stack used (prev) :  000000A0 00000020
              | + function block  :  00000001 00000002
              |  Already listed
  05          frame_buffer_clear
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000004 00000004
              |  Already listed
  05          configuration_answer_frame
              | Stack used (prev) :  000000B8 00000024
              | + function block  :  00000020 00000002
              |  Already listed
  05          configuration_answer_frame
              | Stack used (prev) :  000000B8 00000024
              | + function block  :  00000020 00000002
              |  Already listed
  05          configuration_answer_frame
              | Stack used (prev) :  000000B8 00000024
              | + function block  :  00000020 00000002
              |  Already listed
  05          configuration_answer_frame
              | Stack used (prev) :  000000B8 00000024
              | + function block  :  00000020 00000002
              |  Already listed
  05          configuration_answer_frame
              | Stack used (prev) :  000000B8 00000024
              | + function block  :  00000020 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000010 00000008
              | + function block  :  0000001C 00000002
              |  Already listed
  04        diagnostic_frame
            | Stack used (prev) :  000000D8 00000026
            | + function block  :  00000011 00000002
  04        diagnostic_frame
            | Stack used (prev) :  000000D8 00000026
            | + function block  :  00000011 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  0000001C 00000002
            |  Already listed
  04        ID_setting
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000004
  04        system_reset
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        timer_flex_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  03      id_frame
          | Stack used (prev) :  000000E9 00000028
          | + function block  :  00000011 00000002
  03      send_frame_pp_ext_broad
          | Stack used (prev) :  00000010 00000008
          | + function block  :  0000001C 00000002
          |  Already listed
  04        write_ee_KO
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000001 00000004
            |  Already listed
  04        write_KO
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000001 00000004
            |  Already listed
  04        buzzer_ms
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
  04        led_blinking_disable
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000004 00000002
            |  Already listed
  03      scs_calibration
          | Stack used (prev) :  00000088 0000001E
          | + function block  :  00000008 00000002
  03      scs_calibration
          | Stack used (prev) :  00000088 0000001E
          | + function block  :  00000008 00000002
          |  Already listed
  03      application_decode_long
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
  04        regulation_timer_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
  03      application_decode_short
          | Stack used (prev) :  00000087 0000001C
          | + function block  :  00000000 00000002
  03      StrToChar
          | Stack used (prev) :  0000000C 00000004
          | + function block  :  00000000 00000002
          |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  0000001C 00000002
            |  Already listed
  04        CharToStr
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000002 00000002
            |  Already listed
  03      frame_M2_answer
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000018 00000004
  02    decode_SCS
        | Stack used (prev) :  00000121 0000002A
        | + function block  :  00000019 00000002
  03      id_frame
          | Stack used (prev) :  000000E9 00000028
          | + function block  :  00000011 00000002
          |  Already listed
  03      send_frame_pp_ext_broad
          | Stack used (prev) :  00000010 00000008
          | + function block  :  0000001C 00000002
          |  Already listed
  03      StrToChar
          | Stack used (prev) :  0000000C 00000004
          | + function block  :  00000000 00000002
          |  Already listed
  02    decode_id
        | Stack used (prev) :  000000FA 0000002A
        | + function block  :  00000008 00000002
  03      KO_parameter_initial
          | Stack used (prev) :  00000087 0000001E
          | + function block  :  00000002 00000002
          |  Already listed
  03      buzzer_ms
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
          |  Already listed
  03      StrToChar
          | Stack used (prev) :  0000000C 00000004
          | + function block  :  00000000 00000002
          |  Already listed
  03      configurator_to_KO
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000004
  02    load_parameter
        | Stack used (prev) :  00000089 00000020
        | + function block  :  00000005 00000002
  02    WDT_off
        | Stack used (prev) :  00000087 0000001A
        | + function block  :  00000000 00000002
  02    adc_initial
        | Stack used (prev) :  00000087 0000001A
        | + function block  :  00000000 00000002
  02    buzzer_ms
        | Stack used (prev) :  00000087 0000001A
        | + function block  :  00000000 00000002
        |  Already listed
  02    IO_Initial
        | Stack used (prev) :  00000087 0000001A
        | + function block  :  00000000 00000002
  05          Start_Time_Delay
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000000 00000002
  05          timer0_enable
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000000 00000002
  06            factor_divcalc
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000006 00000004
  06            factor_divcalc
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000006 00000004
                |  Already listed
  05          daylight_set_init
              | Stack used (prev) :  0000008D 0000001E
              | + function block  :  00000000 00000002
  05          ultWarmUpEvents
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000000 00000002
  04        function_service_init
            | Stack used (prev) :  0000008D 00000020
            | + function block  :  00000004 00000002
  09                  send_frame_pp_broad
                      | Stack used (prev) :  00000010 00000008
                      | + function block  :  00000011 00000002
                      |  Already listed
  09                  CharToStr
                      | Stack used (prev) :  0000000C 00000004
                      | + function block  :  00000002 00000002
                      |  Already listed
  08                Mode_frame_GR
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  0000000B 00000002
  07              GS_presence_send
                  | Stack used (prev) :  00000092 0000001C
                  | + function block  :  00000000 00000002
  08                Start_Time_Delay
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                Start_Time_Delay
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000000 00000002
                    |  Already listed
  07              WT_20s_detect
                  | Stack used (prev) :  00000087 0000001C
                  | + function block  :  00000000 00000002
  07              Stop_allTimer
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
  07              Start_Time_Delay
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Mode_frame_GR
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  0000000B 00000002
                  |  Already listed
  06            _Standby_state
                | Stack used (prev) :  00000092 0000001E
                | + function block  :  00000000 00000002
  09                  send_frame_pp_broad
                      | Stack used (prev) :  00000010 00000008
                      | + function block  :  00000011 00000002
                      |  Already listed
  09                  CharToStr
                      | Stack used (prev) :  0000000C 00000004
                      | + function block  :  00000002 00000002
                      |  Already listed
  08                frame_pp_on_off
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  0000000B 00000002
  08                regulation_timer_initial
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                Mode_frame_GR
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  0000000B 00000002
                    |  Already listed
  07              frame_ON_send
                  | Stack used (prev) :  00000092 0000001C
                  | + function block  :  00000000 00000002
  07              GS_presence_send
                  | Stack used (prev) :  00000092 0000001C
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Stop_allTimer
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Start_Time_Delay
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Mode_frame_GR
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  0000000B 00000002
                  |  Already listed
  06            _ReTrigger_State
                | Stack used (prev) :  00000092 0000001E
                | + function block  :  00000000 00000002
  08                buzzer_ms
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000000 00000002
                    |  Already listed
  07              Delay_Alert
                  | Stack used (prev) :  00000087 0000001C
                  | + function block  :  00000000 00000002
  08                frame_pp_on_off
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  0000000B 00000002
                    |  Already listed
  09                  send_frame_pp_broad
                      | Stack used (prev) :  00000010 00000008
                      | + function block  :  00000011 00000002
                      |  Already listed
  09                  CharToStr
                      | Stack used (prev) :  0000000C 00000004
                      | + function block  :  00000002 00000002
                      |  Already listed
  08                frame_presence
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  0000000C 00000002
  09                  strncpy
                      | Stack used (prev) :  0000000C 00000004
                      | + function block  :  00000004 00000002
                      |  Already listed
  10                    put_s
                        | Stack used (prev) :  0000000C 00000006
                        | + function block  :  00000002 00000002
                        |  Already listed
  10                    is_gateway_busy
                        | Stack used (prev) :  0000000C 00000004
                        | + function block  :  00000004 00000004
                        |  Already listed
  10                    delay_ms
                        | Stack used (prev) :  0000000C 00000004
                        | + function block  :  00000000 00000002
                        |  Already listed
  09                  org_ext_broad
                      | Stack used (prev) :  00000087 0000001A
                      | + function block  :  00000019 00000002
  09                  CharToStr
                      | Stack used (prev) :  0000000C 00000004
                      | + function block  :  00000002 00000002
                      |  Already listed
  08                dimmer_command
                    | Stack used (prev) :  000000A0 0000001C
                    | + function block  :  00000016 00000002
  08                Mode_frame_GR
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  0000000B 00000002
                    |  Already listed
  07              frame_OFF_send
                  | Stack used (prev) :  000000B6 0000001E
                  | + function block  :  00000000 00000002
  07              frame_OFF_send
                  | Stack used (prev) :  000000B6 0000001E
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              GS_presence_send
                  | Stack used (prev) :  00000092 0000001C
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              WT_20s_detect
                  | Stack used (prev) :  00000087 0000001C
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              WT_20s_detect
                  | Stack used (prev) :  00000087 0000001C
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Stop_allTimer
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Start_Time_Delay
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Mode_frame_GR
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  0000000B 00000002
                  |  Already listed
  06            _Maintain_state
                | Stack used (prev) :  000000B6 00000020
                | + function block  :  00000000 00000002
  08                frame_OFF_send
                    | Stack used (prev) :  000000B6 0000001E
                    | + function block  :  00000000 00000002
                    |  Already listed
  07              OFF_takeline
                  | Stack used (prev) :  000000B6 00000020
                  | + function block  :  00000000 00000002
  08                frame_ON_send
                    | Stack used (prev) :  00000092 0000001C
                    | + function block  :  00000000 00000002
                    |  Already listed
  09                  Start_Time_Delay
                      | Stack used (prev) :  00000087 0000001A
                      | + function block  :  00000000 00000002
                      |  Already listed
  08                Call_detect_delay
                    | Stack used (prev) :  00000087 0000001C
                    | + function block  :  00000000 00000002
  08                Mode_frame_GR
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  0000000B 00000002
                    |  Already listed
  07              ON_takeline
                  | Stack used (prev) :  00000092 0000001E
                  | + function block  :  00000000 00000002
  07              frame_OFF_send
                  | Stack used (prev) :  000000B6 0000001E
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              frame_ON_send
                  | Stack used (prev) :  00000092 0000001C
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              GS_presence_send
                  | Stack used (prev) :  00000092 0000001C
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Call_detect_delay
                  | Stack used (prev) :  00000087 0000001C
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Start_Time_Delay
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Mode_frame_GR
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  0000000B 00000002
                  |  Already listed
  06            _Initial_state
                | Stack used (prev) :  000000B6 00000022
                | + function block  :  00000000 00000002
  08                frame_ON_send
                    | Stack used (prev) :  00000092 0000001C
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                frame_ON_send
                    | Stack used (prev) :  00000092 0000001C
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                frame_ON_send
                    | Stack used (prev) :  00000092 0000001C
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                frame_ON_send
                    | Stack used (prev) :  00000092 0000001C
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                WT_20s_detect
                    | Stack used (prev) :  00000087 0000001C
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                WT_20s_detect
                    | Stack used (prev) :  00000087 0000001C
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                Call_detect_delay
                    | Stack used (prev) :  00000087 0000001C
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                Call_detect_delay
                    | Stack used (prev) :  00000087 0000001C
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                Call_detect_delay
                    | Stack used (prev) :  00000087 0000001C
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                Stop_allTimer
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                Start_Time_Delay
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                Start_Time_Delay
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                Start_Time_Delay
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                Start_Time_Delay
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                Start_Time_Delay
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                Start_Time_Delay
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                regulation_timer_initial
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000000 00000002
                    |  Already listed
  09                  buzzer_ms
                      | Stack used (prev) :  00000087 0000001A
                      | + function block  :  00000000 00000002
                      |  Already listed
  09                  delay_ms
                      | Stack used (prev) :  0000000C 00000004
                      | + function block  :  00000000 00000002
                      |  Already listed
  10                    read_adc10bit
                        | Stack used (prev) :  00000087 0000001C
                        | + function block  :  00000000 00000002
                        |  Already listed
  10                    real_daylight_calc
                        | Stack used (prev) :  00000087 0000001A
                        | + function block  :  00000004 00000004
  09                  get_dl_level
                      | Stack used (prev) :  0000008B 0000001E
                      | + function block  :  00000000 00000002
  09                  daylight_set_init
                      | Stack used (prev) :  0000008D 0000001E
                      | + function block  :  00000000 00000002
                      |  Already listed
  08                DLL_setpoint
                    | Stack used (prev) :  0000008D 00000020
                    | + function block  :  00000001 00000002
  08                frame_M2_answer
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000018 00000004
                    |  Already listed
  08                Mode_frame_GR
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  0000000B 00000002
                    |  Already listed
  07              Check_SCS_received
                  | Stack used (prev) :  0000009F 00000022
                  | + function block  :  00000000 00000002
  07              Call_detect_delay
                  | Stack used (prev) :  00000087 0000001C
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Stop_allTimer
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Start_Time_Delay
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Start_Time_Delay
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Mode_frame_GR
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  0000000B 00000002
                  |  Already listed
  06            function_check_status
                | Stack used (prev) :  0000009F 00000024
                | + function block  :  00000000 00000002
  05          Function_LM_GR
              | Stack used (prev) :  000000B6 00000026
              | + function block  :  00000000 00000002
  06            Dled_light_on_ms
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000000 00000002
  08                delay_us
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000000 00000002
                    |  Already listed
  11                      delay_us
                          | Stack used (prev) :  00000087 0000001A
                          | + function block  :  00000000 00000002
                          |  Already listed
  10                    read_adc8bit
                        | Stack used (prev) :  00000087 0000001C
                        | + function block  :  00000000 00000002
  09                  Ultrasonic_detection
                      | Stack used (prev) :  00000087 0000001E
                      | + function block  :  00000002 00000002
  09                  US_SENSE_SET
                      | Stack used (prev) :  00000087 0000001A
                      | + function block  :  00000000 00000002
                      |  Already listed
  08                us_detection
                    | Stack used (prev) :  00000089 00000020
                    | + function block  :  00000000 00000002
  07              get_us
                  | Stack used (prev) :  00000089 00000022
                  | + function block  :  00000001 00000002
  07              get_us
                  | Stack used (prev) :  00000089 00000022
                  | + function block  :  00000001 00000002
                  |  Already listed
  07              get_us
                  | Stack used (prev) :  00000089 00000022
                  | + function block  :  00000001 00000002
                  |  Already listed
  08                read_adc8bit
                    | Stack used (prev) :  00000087 0000001C
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                PIR_SENSE_SET
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000000 00000002
                    |  Already listed
  07              PIR_detect
                  | Stack used (prev) :  00000087 0000001E
                  | + function block  :  00000002 00000002
  06            motion_detect
                | Stack used (prev) :  0000008A 00000024
                | + function block  :  00000001 00000002
  05          occupancy_detect
              | Stack used (prev) :  0000008B 00000026
              | + function block  :  00000000 00000002
  06            get_dl_level
                | Stack used (prev) :  0000008B 0000001E
                | + function block  :  00000000 00000002
                |  Already listed
  06            PofL_calc
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000000 00000004
  06            PofL_calc
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000000 00000004
                |  Already listed
  06            PofL_calc
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000000 00000004
                |  Already listed
  05          daylight_service
              | Stack used (prev) :  0000008B 00000020
              | + function block  :  00000004 00000002
  07              regulation_timer_initial
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              regulation_timer_initial
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              regulation_timer_initial
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              factor_divcalc
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000006 00000004
                  |  Already listed
  07              dimmer_command
                  | Stack used (prev) :  000000A0 0000001C
                  | + function block  :  00000016 00000002
                  |  Already listed
  07              dimmer_command
                  | Stack used (prev) :  000000A0 0000001C
                  | + function block  :  00000016 00000002
                  |  Already listed
  07              dimmer_command
                  | Stack used (prev) :  000000A0 0000001C
                  | + function block  :  00000016 00000002
                  |  Already listed
  07              dimmer_command
                  | Stack used (prev) :  000000A0 0000001C
                  | + function block  :  00000016 00000002
                  |  Already listed
  07              dimmer_command
                  | Stack used (prev) :  000000A0 0000001C
                  | + function block  :  00000016 00000002
                  |  Already listed
  06            Dimmer_regulation
                | Stack used (prev) :  000000B6 0000001E
                | + function block  :  00000004 00000002
  07              regulation_timer_initial
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              dimmer_command
                  | Stack used (prev) :  000000A0 0000001C
                  | + function block  :  00000016 00000002
                  |  Already listed
  07              dimmer_command
                  | Stack used (prev) :  000000A0 0000001C
                  | + function block  :  00000016 00000002
                  |  Already listed
  06            Actuator_regulation
                | Stack used (prev) :  000000B6 0000001E
                | + function block  :  00000002 00000002
  05          Light_regulation
              | Stack used (prev) :  000000BA 00000020
              | + function block  :  00000000 00000002
  04        Function_KO168
            | Stack used (prev) :  000000BA 00000028
            | + function block  :  00000000 00000002
  05          occupancy_detect
              | Stack used (prev) :  0000008B 00000026
              | + function block  :  00000000 00000002
              |  Already listed
  05          Start_Time_Delay
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000000 00000002
              |  Already listed
  05          frame_presence
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  0000000C 00000002
              |  Already listed
  05          frame_presence
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  0000000C 00000002
              |  Already listed
  04        Function_KO165
            | Stack used (prev) :  00000093 00000028
            | + function block  :  00000000 00000002
  04        Function_KO166
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
  05          occupancy_detect
              | Stack used (prev) :  0000008B 00000026
              | + function block  :  00000000 00000002
              |  Already listed
  05          Start_Time_Delay
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000000 00000002
              |  Already listed
  05          Start_Time_Delay
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000000 00000002
              |  Already listed
  05          frame_presence
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  0000000C 00000002
              |  Already listed
  05          frame_presence
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  0000000C 00000002
              |  Already listed
  05          relay_timer_initial
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000000 00000002
  05          get_dl_level
              | Stack used (prev) :  0000008B 0000001E
              | + function block  :  00000000 00000002
              |  Already listed
  04        Function_KO128
            | Stack used (prev) :  00000093 00000028
            | + function block  :  00000000 00000002
  05          Function_LM_GR
              | Stack used (prev) :  000000B6 00000026
              | + function block  :  00000000 00000002
              |  Already listed
  05          occupancy_detect
              | Stack used (prev) :  0000008B 00000026
              | + function block  :  00000000 00000002
              |  Already listed
  05          Light_regulation
              | Stack used (prev) :  000000BA 00000020
              | + function block  :  00000000 00000002
              |  Already listed
  04        Function_KO119
            | Stack used (prev) :  000000BA 00000028
            | + function block  :  00000000 00000002
  04        StrToChar
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000000 00000002
            |  Already listed
  03      function_service
          | Stack used (prev) :  000000BA 0000002A
          | + function block  :  00000000 00000002
  03      diagnostic_frame
          | Stack used (prev) :  000000D8 00000026
          | + function block  :  00000011 00000002
          |  Already listed
  03      send_frame_pp_ext_broad
          | Stack used (prev) :  00000010 00000008
          | + function block  :  0000001C 00000002
          |  Already listed
  03      get_key
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
  03      led_blinking_normal
          | Stack used (prev) :  00000010 00000004
          | + function block  :  00000003 00000004
          |  Already listed
  03      led_blinking_normal
          | Stack used (prev) :  00000010 00000004
          | + function block  :  00000003 00000004
          |  Already listed
  03      timer_flex_initial
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
          |  Already listed
  03      timer_flex_initial
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
          |  Already listed
  03      led_blinking_disable
          | Stack used (prev) :  0000000C 00000004
          | + function block  :  00000000 00000002
          |  Already listed
  03      led_blinking
          | Stack used (prev) :  0000000C 00000004
          | + function block  :  00000004 00000002
          |  Already listed
  03      led_blinking
          | Stack used (prev) :  0000000C 00000004
          | + function block  :  00000004 00000002
          |  Already listed
  04        send_group_pnl_frame
            | Stack used (prev) :  0000002C 0000000A
            | + function block  :  00000018 00000002
            |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  00000011 00000002
            |  Already listed
  04        delay_ms
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000000 00000002
            |  Already listed
  05          KO_parameter_initial
              | Stack used (prev) :  00000087 0000001E
              | + function block  :  00000002 00000002
              |  Already listed
  04        load_default_advance_parameter
            | Stack used (prev) :  00000089 00000020
            | + function block  :  00000002 00000002
  04        led_blinking_normal
            | Stack used (prev) :  00000010 00000004
            | + function block  :  00000003 00000004
            |  Already listed
  04        led_blinking_normal
            | Stack used (prev) :  00000010 00000004
            | + function block  :  00000003 00000004
            |  Already listed
  04        led_blinking_normal
            | Stack used (prev) :  00000010 00000004
            | + function block  :  00000003 00000004
            |  Already listed
  04        led_blinking_normal
            | Stack used (prev) :  00000010 00000004
            | + function block  :  00000003 00000004
            |  Already listed
  04        led_blinking_normal
            | Stack used (prev) :  00000010 00000004
            | + function block  :  00000003 00000004
            |  Already listed
  04        timer_flex_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        timer_flex_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000004 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000004 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000004 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000004 00000002
            |  Already listed
  03      scs_pnl_none_confed_slave
          | Stack used (prev) :  0000008B 00000022
          | + function block  :  00000000 00000002
  04        send_group_pnl_frame
            | Stack used (prev) :  0000002C 0000000A
            | + function block  :  00000018 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  00000011 00000002
            |  Already listed
  04        CharToStr
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000002 00000002
            |  Already listed
  04        delay_ms
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking_normal
            | Stack used (prev) :  00000010 00000004
            | + function block  :  00000003 00000004
            |  Already listed
  04        led_blinking_normal
            | Stack used (prev) :  00000010 00000004
            | + function block  :  00000003 00000004
            |  Already listed
  04        led_blinking_normal
            | Stack used (prev) :  00000010 00000004
            | + function block  :  00000003 00000004
            |  Already listed
  04        led_blinking_normal
            | Stack used (prev) :  00000010 00000004
            | + function block  :  00000003 00000004
            |  Already listed
  04        timer_flex2_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
  04        timer_flex_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        timer_flex_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking_disable
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking_disable
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking_disable
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000004 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000004 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000004 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000004 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000004 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000004 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000004 00000002
            |  Already listed
  03      scs_pnl_advance_slave
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000014 00000004
  04        send_group_pnl_frame
            | Stack used (prev) :  0000002C 0000000A
            | + function block  :  00000018 00000002
            |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  00000011 00000002
            |  Already listed
  04        system_reset
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        PnL_NONE_end
            | Stack used (prev) :  0000002C 0000000C
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking_stage2_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
  04        load_default_advance_parameter
            | Stack used (prev) :  00000089 00000020
            | + function block  :  00000002 00000002
            |  Already listed
  04        load_default_advance_parameter
            | Stack used (prev) :  00000089 00000020
            | + function block  :  00000002 00000002
            |  Already listed
  04        load_default_advance_parameter
            | Stack used (prev) :  00000089 00000020
            | + function block  :  00000002 00000002
            |  Already listed
  04        load_default_advance_parameter
            | Stack used (prev) :  00000089 00000020
            | + function block  :  00000002 00000002
            |  Already listed
  04        led_blinking_normal
            | Stack used (prev) :  00000010 00000004
            | + function block  :  00000003 00000004
            |  Already listed
  04        led_blinking_normal
            | Stack used (prev) :  00000010 00000004
            | + function block  :  00000003 00000004
            |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000010 00000008
              | + function block  :  0000001C 00000002
              |  Already listed
  04        frame_send_group_request
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
  04        frame_send_end_pnl
            | Stack used (prev) :  0000002C 0000000A
            | + function block  :  00000000 00000002
            |  Already listed
  04        frame_send_end_pnl
            | Stack used (prev) :  0000002C 0000000A
            | + function block  :  00000000 00000002
            |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000010 00000008
              | + function block  :  0000001C 00000002
              |  Already listed
  05          CharToStr
              | Stack used (prev) :  0000000C 00000004
              | + function block  :  00000002 00000002
              |  Already listed
  04        frame_send_start_pnl_group_confed
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000014 00000004
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000010 00000008
              | + function block  :  0000001C 00000002
              |  Already listed
  04        frame_send_start_pnl_none_group_confed
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
  04        frame_send_enable_automatic_control
            | Stack used (prev) :  00000021 0000000A
            | + function block  :  00000000 00000002
            |  Already listed
  05          send_frame_pp_broad
              | Stack used (prev) :  00000010 00000008
              | + function block  :  00000011 00000002
              |  Already listed
  04        frame_send_disable_automatic_control
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
  04        factory_default
            | Stack used (prev) :  00000087 0000001E
            | + function block  :  00000035 00000002
            |  Already listed
  04        timer_flex_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        timer_flex_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking_disable
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000004 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000004 00000002
            |  Already listed
  03      scs_pnl_none_confed_master
          | Stack used (prev) :  000000BC 00000022
          | + function block  :  00000000 00000002
  03      scs_pnl_none_confed_master
          | Stack used (prev) :  000000BC 00000022
          | + function block  :  00000000 00000002
          |  Already listed
  04        strncpy
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000004 00000002
            |  Already listed
  04        send_group_pnl_frame
            | Stack used (prev) :  0000002C 0000000A
            | + function block  :  00000018 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  00000011 00000002
            |  Already listed
  04        system_reset
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        CharToStr
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000002 00000002
            |  Already listed
  04        StrToChar
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000000 00000002
            |  Already listed
  04        delay_ms
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000000 00000002
            |  Already listed
  04        PnL_ad_end
            | Stack used (prev) :  00000044 0000000C
            | + function block  :  00000014 00000002
            |  Already listed
  04        led_blinking_stage2_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        factory_default
            | Stack used (prev) :  00000087 0000001E
            | + function block  :  00000035 00000002
            |  Already listed
  04        timer_flex_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        timer_flex_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        timer_flex_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        timer_flex_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking_disable
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking_disable
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking_disable
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking_disable
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000004 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000004 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000004 00000002
            |  Already listed
  03      scs_pnl_advance_master
          | Stack used (prev) :  000000BC 00000020
          | + function block  :  00000014 00000002
  04        buzzer_ms
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        get_dl_level
            | Stack used (prev) :  0000008B 0000001E
            | + function block  :  00000000 00000002
            |  Already listed
  04        get_dl_level
            | Stack used (prev) :  0000008B 0000001E
            | + function block  :  00000000 00000002
            |  Already listed
  03      factory_calibration
          | Stack used (prev) :  0000008B 00000020
          | + function block  :  00000004 00000002
  04        strncpy
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000004 00000002
            |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  00000011 00000002
            |  Already listed
  04        CharToStr
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000002 00000002
            |  Already listed
  04        timer_flex_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking_disable
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000004 00000002
            |  Already listed
  04        is_scenario_full
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000003 00000004
  04        is_scenario_full
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000003 00000004
            |  Already listed
  03      ir_pnl
          | Stack used (prev) :  0000008A 0000001E
          | + function block  :  00000018 00000002
  02    service_main
        | Stack used (prev) :  000000E9 0000002C
        | + function block  :  00000000 00000002
  03      put_s
          | Stack used (prev) :  0000000C 00000006
          | + function block  :  00000002 00000002
          |  Already listed
  03      is_gateway_busy
          | Stack used (prev) :  0000000C 00000004
          | + function block  :  00000004 00000004
          |  Already listed
  03      get_key
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
          |  Already listed
  03      StrToChar
          | Stack used (prev) :  0000000C 00000004
          | + function block  :  00000000 00000002
          |  Already listed
  03      delay_ms
          | Stack used (prev) :  0000000C 00000004
          | + function block  :  00000000 00000002
          |  Already listed
  03      led_blinking_normal
          | Stack used (prev) :  00000010 00000004
          | + function block  :  00000003 00000004
          |  Already listed
  03      led_blinking
          | Stack used (prev) :  0000000C 00000004
          | + function block  :  00000004 00000002
          |  Already listed
  02    start_conf
        | Stack used (prev) :  00000087 0000001A
        | + function block  :  0000000D 00000004
  03      reception_buffer_clear
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
  03      ir_buffer_clear
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
  02    all_reception_buffer_clear
        | Stack used (prev) :  00000087 0000001A
        | + function block  :  00000001 00000004
  03      get_key
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
          |  Already listed
  03      key_time_clear
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
  02    button_press_detect
        | Stack used (prev) :  00000087 0000001C
        | + function block  :  00000000 00000002
  02    timer2_enable
        | Stack used (prev) :  00000087 0000001A
        | + function block  :  00000000 00000002
  02    timer0_enable
        | Stack used (prev) :  00000087 0000001A
        | + function block  :  00000000 00000002
        |  Already listed
  03      strncpy
          | Stack used (prev) :  0000000C 00000004
          | + function block  :  00000004 00000002
          |  Already listed
  03      frame_OFF_send
          | Stack used (prev) :  000000B6 0000001E
          | + function block  :  00000000 00000002
          |  Already listed
  03      frame_ON_send
          | Stack used (prev) :  00000092 0000001C
          | + function block  :  00000000 00000002
          |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  00000011 00000002
            |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  00000011 00000002
            |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  00000011 00000002
            |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  00000011 00000002
            |  Already listed
  04        CharToStr
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000002 00000002
            |  Already listed
  03      send_group_frame
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  0000001E 00000004
  03      send_group_pnl_frame
          | Stack used (prev) :  0000002C 0000000A
          | + function block  :  00000018 00000002
          |  Already listed
  04        dimmer_convert
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
  04        dimmer_convert
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  00000011 00000002
            |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  00000011 00000002
            |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  00000011 00000002
            |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  00000011 00000002
            |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  00000011 00000002
            |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000010 00000008
            | + function block  :  00000011 00000002
            |  Already listed
  04        CharToStr
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000002 00000002
            |  Already listed
  03      send_aux_frame
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000011 00000004
  03      send_frame_pp_ext_broad
          | Stack used (prev) :  00000010 00000008
          | + function block  :  0000001C 00000002
          |  Already listed
  03      send_frame_pp_broad
          | Stack used (prev) :  00000010 00000008
          | + function block  :  00000011 00000002
          |  Already listed
  03      read_KO
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
          |  Already listed
  03      write_ee_KO
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000001 00000004
          |  Already listed
  03      write_KO
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000001 00000004
          |  Already listed
  03      system_reset
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
          |  Already listed
  03      buzzer_ms
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
          |  Already listed
  03      CharToStr
          | Stack used (prev) :  0000000C 00000004
          | + function block  :  00000002 00000002
          |  Already listed
  03      StrToChar
          | Stack used (prev) :  0000000C 00000004
          | + function block  :  00000000 00000002
          |  Already listed
  03      led_blinking_normal
          | Stack used (prev) :  00000010 00000004
          | + function block  :  00000003 00000004
          |  Already listed
  03      factory_default
          | Stack used (prev) :  00000087 0000001E
          | + function block  :  00000035 00000002
          |  Already listed
  03      timer_dimmer_initial
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
  03      timer_flex_initial
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
          |  Already listed
  03      led_blinking
          | Stack used (prev) :  0000000C 00000004
          | + function block  :  00000004 00000002
          |  Already listed
  03      is_scenario_full
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000003 00000004
          |  Already listed
  03      timer_IR_initial
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
  03      _calculate_crc
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
  04        delay_ms
            | Stack used (prev) :  0000000C 00000004
            | + function block  :  00000000 00000002
            |  Already listed
  04        _calculate_crc
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        put_c1
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
  04        put_c1
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  03      put_s1
          | Stack used (prev) :  00000087 0000001C
          | + function block  :  00000005 00000002
  02    decode_IR
        | Stack used (prev) :  000000BC 00000020
        | + function block  :  00000042 00000002
  03      PWM_output_init
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
  02    IR_36kHz
        | Stack used (prev) :  00000087 0000001C
        | + function block  :  00000000 00000002
  02    init_USART1
        | Stack used (prev) :  00000087 0000001A
        | + function block  :  00000000 00000002
  01  main
      | Stack used (prev) :  0000013A 0000002E
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  0000013A 00000030


  ->Sub-tree of type: Function tree
                             CSTACK   RSTACK
    | Stack used (prev) :  0000013A 00000030
  01  __low_level_init
      | Stack used (prev) :  0000013A 00000030
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  0000013A 00000032


  ->Sub-tree of type: Function tree
                             CSTACK   RSTACK
    | Stack used (prev) :  0000013A 00000032
  02    __flashcpy
        | Stack used (prev) :  0000013A 00000032
        | + function block  :  00000000 00000002
  02    __memclr
        | Stack used (prev) :  0000013A 00000032
        | + function block  :  00000000 00000002
  01  __segment_init
      | Stack used (prev) :  0000013A 00000034
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  0000013A 00000036




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          00000000 - 0000007B          7C   com    1
NEAR_F               CODE          0000007C - 000002B8         23D   rel    0
SWITCH               CODE          000002BA - 00000507         24E   rel    1
INITTAB              CODE          00000508 - 00000513           C   rel    0
CODE                 CODE          00000514 - 0000B9F1        B4DE   rel    1
TINY_ID              CODE               0000B9F2                     dse    0
NEAR_ID              CODE          0000B9F2 - 0000BCE6         2F5   rel    0
ABSOLUTE             DATA               0000001F                     rel    0
                     DATA               00000020                   
                     DATA               00000021                   
                     DATA          00000027 - 00000028           2 
                     DATA          0000002A - 0000002B           2 
                     DATA          00000044 - 00000048           5 
                     DATA          00000054 - 00000054           1 
                     DATA          00000060 - 00000060           1 
                     DATA          0000006E - 0000006E           1 
                     DATA          00000078 - 0000007A           3 
                     DATA          0000007C - 0000007C           1 
                     DATA          0000007E - 0000007E           1 
                     DATA          00000080 - 00000081           2 
                     DATA          00000086 - 0000008B           6 
                     DATA          000000B0 - 000000B4           5 
                     DATA          000000B6 - 000000B6           1 
                     DATA          000000C0 - 000000C2           3 
                     DATA          000000C4 - 000000C6           3 
                     DATA          000000C8 - 000000CA           3 
                     DATA          000000CC - 000000CE           3 
NEAR_I               DATA          00000100 - 000003F4         2F5   rel    0
NEAR_Z               DATA          000003F5 - 000007B2         3BE   rel    0
RSTACK               DATA          000007B3 - 000007F2          40   dse    0
CSTACK               DATA          000007F3 - 000008F2         100   dse    0
EEPROM_I             XDATA         00000000 - 000000F1          F2   rel    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 48 358 bytes of CODE  memory
  2 035 bytes of DATA  memory (+ 48 absolute )
    242 bytes of XDATA memory

Errors: none
Warnings: none

