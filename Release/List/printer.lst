###############################################################################
#                                                                             #
# IAR C/C++ Compiler V5.30.0.50166/W32 for Atmel AVR    11/Dec/2009  23:24:32 #
# Copyright 1996-2009 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  D:\avr\LM_Finial_Test\printer.c                          #
#    Command line =  D:\avr\LM_Finial_Test\printer.c --cpu=m644p -ms -o       #
#                    D:\avr\LM_Finial_Test\Release\Obj\ -D NDEBUG -D LM018    #
#                    -D FINAL_VERSION2 -lCN D:\avr\LM_Finial_Test\Release\Lis #
#                    t\ -lA D:\avr\LM_Finial_Test\Release\List\               #
#                    --diag_suppress Pa082,Pe167,Pe186                        #
#                    --initializers_in_flash -z6 --no_inline --no_cross_call  #
#                    --no_tbaa -DENABLE_BIT_DEFINITIONS -e -I "C:\Program     #
#                    Files\IAR Systems\Embedded Workbench 5.3\avr\INC\" -I    #
#                    "C:\Program Files\IAR Systems\Embedded Workbench         #
#                    5.3\avr\INC\CLIB\" --eeprom_size 2048                    #
#    List file    =  D:\avr\LM_Finial_Test\Release\List\printer.lst           #
#    Object file  =  D:\avr\LM_Finial_Test\Release\Obj\printer.r90            #
#                                                                             #
#                                                                             #
###############################################################################

D:\avr\LM_Finial_Test\printer.c
      1          #include <ioavr.h>

   \                                 In  segment ABSOLUTE, at 0xce
   \   <__C2> volatile __io _A_UDR1
   \                     _A_UDR1:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xcc
   \   <__C6> volatile __io _A_UBRR1
   \                     _A_UBRR1:
   \   00000000                      DS8 2

   \                                 In  segment ABSOLUTE, at 0xca
   \   <__C9> volatile __io _A_UCSR1C
   \                     _A_UCSR1C:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xc9
   \   <__C12> volatile __io _A_UCSR1B
   \                     _A_UCSR1B:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xc8
   \   <__C15> volatile __io _A_UCSR1A
   \                     _A_UCSR1A:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x73
   \   <__C108> volatile __io _A_PCMSK3
   \                     _A_PCMSK3:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x69
   \   <__C129> volatile __io _A_EICRA
   \                     _A_EICRA:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x68
   \   <__C132> volatile __io _A_PCICR
   \                     _A_PCICR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x3d
   \   <__C210> volatile __io _A_EIMSK
   \                     _A_EIMSK:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x3b
   \   <__C216> volatile __io _A_PCIFR
   \                     _A_PCIFR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x29
   \   <__C234> volatile __io _A_PIND
   \                     _A_PIND:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x28
   \   <__C237> volatile __io _A_PORTC
   \                     _A_PORTC:
   \   00000000                      DS8 1
      2          #include <inavr.h>
      3          #include <string.h>
      4          #include "printer.h"
      5          #include "global_variable.h"
      6          #include "decode_scs_next.h"
      7          #include "DRI_LCD.H"
      8          #include "DRI_TOUCH.H"
      9          #include "application.h"
     10          #include <string.h>
     11          #include "decode_scs.h"
     12          #include "usart.h"
     13          #include <math.h>
     14          #include "dataflash.h"
     15          /*
     16          #include "board.h"
     17          #include "usart.h"
     18          #include "decode_scs.h"
     19          #include "stdlib.h"
     20          #include "moudle_SCS.h"
     21          #include "PIR.h"
     22          #include "configuration.h"
     23          #include "global_variable.h"
     24          #include "IR.h"
     25          #include "application.h"
     26          #include "decode_scs_next.h"
     27          #include "moudle_scs.h"
     28          #include "string.h"
     29          #include <intrinsics.h>
     30          #include "function_service.h"
     31          #include "font.h"
     32          #include "DRI_TOUCH.h"
     33          #include "printer.h"
     34          #include "DRI_LCD.H"
     35          */
     36          // 	1      2      3      A
     37          //30 48  60 48  90 48  120 48
     38          // 	4      5      6      B
     39          //30 72  60 72  90 72  120 72
     40          // 	7      8      9      C
     41          //30 96  60 96  90 96  120 96
     42          // 	E      0      F      D
     43          //30 120 60 120 90 120 120 120
     44          static struct S_location key_initial[16]=
     45          {
     46          	60,120,0,0, //0
     47          	30,48,0,0,	//1	
     48          	60,48,0,0,	//2
     49          	90,48,0,0,	//3
     50          	30,72,0,0,	//4
     51          	60,72,0,0,	//5
     52          	90,72,0,0,  //6
     53          	30,96,0,0, 	//7
     54          	60,96,0,0,	//8 
     55          	90,96,0,0, 	//9 
     56          	120,48,0,0,	//A
     57          	120,72,0,0,	//B
     58          	120,96,0,0,	//C
     59          	120,120,0,0,//D
     60          	30,120,0,0,	//E 
     61          	90,120,0,0	//F 
     62          };

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     63          unsigned char g_touched = 0;
   \                     g_touched:
   \   00000000                      DS8 1
     64          #pragma vector = PCINT3_vect

   \                                 In  segment CODE, align 2, keep-with-next
     65          __interrupt void TOUCH_INT(void)
   \                     TOUCH_INT:
     66          {
   \   00000000   930A               ST      -Y, R16
     67          	g_touched = 1;
   \   00000002   E001               LDI     R16, 1
   \   00000004   9300....           STS     g_touched, R16
     68          }
   \   00000008   9109               LD      R16, Y+
   \   0000000A   9518               RETI
     69          

   \                                 In  segment CODE, align 2, keep-with-next
     70          void print_initial(void)
   \                     print_initial:
     71          {
     72          	// USART1 initialization
     73          	// Communication Parameters: 8 Data, 1 Stop, No Parity
     74          	// USART1 Receiver: Off
     75          	// USART1 Transmitter: On
     76          	// USART1 Mode: Asynchronous
     77          	// USART1 Baud Rate: 9600
     78          	UCSR1A=0x00;
   \   00000000   E000               LDI     R16, 0
   \   00000002   9300....           STS     _A_UCSR1A, R16
     79          	UCSR1B=0x08;
   \   00000006   E008               LDI     R16, 8
   \   00000008   9300....           STS     _A_UCSR1B, R16
     80          	UCSR1C=0x06;
   \   0000000C   E006               LDI     R16, 6
   \   0000000E   9300....           STS     _A_UCSR1C, R16
     81          	UBRR1H=0x00;
   \   00000012   E000               LDI     R16, 0
   \   00000014   930000CD           STS     205, R16
     82          	UBRR1L=0x2F;
   \   00000018   E20F               LDI     R16, 47
   \   0000001A   9300....           STS     _A_UBRR1, R16
     83          }
   \   0000001E   9508               RET
   \   00000020                      REQUIRE _A_UBRR1
   \   00000020                      REQUIRE _A_UCSR1B
   \   00000020                      REQUIRE _A_UCSR1C
   \   00000020                      REQUIRE _A_UCSR1A
     84          

   \                                 In  segment CODE, align 2, keep-with-next
     85          void print_out(unsigned char *data)
   \                     print_out:
   \                     ??print_out_0:
     86          {
     87          	do{
     88          		while ((UCSR1A & DATA_REGISTER_EMPTY)==0);
   \   00000000   9120....           LDS     R18, _A_UCSR1A
   \   00000004   2F32               MOV     R19, R18
   \   00000006   FF35               SBRS    R19, 5
   \   00000008   CFFB               RJMP    ??print_out_0
     89          		UDR1 = *data;
   \   0000000A   01F8               MOVW    R31:R30, R17:R16
   \   0000000C   8120               LD      R18, Z
   \   0000000E   9320....           STS     _A_UDR1, R18
     90          	}while(*(++data));
   \   00000012   5F0F               SUBI    R16, 255
   \   00000014   4F1F               SBCI    R17, 255
   \   00000016   01F8               MOVW    R31:R30, R17:R16
   \   00000018   8120               LD      R18, Z
   \   0000001A   2322               TST     R18
   \   0000001C   F789               BRNE    ??print_out_0
     91          }
   \   0000001E   9508               RET
   \   00000020                      REQUIRE _A_UDR1
   \   00000020                      REQUIRE _A_UCSR1A
     92          

   \                                 In  segment CODE, align 2, keep-with-next
     93          void print_out_flash(unsigned char __flash *data)
   \                     print_out_flash:
   \                     ??print_out_flash_0:
     94          {
     95          	do{
     96          		while ((UCSR1A & DATA_REGISTER_EMPTY)==0);
   \   00000000   9120....           LDS     R18, _A_UCSR1A
   \   00000004   2F32               MOV     R19, R18
   \   00000006   FF35               SBRS    R19, 5
   \   00000008   CFFB               RJMP    ??print_out_flash_0
     97          		UDR1 = *data;
   \   0000000A   01F8               MOVW    R31:R30, R17:R16
   \   0000000C   9124               LPM     R18, Z
   \   0000000E   9320....           STS     _A_UDR1, R18
     98          	}while(*(++data));
   \   00000012   5F0F               SUBI    R16, 255
   \   00000014   4F1F               SBCI    R17, 255
   \   00000016   01F8               MOVW    R31:R30, R17:R16
   \   00000018   9124               LPM     R18, Z
   \   0000001A   2322               TST     R18
   \   0000001C   F789               BRNE    ??print_out_flash_0
     99          }
   \   0000001E   9508               RET
   \   00000020                      REQUIRE _A_UDR1
   \   00000020                      REQUIRE _A_UCSR1A
    100          

   \                                 In  segment NEAR_F, align 1, keep-with-next
    101          __flash unsigned char label_1[] = "^XA~TA0~JSO^LT0^MMT^MNW^MTT^PON^PMN^LH0,0^JMA^PR2,2^MD30^JUS^LRN^CI0^XZ~DG001.GRF,00768,012,,:::::::::::::U0C,T024,T0H4,T082,S0102,S0401,S0C01,N03FE010H080,L01C0H0160H080,K0180,K0C0O040,J020,J0C0P020,I020Q0E0,I040N0407,I080O030,H010O0180,H020H038008018,H040070H014040,H080180H0206,H08040I0H40,01030J0A,05040I010,0210,0220,0240,04C0,05,:06,04,,::::::::::::::::::^XA^LL0120^PW296^FT160,64^XG001.GRF,1,1^FS^BY36,36^FT250,59^BXN,2,200,0,0,1";
   \                     label_1:
   \   00000000   585E7E414154       DC8 5EH, 58H, 41H, 7EH, 54H, 41H, 30H, 7EH
   \              7E30        
   \   00000008   534A5E4F544C       DC8 4AH, 53H, 4FH, 5EH, 4CH, 54H, 30H, 5EH
   \              5E30        
   \   00000010   4D4D5E544E4D       DC8 4DH, 4DH, 54H, 5EH, 4DH, 4EH, 57H, 5EH
   \              5E57        
   \   00000018   544D5E544F50       DC8 4DH, 54H, 54H, 5EH, 50H, 4FH, 4EH, 5EH
   \              5E4E        
   \   00000020   4D505E4E484C       DC8 50H, 4DH, 4EH, 5EH, 4CH, 48H, 30H, 2CH
   \              2C30        
   \   00000028   5E304D4A5E41       DC8 30H, 5EH, 4AH, 4DH, 41H, 5EH, 50H, 52H
   \              5250        
   \   00000030   2C325E32444D       DC8 32H, 2CH, 32H, 5EH, 4DH, 44H, 33H, 30H
   \              3033        
   \   00000038   4A5E53554C5E       DC8 5EH, 4AH, 55H, 53H, 5EH, 4CH, 52H, 4EH
   \              4E52        
   \   00000040   435E3049585E       DC8 5EH, 43H, 49H, 30H, 5EH, 58H, 5AH, 7EH
   \              7E5A        
   \   00000048   474430302E31       DC8 44H, 47H, 30H, 30H, 31H, 2EH, 47H, 52H
   \              5247        
   \   00000050   2C4630303637       DC8 46H, 2CH, 30H, 30H, 37H, 36H, 38H, 2CH
   \              2C38        
   \   00000058   31302C323A2C       DC8 30H, 31H, 32H, 2CH, 2CH, 3AH, 3AH, 3AH
   \              3A3A        
   \   00000060   3A3A3A3A3A3A       DC8 3AH, 3AH, 3AH, 3AH, 3AH, 3AH, 3AH, 3AH
   \              3A3A        
   \   00000068   3A3A30552C43       DC8 3AH, 3AH, 55H, 30H, 43H, 2CH, 54H, 30H
   \              3054        
   \   00000070   3432542C4830       DC8 32H, 34H, 2CH, 54H, 30H, 48H, 34H, 2CH
   \              2C34        
   \   00000078   30543238532C       DC8 54H, 30H, 38H, 32H, 2CH, 53H, 30H, 31H
   \              3130        
   \   00000080   3230532C3430       DC8 30H, 32H, 2CH, 53H, 30H, 34H, 30H, 31H
   \              3130        
   \   00000088   532C43303130       DC8 2CH, 53H, 30H, 43H, 30H, 31H, 2CH, 4EH
   \              4E2C        
   \   00000090   333045463130       DC8 30H, 33H, 46H, 45H, 30H, 31H, 30H, 48H
   \              4830        
   \   00000098   38302C30304C       DC8 30H, 38H, 30H, 2CH, 4CH, 30H, 31H, 43H
   \              4331        
   \   000000A0   483031303036       DC8 30H, 48H, 30H, 31H, 36H, 30H, 48H, 30H
   \              3048        
   \   000000A8   30384B2C3130       DC8 38H, 30H, 2CH, 4BH, 30H, 31H, 38H, 30H
   \              3038        
   \   000000B0   4B2C43304F30       DC8 2CH, 4BH, 30H, 43H, 30H, 4FH, 30H, 34H
   \              3430        
   \   000000B8   2C30304A3032       DC8 30H, 2CH, 4AH, 30H, 32H, 30H, 2CH, 4AH
   \              4A2C        
   \   000000C0   433050303230       DC8 30H, 43H, 30H, 50H, 30H, 32H, 30H, 2CH
   \              2C30        
   \   000000C8   304930323051       DC8 49H, 30H, 32H, 30H, 51H, 30H, 45H, 30H
   \              3045        
   \   000000D0   492C34304E30       DC8 2CH, 49H, 30H, 34H, 30H, 4EH, 30H, 34H
   \              3430        
   \   000000D8   3730492C3830       DC8 30H, 37H, 2CH, 49H, 30H, 38H, 30H, 4FH
   \              4F30        
   \   000000E0   33302C303048       DC8 30H, 33H, 30H, 2CH, 48H, 30H, 31H, 30H
   \              3031        
   \   000000E8   304F38312C30       DC8 4FH, 30H, 31H, 38H, 30H, 2CH, 48H, 30H
   \              3048        
   \   000000F0   303230483833       DC8 32H, 30H, 48H, 30H, 33H, 38H, 30H, 30H
   \              3030        
   \   000000F8   30383831482C       DC8 38H, 30H, 31H, 38H, 2CH, 48H, 30H, 34H
   \              3430        
   \   00000100   303030373048       DC8 30H, 30H, 37H, 30H, 48H, 30H, 31H, 34H
   \              3431        
   \   00000108   34302C303048       DC8 30H, 34H, 30H, 2CH, 48H, 30H, 38H, 30H
   \              3038        
   \   00000110   383148303230       DC8 31H, 38H, 30H, 48H, 30H, 32H, 30H, 36H
   \              3630        
   \   00000118   482C38303430       DC8 2CH, 48H, 30H, 38H, 30H, 34H, 30H, 49H
   \              4930        
   \   00000120   48303034302C       DC8 30H, 48H, 34H, 30H, 2CH, 30H, 31H, 30H
   \              3031        
   \   00000128   3033304A2C41       DC8 33H, 30H, 4AH, 30H, 41H, 2CH, 30H, 35H
   \              3530        
   \   00000130   343049303130       DC8 30H, 34H, 30H, 49H, 30H, 31H, 30H, 2CH
   \              2C30        
   \   00000138   32303031302C       DC8 30H, 32H, 31H, 30H, 2CH, 30H, 32H, 32H
   \              3232        
   \   00000140   2C3032303034       DC8 30H, 2CH, 30H, 32H, 34H, 30H, 2CH, 30H
   \              302C        
   \   00000148   43342C303530       DC8 34H, 43H, 30H, 2CH, 30H, 35H, 2CH, 3AH
   \              3A2C        
   \   00000150   3630302C2C34       DC8 30H, 36H, 2CH, 30H, 34H, 2CH, 2CH, 3AH
   \              3A2C        
   \   00000158   3A3A3A3A3A3A       DC8 3AH, 3AH, 3AH, 3AH, 3AH, 3AH, 3AH, 3AH
   \              3A3A        
   \   00000160   3A3A3A3A3A3A       DC8 3AH, 3AH, 3AH, 3AH, 3AH, 3AH, 3AH, 3AH
   \              3A3A        
   \   00000168   5E3A41584C5E       DC8 3AH, 5EH, 58H, 41H, 5EH, 4CH, 4CH, 30H
   \              304C        
   \   00000170   32315E305750       DC8 31H, 32H, 30H, 5EH, 50H, 57H, 32H, 39H
   \              3932        
   \   00000178   5E3654463631       DC8 36H, 5EH, 46H, 54H, 31H, 36H, 30H, 2CH
   \              2C30        
   \   00000180   3436585E3047       DC8 36H, 34H, 5EH, 58H, 47H, 30H, 30H, 31H
   \              3130        
   \   00000188   472E4652312C       DC8 2EH, 47H, 52H, 46H, 2CH, 31H, 2CH, 31H
   \              312C        
   \   00000190   465E5E535942       DC8 5EH, 46H, 53H, 5EH, 42H, 59H, 33H, 36H
   \              3633        
   \   00000198   332C5E365446       DC8 2CH, 33H, 36H, 5EH, 46H, 54H, 32H, 35H
   \              3532        
   \   000001A0   2C303935425E       DC8 30H, 2CH, 35H, 39H, 5EH, 42H, 58H, 4EH
   \              4E58        
   \   000001A8   322C322C3030       DC8 2CH, 32H, 2CH, 32H, 30H, 30H, 2CH, 30H
   \              302C        
   \   000001B0   302C312C00         DC8 2CH, 30H, 2CH, 31H, 0
    102          __flash unsigned char label_2[] = "^FS^FO,26^FS^FT165,66^A0N,21,19^FH\\^FD";
   \                     label_2:
   \   000001B5   465E5E534F46       DC8 "^FS^FO,26^FS^FT165,66^A0N,21,19^FH\\^FD"
   \              322C5E365346
   \              465E31543536
   \              362C5E363041
   \              2C4E3132312C
   \              5E3948465E5C
   \              444600      
    103          __flash unsigned char label_3[] = "^FS^FO,31^FS^FT165,96^A0N,25,24^FH\\^FDID:";
   \                     label_3:
   \   000001DC   465E5E534F46       DC8 "^FS^FO,31^FS^FT165,96^A0N,25,24^FH\\^FDID:"
   \              332C5E315346
   \              465E31543536
   \              392C5E363041
   \              2C4E3532322C
   \              5E3448465E5C
   \              44464449003A
    104          __flash unsigned char label_4[] = "^FS^BY48,48^FT55,98^BXB,2,200,0,0,1^FH\\^FD";
   \                     label_4:
   \   00000206   465E5E535942       DC8 "^FS^BY48,48^FT55,98^BXB,2,200,0,0,1^FH\\^FD"
   \              3834342C5E38
   \              54463535392C
   \              5E3858422C42
   \              2C3230322C30
   \              2C302C305E31
   \              48465E5C4446
   \              00          
    105          __flash unsigned char label_5[] = "^FS^FO,22^FS^FT126,98^A0B,18,16^FH\\^FDID:";
   \                     label_5:
   \   00000231   465E5E534F46       DC8 "^FS^FO,22^FS^FT126,98^A0B,18,16^FH\\^FDID:"
   \              322C5E325346
   \              465E31543632
   \              392C5E383041
   \              2C423831312C
   \              5E3648465E5C
   \              44464449003A
    106          __flash unsigned char label_6[] = "^FS^FO,21^FS^FT109,98^A0B,17,16^FH\\^FD";
   \                     label_6:
   \   0000025B   465E5E534F46       DC8 "^FS^FO,21^FS^FT109,98^A0B,17,16^FH\\^FD"
   \              322C5E315346
   \              465E31543930
   \              392C5E383041
   \              2C423731312C
   \              5E3648465E5C
   \              444600      
    107          __flash unsigned char label_7[] = "^FS^FO,21^FS^FT76,98^A0B,17,16^FH\\^FD";
   \                     label_7:
   \   00000282   465E5E534F46       DC8 "^FS^FO,21^FS^FT76,98^A0B,17,16^FH\\^FD"
   \              322C5E315346
   \              465E37542C36
   \              3839415E4230
   \              312C2C373631
   \              465E5C48465E
   \              0044        
    108          __flash unsigned char label_8[] = "^FS^FO,22^FS^FT93,98^A0B,17,16^FH\\^FD";
   \                     label_8:
   \   000002A8   465E5E534F46       DC8 "^FS^FO,22^FS^FT93,98^A0B,17,16^FH\\^FD"
   \              322C5E325346
   \              465E39542C33
   \              3839415E4230
   \              312C2C373631
   \              465E5C48465E
   \              0044        
    109          __flash unsigned char label_9[] = " 007^FS^PQ1,0,1,Y^XZ^XA^ID000.GRF^FS^XZ";
   \                     label_9:
   \   000002CE   30203730465E       DC8 " 007^FS^PQ1,0,1,Y^XZ^XA^ID000.GRF^FS^XZ"
   \              5E5351502C31
   \              2C302C315E59
   \              5A58585E5E41
   \              444930302E30
   \              52475E465346
   \              585E005A    

   \                                 In  segment CODE, align 2, keep-with-next
    110          void print_label(unsigned char *id,unsigned char *model, unsigned char *date, unsigned char *fireware_version, unsigned char *hard_version)
   \                     print_label:
    111          {
   \   00000000   ........           CALL    ?PROLOGUE10_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004                      REQUIRE ?Register_R8_is_cg_reg
   \   00000004                      REQUIRE ?Register_R9_is_cg_reg
   \   00000004   972D               SBIW    R29:R28, 13
   \   00000006   01D8               MOVW    R27:R26, R17:R16
   \   00000008   012A               MOVW    R5:R4, R21:R20
   \   0000000A   013B               MOVW    R7:R6, R23:R22
   \   0000000C   888F               LDD     R8, Y+23
   \   0000000E   8C98               LDD     R9, Y+24
    112          	unsigned char buffer_mode[3];
    113          	unsigned char buffer[10];
    114          	unsigned char model_number;
    115          	
    116          	buffer_mode[0] = g_model[4];
   \   00000010   9100....           LDS     R16, (g_model + 4)
   \   00000014   8308               ST      Y, R16
    117          	buffer_mode[1] = g_model[5];
   \   00000016   9100....           LDS     R16, (g_model + 5)
   \   0000001A   8309               STD     Y+1, R16
    118          	buffer_mode[2] = 0;
   \   0000001C   E000               LDI     R16, 0
   \   0000001E   830A               STD     Y+2, R16
    119          	
    120          	model_number = StrToChar(buffer_mode);
   \   00000020   018E               MOVW    R17:R16, R29:R28
   \   00000022   ........           CALL    StrToChar
   \   00000026   2F80               MOV     R24, R16
    121          	
    122          		buffer[9] = 0;
   \   00000028   E000               LDI     R16, 0
   \   0000002A   870C               STD     Y+12, R16
    123          		buffer[0] = *(hard_version);
   \   0000002C   01F4               MOVW    R31:R30, R9:R8
   \   0000002E   8100               LD      R16, Z
   \   00000030   830B               STD     Y+3, R16
    124          		buffer[1] = *(hard_version + 1);
   \   00000032   8101               LDD     R16, Z+1
   \   00000034   830C               STD     Y+4, R16
    125          		
    126          		buffer[2] = 32;
   \   00000036   E200               LDI     R16, 32
   \   00000038   830D               STD     Y+5, R16
    127          		buffer[3] = *fireware_version;
   \   0000003A   01F3               MOVW    R31:R30, R7:R6
   \   0000003C   8100               LD      R16, Z
   \   0000003E   830E               STD     Y+6, R16
    128          		buffer[4] = *(fireware_version+1);
   \   00000040   8101               LDD     R16, Z+1
   \   00000042   830F               STD     Y+7, R16
    129          		buffer[5] = *(fireware_version+2);
   \   00000044   8102               LDD     R16, Z+2
   \   00000046   8708               STD     Y+8, R16
    130          		buffer[6] = *(fireware_version+3);
   \   00000048   8103               LDD     R16, Z+3
   \   0000004A   8709               STD     Y+9, R16
    131          		buffer[7] = *(fireware_version+4);
   \   0000004C   8104               LDD     R16, Z+4
   \   0000004E   870A               STD     Y+10, R16
    132          		buffer[8] = *(fireware_version+5);
   \   00000050   8105               LDD     R16, Z+5
   \   00000052   870B               STD     Y+11, R16
    133          	
    134          		print_out_flash(label_1);
   \   00000054   ....               LDI     R16, LOW(label_1)
   \   00000056   ....               LDI     R17, (label_1) >> 8
   \   00000058   ....               RCALL   print_out_flash
    135          		print_out("^FH\\^FD");
   \   0000005A   ....               LDI     R16, LOW(`?<Constant "^FH\\\\^FD">`)
   \   0000005C   ....               LDI     R17, (`?<Constant "^FH\\\\^FD">`) >> 8
   \   0000005E   ....               RCALL   print_out
    136          		
    137          		print_model(model_number);
   \   00000060   2F08               MOV     R16, R24
   \   00000062   ....               RCALL   print_model
    138          		print_out("\\0D\\0AID:");
   \   00000064   ....               LDI     R16, LOW((`?<Constant "^FH\\\\^FD">` + 8))
   \   00000066   ....               LDI     R17, HIGH((`?<Constant "^FH\\\\^FD">` + 8))
   \   00000068   ....               RCALL   print_out
    139          		print_out(id); //ok
   \   0000006A   018D               MOVW    R17:R16, R27:R26
   \   0000006C   ....               RCALL   print_out
    140          		///////////////////      1      /////////////////////////////////////////
    141          		print_out_flash(label_2); //Reyno 2009 12 03
   \   0000006E   ....               LDI     R16, LOW((label_1 + 437))
   \   00000070   ....               LDI     R17, HIGH((label_1 + 437))
   \   00000072   ....               RCALL   print_out_flash
    142          
    143          		print_model(model_number);
   \   00000074   2F08               MOV     R16, R24
   \   00000076   ....               RCALL   print_model
    144          		///////////////////      2      ////////////////////////////////////////
    145          		print_out_flash(label_3);//ok
   \   00000078   ....               LDI     R16, LOW((label_1 + 476))
   \   0000007A   ....               LDI     R17, HIGH((label_1 + 476))
   \   0000007C   ....               RCALL   print_out_flash
    146          	
    147          		print_out(id);
   \   0000007E   018D               MOVW    R17:R16, R27:R26
   \   00000080   ....               RCALL   print_out
    148          		///////////////////      3      ////////////////////////////////////////
    149          		print_out_flash(label_4); //ok
   \   00000082   ....               LDI     R16, LOW((label_1 + 518))
   \   00000084   ....               LDI     R17, HIGH((label_1 + 518))
   \   00000086   ....               RCALL   print_out_flash
    150          
    151          		print_model(model_number);
   \   00000088   2F08               MOV     R16, R24
   \   0000008A   ....               RCALL   print_model
    152          		print_out("\\0D\\0A");
   \   0000008C   ....               LDI     R16, LOW((`?<Constant "^FH\\\\^FD">` + 18))
   \   0000008E   ....               LDI     R17, HIGH((`?<Constant "^FH\\\\^FD">` + 18))
   \   00000090   ....               RCALL   print_out
    153          		print_out(date);
   \   00000092   0182               MOVW    R17:R16, R5:R4
   \   00000094   ....               RCALL   print_out
    154          		print_out(" 007\\0D\\0A");
   \   00000096   ....               LDI     R16, LOW((`?<Constant "^FH\\\\^FD">` + 25))
   \   00000098   ....               LDI     R17, HIGH((`?<Constant "^FH\\\\^FD">` + 25))
   \   0000009A   ....               RCALL   print_out
    155          
    156          		print_out(buffer);
   \   0000009C   018E               MOVW    R17:R16, R29:R28
   \   0000009E   5F0D               SUBI    R16, 253
   \   000000A0   4F1F               SBCI    R17, 255
   \   000000A2   ....               RCALL   print_out
    157          		print_out("\\0D\\0AID:");
   \   000000A4   ....               LDI     R16, LOW((`?<Constant "^FH\\\\^FD">` + 8))
   \   000000A6   ....               LDI     R17, HIGH((`?<Constant "^FH\\\\^FD">` + 8))
   \   000000A8   ....               RCALL   print_out
    158          		print_out(id);
   \   000000AA   018D               MOVW    R17:R16, R27:R26
   \   000000AC   ....               RCALL   print_out
    159          		print_out_flash(label_5);
   \   000000AE   ....               LDI     R16, LOW((label_1 + 561))
   \   000000B0   ....               LDI     R17, HIGH((label_1 + 561))
   \   000000B2   ....               RCALL   print_out_flash
    160          		print_out(id);
   \   000000B4   018D               MOVW    R17:R16, R27:R26
   \   000000B6   ....               RCALL   print_out
    161          		print_out_flash(label_6);
   \   000000B8   ....               LDI     R16, LOW((label_1 + 603))
   \   000000BA   ....               LDI     R17, HIGH((label_1 + 603))
   \   000000BC   ....               RCALL   print_out_flash
    162          		print_out(buffer);
   \   000000BE   018E               MOVW    R17:R16, R29:R28
   \   000000C0   5F0D               SUBI    R16, 253
   \   000000C2   4F1F               SBCI    R17, 255
   \   000000C4   ....               RCALL   print_out
    163          		print_out_flash(label_7);
   \   000000C6   ....               LDI     R16, LOW((label_1 + 642))
   \   000000C8   ....               LDI     R17, HIGH((label_1 + 642))
   \   000000CA   ....               RCALL   print_out_flash
    164          		print_model(model_number);
   \   000000CC   2F08               MOV     R16, R24
   \   000000CE   ....               RCALL   print_model
    165          		print_out_flash(label_8);
   \   000000D0   ....               LDI     R16, LOW((label_1 + 680))
   \   000000D2   ....               LDI     R17, HIGH((label_1 + 680))
   \   000000D4   ....               RCALL   print_out_flash
    166          		print_out(date);
   \   000000D6   0182               MOVW    R17:R16, R5:R4
   \   000000D8   ....               RCALL   print_out
    167          		print_out_flash(label_9);
   \   000000DA   ....               LDI     R16, LOW((label_1 + 718))
   \   000000DC   ....               LDI     R17, HIGH((label_1 + 718))
   \   000000DE   ....               RCALL   print_out_flash
    168          }
   \   000000E0   962D               ADIW    R29:R28, 13
   \   000000E2   E0EC               LDI     R30, 12
   \   000000E4   ........           JMP     ?EPILOGUE_B10_L09
    169          	

   \                                 In  segment CODE, align 2, keep-with-next
    170          void print_model(unsigned char data)
   \                     print_model:
    171          {
    172          	unsigned char brand;
    173          
    174          	switch(g_model[2])
   \   00000000   9110....           LDS     R17, (g_model + 2)
   \   00000004   3311               CPI     R17, 49
   \   00000006   F411               BRNE    ??print_model_0
    175          	{
    176          		case '1':
    177          			brand = 1;
   \   00000008   E011               LDI     R17, 1
   \   0000000A   C001               RJMP    ??print_model_1
    178          		break;
    179          		
    180          		case '2':
    181          			brand = 2;
   \                     ??print_model_0:
   \   0000000C   E012               LDI     R17, 2
    182          		break;
    183          		
    184          		default: 
    185          			brand = 2;
    186          		break;
    187          	}
    188          	
    189          		if(brand == 2)
   \                     ??print_model_1:
   \   0000000E   3012               CPI     R17, 2
   \   00000010   F5C9               BRNE    ??print_model_2
    190          		{
    191          			switch(data)
   \   00000012   5200               SUBI    R16, 32
   \   00000014   F0A9               BREQ    ??print_model_3
   \   00000016   950A               DEC     R16
   \   00000018   F0B1               BREQ    ??print_model_4
   \   0000001A   950A               DEC     R16
   \   0000001C   F0C1               BREQ    ??print_model_5
   \   0000001E   950A               DEC     R16
   \   00000020   F0C9               BREQ    ??print_model_6
   \   00000022   950A               DEC     R16
   \   00000024   F0D1               BREQ    ??print_model_7
   \   00000026   950A               DEC     R16
   \   00000028   F0D9               BREQ    ??print_model_8
   \   0000002A   950A               DEC     R16
   \   0000002C   F0E1               BREQ    ??print_model_9
   \   0000002E   950A               DEC     R16
   \   00000030   F0E9               BREQ    ??print_model_10
   \   00000032   950A               DEC     R16
   \   00000034   F0F1               BREQ    ??print_model_11
   \   00000036   950A               DEC     R16
   \   00000038   F0F9               BREQ    ??print_model_12
   \   0000003A   5007               SUBI    R16, 7
   \   0000003C   F101               BREQ    ??print_model_13
   \   0000003E   9508               RET
    192          			{
    193          				case 0x20:
    194          					print_out("048820");
   \                     ??print_model_3:
   \   00000040   ....               LDI     R16, LOW(`?<Constant "048820">`)
   \   00000042   ....               LDI     R17, (`?<Constant "048820">`) >> 8
   \   00000044   C002               RJMP    ??print_model_14
    195          				break;
    196          				
    197          				case 0x21:
    198          					print_out("048821");
   \                     ??print_model_4:
   \   00000046   ....               LDI     R16, LOW((`?<Constant "048820">` + 7))
   \   00000048   ....               LDI     R17, HIGH((`?<Constant "048820">` + 7))
   \                     ??print_model_14:
   \   0000004A   ....               RCALL   print_out
   \   0000004C   9508               RET
    199          				break;
    200          				
    201          				case 0x22:
    202          					print_out("048822");
   \                     ??print_model_5:
   \   0000004E   ....               LDI     R16, LOW((`?<Constant "048820">` + 14))
   \   00000050   ....               LDI     R17, HIGH((`?<Constant "048820">` + 14))
   \   00000052   CFFB               RJMP    ??print_model_14
    203          				break;
    204          				
    205          				case 0x23:
    206          					print_out("048823");
   \                     ??print_model_6:
   \   00000054   ....               LDI     R16, LOW((`?<Constant "048820">` + 21))
   \   00000056   ....               LDI     R17, HIGH((`?<Constant "048820">` + 21))
   \   00000058   CFF8               RJMP    ??print_model_14
    207          				break;
    208          				
    209          				case 0x24:
    210          					print_out("048824");
   \                     ??print_model_7:
   \   0000005A   ....               LDI     R16, LOW((`?<Constant "048820">` + 28))
   \   0000005C   ....               LDI     R17, HIGH((`?<Constant "048820">` + 28))
   \   0000005E   CFF5               RJMP    ??print_model_14
    211          				break;
    212          				
    213          				case 0x25:
    214          					print_out("048825");
   \                     ??print_model_8:
   \   00000060   ....               LDI     R16, LOW((`?<Constant "048820">` + 35))
   \   00000062   ....               LDI     R17, HIGH((`?<Constant "048820">` + 35))
   \   00000064   CFF2               RJMP    ??print_model_14
    215          				break;
    216          				
    217          				case 0x26:
    218          					print_out("048826");
   \                     ??print_model_9:
   \   00000066   ....               LDI     R16, LOW((`?<Constant "048820">` + 42))
   \   00000068   ....               LDI     R17, HIGH((`?<Constant "048820">` + 42))
   \   0000006A   CFEF               RJMP    ??print_model_14
    219          				break;
    220          				
    221          				case 0x27:
    222          					print_out("048829");
   \                     ??print_model_10:
   \   0000006C   ....               LDI     R16, LOW((`?<Constant "048820">` + 49))
   \   0000006E   ....               LDI     R17, HIGH((`?<Constant "048820">` + 49))
   \   00000070   CFEC               RJMP    ??print_model_14
    223          				break;
    224          				
    225          				case 0x28:
    226          					print_out("048828");
   \                     ??print_model_11:
   \   00000072   ....               LDI     R16, LOW((`?<Constant "048820">` + 56))
   \   00000074   ....               LDI     R17, HIGH((`?<Constant "048820">` + 56))
   \   00000076   CFE9               RJMP    ??print_model_14
    227          				break;
    228          				
    229          				case 0x29:
    230          					print_out("048831");
   \                     ??print_model_12:
   \   00000078   ....               LDI     R16, LOW((`?<Constant "048820">` + 63))
   \   0000007A   ....               LDI     R17, HIGH((`?<Constant "048820">` + 63))
   \   0000007C   CFE6               RJMP    ??print_model_14
    231          				break;
    232          				
    233          				case 0x30:
    234          					print_out("048830");
   \                     ??print_model_13:
   \   0000007E   ....               LDI     R16, LOW((`?<Constant "048820">` + 70))
   \   00000080   ....               LDI     R17, HIGH((`?<Constant "048820">` + 70))
   \   00000082   CFE3               RJMP    ??print_model_14
    235          				break;
    236          				
    237          				default:break;
    238          			}
    239          		}
    240          		else if(brand == 1)
   \                     ??print_model_2:
   \   00000084   3011               CPI     R17, 1
   \   00000086   F5C1               BRNE    ??print_model_15
    241          		{
    242          			switch(data)
   \   00000088   5200               SUBI    R16, 32
   \   0000008A   F0A9               BREQ    ??print_model_16
   \   0000008C   950A               DEC     R16
   \   0000008E   F0B1               BREQ    ??print_model_17
   \   00000090   950A               DEC     R16
   \   00000092   F0B9               BREQ    ??print_model_18
   \   00000094   950A               DEC     R16
   \   00000096   F0C1               BREQ    ??print_model_19
   \   00000098   950A               DEC     R16
   \   0000009A   F0C9               BREQ    ??print_model_20
   \   0000009C   950A               DEC     R16
   \   0000009E   F0D1               BREQ    ??print_model_21
   \   000000A0   950A               DEC     R16
   \   000000A2   F0D9               BREQ    ??print_model_22
   \   000000A4   950A               DEC     R16
   \   000000A6   F0E1               BREQ    ??print_model_23
   \   000000A8   950A               DEC     R16
   \   000000AA   F0E9               BREQ    ??print_model_24
   \   000000AC   950A               DEC     R16
   \   000000AE   F0F1               BREQ    ??print_model_25
   \   000000B0   5007               SUBI    R16, 7
   \   000000B2   F0F9               BREQ    ??print_model_26
   \   000000B4   9508               RET
    243          			{
    244          				case 0x20:
    245          					print_out("BMSE3001");
   \                     ??print_model_16:
   \   000000B6   ....               LDI     R16, LOW((`?<Constant "048820">` + 77))
   \   000000B8   ....               LDI     R17, HIGH((`?<Constant "048820">` + 77))
   \   000000BA   CFC7               RJMP    ??print_model_14
    246          				break;
    247          				
    248          				case 0x21:
    249          					print_out("BMSE3002");
   \                     ??print_model_17:
   \   000000BC   ....               LDI     R16, LOW((`?<Constant "048820">` + 86))
   \   000000BE   ....               LDI     R17, HIGH((`?<Constant "048820">` + 86))
   \   000000C0   CFC4               RJMP    ??print_model_14
    250          				break;
    251          				
    252          				case 0x22:
    253          					print_out("BMSE3003");
   \                     ??print_model_18:
   \   000000C2   ....               LDI     R16, LOW((`?<Constant "048820">` + 95))
   \   000000C4   ....               LDI     R17, HIGH((`?<Constant "048820">` + 95))
   \   000000C6   CFC1               RJMP    ??print_model_14
    254          				break;
    255          				
    256          				case 0x23:
    257          					print_out("BMSE2005");
   \                     ??print_model_19:
   \   000000C8   ....               LDI     R16, LOW((`?<Constant "048820">` + 104))
   \   000000CA   ....               LDI     R17, HIGH((`?<Constant "048820">` + 104))
   \   000000CC   CFBE               RJMP    ??print_model_14
    258          				break;
    259          				
    260          				case 0x24:
    261          					print_out("BMSE2001");
   \                     ??print_model_20:
   \   000000CE   ....               LDI     R16, LOW((`?<Constant "048820">` + 113))
   \   000000D0   ....               LDI     R17, HIGH((`?<Constant "048820">` + 113))
   \   000000D2   CFBB               RJMP    ??print_model_14
    262          				break;
    263          				
    264          				case 0x25:
    265          					print_out("BMSE2002");
   \                     ??print_model_21:
   \   000000D4   ....               LDI     R16, LOW((`?<Constant "048820">` + 122))
   \   000000D6   ....               LDI     R17, HIGH((`?<Constant "048820">` + 122))
   \   000000D8   CFB8               RJMP    ??print_model_14
    266          				break;
    267          				
    268          				case 0x26:
    269          					print_out("BMSE2003");
   \                     ??print_model_22:
   \   000000DA   ....               LDI     R16, LOW((`?<Constant "048820">` + 131))
   \   000000DC   ....               LDI     R17, HIGH((`?<Constant "048820">` + 131))
   \   000000DE   CFB5               RJMP    ??print_model_14
    270          				break;
    271          				
    272          				case 0x27:
    273          					print_out("BMSE2004");
   \                     ??print_model_23:
   \   000000E0   ....               LDI     R16, LOW((`?<Constant "048820">` + 140))
   \   000000E2   ....               LDI     R17, HIGH((`?<Constant "048820">` + 140))
   \   000000E4   CFB2               RJMP    ??print_model_14
    274          				break;
    275          				
    276          				case 0x28:
    277          					print_out("BMSE3005");
   \                     ??print_model_24:
   \   000000E6   ....               LDI     R16, LOW((`?<Constant "048820">` + 149))
   \   000000E8   ....               LDI     R17, HIGH((`?<Constant "048820">` + 149))
   \   000000EA   CFAF               RJMP    ??print_model_14
    278          				break;
    279          				
    280          				case 0x29:
    281          					print_out("BMSE2007");
   \                     ??print_model_25:
   \   000000EC   ....               LDI     R16, LOW((`?<Constant "048820">` + 158))
   \   000000EE   ....               LDI     R17, HIGH((`?<Constant "048820">` + 158))
   \   000000F0   CFAC               RJMP    ??print_model_14
    282          				break;
    283          				
    284          				case 0x30:
    285          					print_out("BMSE2006");
   \                     ??print_model_26:
   \   000000F2   ....               LDI     R16, LOW((`?<Constant "048820">` + 167))
   \   000000F4   ....               LDI     R17, HIGH((`?<Constant "048820">` + 167))
   \   000000F6   ....               RCALL   print_out
    286          				break;
    287          				
    288          				default:break;
    289          			}
    290          		}
    291          }
   \                     ??print_model_15:
   \   000000F8   9508               RET
    292          
    293          	

   \                                 In  segment CODE, align 2, keep-with-next
    294          void external_interrupt_initial(void)
   \                     external_interrupt_initial:
    295          {
    296          	// External Interrupt(s) initialization
    297          	// INT0: Off
    298          	// INT1: Off
    299          	// INT2: Off
    300          	// Interrupt on any change on pins PCINT0-7: Off
    301          	// Interrupt on any change on pins PCINT8-15: Off
    302          	// Interrupt on any change on pins PCINT16-23: Off
    303          	// Interrupt on any change on pins PCINT24-31: On
    304          	EICRA=0x00;
   \   00000000   E000               LDI     R16, 0
   \   00000002   9300....           STS     _A_EICRA, R16
    305          	EIMSK=0x00;
   \   00000006   BB0D               OUT     0x1D, R16
    306          	PCMSK3=0x20;
   \   00000008   E200               LDI     R16, 32
   \   0000000A   9300....           STS     _A_PCMSK3, R16
    307          	PCICR=0x08;
   \   0000000E   E008               LDI     R16, 8
   \   00000010   9300....           STS     _A_PCICR, R16
    308          	PCIFR=0x08;
   \   00000014   BB0B               OUT     0x1B, R16
    309          }
   \   00000016   9508               RET
   \   00000018                      REQUIRE _A_PCMSK3
   \   00000018                      REQUIRE _A_EICRA
   \   00000018                      REQUIRE _A_PCICR
   \   00000018                      REQUIRE _A_EIMSK
   \   00000018                      REQUIRE _A_PCIFR
    310          
    311          static unsigned long int base = 150, top = 1880;

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
    312          static struct S_location key[16];
   \                     key:
   \   00000000                      DS8 256

   \                                 In  segment CODE, align 2, keep-with-next
    313          void key_parameter_initial(void)
   \                     key_parameter_initial:
    314          {
   \   00000000   ........           CALL    ?PROLOGUE16_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004                      REQUIRE ?Register_R8_is_cg_reg
   \   00000004                      REQUIRE ?Register_R9_is_cg_reg
   \   00000004                      REQUIRE ?Register_R10_is_cg_reg
   \   00000004                      REQUIRE ?Register_R11_is_cg_reg
   \   00000004                      REQUIRE ?Register_R12_is_cg_reg
   \   00000004                      REQUIRE ?Register_R13_is_cg_reg
   \   00000004                      REQUIRE ?Register_R14_is_cg_reg
   \   00000004                      REQUIRE ?Register_R15_is_cg_reg
   \   00000004   9721               SBIW    R29:R28, 1
    315          	unsigned char i;
    316          	static unsigned long int weigth;
    317          	static unsigned long int height;
    318          	
    319          	weigth = (top - base) * 30 /160;
    320          	height = (top - base) * 34 /160;
    321          	
    322          	weigth -= 150;
   \   00000006   ....               LDI     R30, LOW(base)
   \   00000008   ....               LDI     R31, (base) >> 8
   \   0000000A   80C4               LDD     R12, Z+4
   \   0000000C   80D5               LDD     R13, Z+5
   \   0000000E   80E6               LDD     R14, Z+6
   \   00000010   80F7               LDD     R15, Z+7
   \   00000012   8100               LD      R16, Z
   \   00000014   8111               LDD     R17, Z+1
   \   00000016   8122               LDD     R18, Z+2
   \   00000018   8133               LDD     R19, Z+3
   \   0000001A   1AC0               SUB     R12, R16
   \   0000001C   0AD1               SBC     R13, R17
   \   0000001E   0AE2               SBC     R14, R18
   \   00000020   0AF3               SBC     R15, R19
   \   00000022   E14E               LDI     R20, 30
   \   00000024   E050               LDI     R21, 0
   \   00000026   E060               LDI     R22, 0
   \   00000028   E070               LDI     R23, 0
   \   0000002A   0186               MOVW    R17:R16, R13:R12
   \   0000002C   0197               MOVW    R19:R18, R15:R14
   \   0000002E   ........           CALL    ?L_EC_MUL_L03
   \   00000032   EA40               LDI     R20, 160
   \   00000034   ........           CALL    ?UL_DIVMOD_L03
   \   00000038   0148               MOVW    R9:R8, R17:R16
   \   0000003A   0159               MOVW    R11:R10, R19:R18
   \   0000003C   E60A               LDI     R16, 106
   \   0000003E   0E80               ADD     R8, R16
   \   00000040   1E9E               ADC     R9, R30
   \   00000042   1EAE               ADC     R10, R30
   \   00000044   1EBE               ADC     R11, R30
   \   00000046   ....               LDI     R30, LOW((key_initial + 256))
   \   00000048   ....               LDI     R31, HIGH((key_initial + 256))
   \   0000004A   8280               ST      Z, R8
   \   0000004C   8291               STD     Z+1, R9
   \   0000004E   82A2               STD     Z+2, R10
   \   00000050   82B3               STD     Z+3, R11
    323          	height -= 150;
   \   00000052   E242               LDI     R20, 34
   \   00000054   E050               LDI     R21, 0
   \   00000056   E060               LDI     R22, 0
   \   00000058   E070               LDI     R23, 0
   \   0000005A   0186               MOVW    R17:R16, R13:R12
   \   0000005C   0197               MOVW    R19:R18, R15:R14
   \   0000005E   ........           CALL    ?L_EC_MUL_L03
   \   00000062   EA40               LDI     R20, 160
   \   00000064   ........           CALL    ?UL_DIVMOD_L03
   \   00000068   01C8               MOVW    R25:R24, R17:R16
   \   0000006A   01D9               MOVW    R27:R26, R19:R18
   \   0000006C   5986               SUBI    R24, 150
   \   0000006E   4090               SBCI    R25, 0
   \   00000070   40A0               SBCI    R26, 0
   \   00000072   40B0               SBCI    R27, 0
   \   00000074   ....               LDI     R30, LOW((key_initial + 260))
   \   00000076   ....               LDI     R31, HIGH((key_initial + 260))
   \   00000078   8380               ST      Z, R24
   \   0000007A   8391               STD     Z+1, R25
   \   0000007C   83A2               STD     Z+2, R26
   \   0000007E   83B3               STD     Z+3, R27
    324          	
    325          	for(i=0;i<16;i++)
   \   00000080   E000               LDI     R16, 0
   \   00000082   C070               RJMP    ??key_parameter_initial_0
    326          	{
    327          		key[i].x1 = (top - base) * (key_initial[i].x1+3) / 160 - weigth/2;
   \                     ??key_parameter_initial_1:
   \   00000084   8108               LD      R16, Y
   \   00000086   E010               LDI     R17, 0
   \   00000088   E044               LDI     R20, 4
   \   0000008A   ........           CALL    ?S_SHL_L02
   \   0000008E   0198               MOVW    R19:R18, R17:R16
   \   00000090   ....               LDI     R16, LOW(key)
   \   00000092   2E40               MOV     R4, R16
   \   00000094   ....               LDI     R16, (key) >> 8
   \   00000096   2E50               MOV     R5, R16
   \   00000098   0E42               ADD     R4, R18
   \   0000009A   1E51               ADC     R5, R17
   \   0000009C   ....               LDI     R16, LOW(key_initial)
   \   0000009E   2E60               MOV     R6, R16
   \   000000A0   ....               LDI     R16, (key_initial) >> 8
   \   000000A2   2E70               MOV     R7, R16
   \   000000A4   0E62               ADD     R6, R18
   \   000000A6   1E71               ADC     R7, R17
   \   000000A8   01F3               MOVW    R31:R30, R7:R6
   \   000000AA   8140               LD      R20, Z
   \   000000AC   8151               LDD     R21, Z+1
   \   000000AE   8162               LDD     R22, Z+2
   \   000000B0   8173               LDD     R23, Z+3
   \   000000B2   5F4D               SUBI    R20, 253
   \   000000B4   4F5F               SBCI    R21, 255
   \   000000B6   4F6F               SBCI    R22, 255
   \   000000B8   4F7F               SBCI    R23, 255
   \   000000BA   0186               MOVW    R17:R16, R13:R12
   \   000000BC   0197               MOVW    R19:R18, R15:R14
   \   000000BE   ........           CALL    ?L_EC_MUL_L03
   \   000000C2   EA40               LDI     R20, 160
   \   000000C4   E050               LDI     R21, 0
   \   000000C6   E060               LDI     R22, 0
   \   000000C8   E070               LDI     R23, 0
   \   000000CA   ........           CALL    ?UL_DIVMOD_L03
   \   000000CE   01A4               MOVW    R21:R20, R9:R8
   \   000000D0   01B5               MOVW    R23:R22, R11:R10
   \   000000D2   9576               LSR     R23
   \   000000D4   9567               ROR     R22
   \   000000D6   9557               ROR     R21
   \   000000D8   9547               ROR     R20
   \   000000DA   1B04               SUB     R16, R20
   \   000000DC   0B15               SBC     R17, R21
   \   000000DE   0B26               SBC     R18, R22
   \   000000E0   0B37               SBC     R19, R23
   \   000000E2   01F2               MOVW    R31:R30, R5:R4
   \   000000E4   8300               ST      Z, R16
   \   000000E6   8311               STD     Z+1, R17
   \   000000E8   8322               STD     Z+2, R18
   \   000000EA   8333               STD     Z+3, R19
    328          		key[i].y1 = (top - base) * (key_initial[i].y1+5) / 160 - height/2;
   \   000000EC   01F3               MOVW    R31:R30, R7:R6
   \   000000EE   8144               LDD     R20, Z+4
   \   000000F0   8155               LDD     R21, Z+5
   \   000000F2   8166               LDD     R22, Z+6
   \   000000F4   8177               LDD     R23, Z+7
   \   000000F6   5F4B               SUBI    R20, 251
   \   000000F8   4F5F               SBCI    R21, 255
   \   000000FA   4F6F               SBCI    R22, 255
   \   000000FC   4F7F               SBCI    R23, 255
   \   000000FE   0186               MOVW    R17:R16, R13:R12
   \   00000100   0197               MOVW    R19:R18, R15:R14
   \   00000102   ........           CALL    ?L_EC_MUL_L03
   \   00000106   EA40               LDI     R20, 160
   \   00000108   E050               LDI     R21, 0
   \   0000010A   E060               LDI     R22, 0
   \   0000010C   E070               LDI     R23, 0
   \   0000010E   ........           CALL    ?UL_DIVMOD_L03
   \   00000112   01AC               MOVW    R21:R20, R25:R24
   \   00000114   01BD               MOVW    R23:R22, R27:R26
   \   00000116   9576               LSR     R23
   \   00000118   9567               ROR     R22
   \   0000011A   9557               ROR     R21
   \   0000011C   9547               ROR     R20
   \   0000011E   1B04               SUB     R16, R20
   \   00000120   0B15               SBC     R17, R21
   \   00000122   0B26               SBC     R18, R22
   \   00000124   0B37               SBC     R19, R23
   \   00000126   01F2               MOVW    R31:R30, R5:R4
   \   00000128   8304               STD     Z+4, R16
   \   0000012A   8315               STD     Z+5, R17
   \   0000012C   8326               STD     Z+6, R18
   \   0000012E   8337               STD     Z+7, R19
    329          		key[i].x2 = key[i].x1 + weigth;
   \   00000130   8100               LD      R16, Z
   \   00000132   8111               LDD     R17, Z+1
   \   00000134   8122               LDD     R18, Z+2
   \   00000136   8133               LDD     R19, Z+3
   \   00000138   0D08               ADD     R16, R8
   \   0000013A   1D19               ADC     R17, R9
   \   0000013C   1D2A               ADC     R18, R10
   \   0000013E   1D3B               ADC     R19, R11
   \   00000140   8700               STD     Z+8, R16
   \   00000142   8711               STD     Z+9, R17
   \   00000144   8722               STD     Z+10, R18
   \   00000146   8733               STD     Z+11, R19
    330          		key[i].y2 = key[i].y1 + height;
   \   00000148   8104               LDD     R16, Z+4
   \   0000014A   8115               LDD     R17, Z+5
   \   0000014C   8126               LDD     R18, Z+6
   \   0000014E   8137               LDD     R19, Z+7
   \   00000150   0F08               ADD     R16, R24
   \   00000152   1F19               ADC     R17, R25
   \   00000154   1F2A               ADC     R18, R26
   \   00000156   1F3B               ADC     R19, R27
   \   00000158   8704               STD     Z+12, R16
   \   0000015A   8715               STD     Z+13, R17
   \   0000015C   8726               STD     Z+14, R18
   \   0000015E   8737               STD     Z+15, R19
    331          	}
   \   00000160   8108               LD      R16, Y
   \   00000162   9503               INC     R16
   \                     ??key_parameter_initial_0:
   \   00000164   8308               ST      Y, R16
   \   00000166   8108               LD      R16, Y
   \   00000168   3100               CPI     R16, 16
   \   0000016A   F408               BRCC    $+2+2
   \   0000016C   CF8B               RJMP    ??key_parameter_initial_1
    332          	asm("nop");
   \   0000016E   0000               nop
    333          }
   \   00000170   9621               ADIW    R29:R28, 1
   \   00000172   E1E0               LDI     R30, 16
   \   00000174   ........           JMP     ?EPILOGUE_B16_L09

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     key_initial:
   \   00000000                      DS8 256
   \   00000100                      REQUIRE `?<Initializer for key_initial>`
   \   00000100                      DS8 4
   \   00000104                      REQUIRE `?<Initializer for weigth>`
   \   00000104                      DS8 4
   \   00000108                      REQUIRE `?<Initializer for height>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     base:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for base>`
   \   00000004                      DS8 4
   \   00000008                      REQUIRE `?<Initializer for top>`
    334          
    335          unsigned int cur_x,cur_y;
   \                     cur_x:
   \   00000008                      DS8 2
   \   0000000A                      REQUIRE `?<Initializer for cur_x>`
   \                     cur_y:
   \   0000000A                      DS8 2
   \   0000000C                      REQUIRE `?<Initializer for cur_y>`

   \                                 In  segment CODE, align 2, keep-with-next
    336          unsigned char get_touch_key(void)
   \                     get_touch_key:
    337          {
   \   00000000   ........           CALL    ?PROLOGUE8_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
    338          	unsigned char i;
    339          
    340          	if((avg_x > base && avg_x <top) && (avg_y > base && avg_y < top))
   \   00000004   9100....           LDS     R16, avg_x
   \   00000008   9110....           LDS     R17, (avg_x + 1)
   \   0000000C   E020               LDI     R18, 0
   \   0000000E   E030               LDI     R19, 0
   \   00000010   ....               LDI     R26, LOW(base)
   \   00000012   ....               LDI     R27, (base) >> 8
   \   00000014   914D               LD      R20, X+
   \   00000016   915D               LD      R21, X+
   \   00000018   916D               LD      R22, X+
   \   0000001A   917C               LD      R23, X
   \   0000001C   9713               SBIW    R27:R26, 3
   \   0000001E   1740               CP      R20, R16
   \   00000020   0751               CPC     R21, R17
   \   00000022   0762               CPC     R22, R18
   \   00000024   0772               CPC     R23, R18
   \   00000026   F578               BRCC    ??get_touch_key_0
   \   00000028   01FD               MOVW    R31:R30, R27:R26
   \   0000002A   8144               LDD     R20, Z+4
   \   0000002C   8155               LDD     R21, Z+5
   \   0000002E   8166               LDD     R22, Z+6
   \   00000030   8177               LDD     R23, Z+7
   \   00000032   1704               CP      R16, R20
   \   00000034   0715               CPC     R17, R21
   \   00000036   0726               CPC     R18, R22
   \   00000038   0737               CPC     R19, R23
   \   0000003A   F528               BRCC    ??get_touch_key_0
   \   0000003C   9100....           LDS     R16, avg_y
   \   00000040   9110....           LDS     R17, (avg_y + 1)
   \   00000044   900D               LD      R0, X+
   \   00000046   901D               LD      R1, X+
   \   00000048   902D               LD      R2, X+
   \   0000004A   903C               LD      R3, X
   \   0000004C   9713               SBIW    R27:R26, 3
   \   0000004E   1600               CP      R0, R16
   \   00000050   0611               CPC     R1, R17
   \   00000052   0622               CPC     R2, R18
   \   00000054   0632               CPC     R3, R18
   \   00000056   F4B8               BRCC    ??get_touch_key_0
   \   00000058   1704               CP      R16, R20
   \   0000005A   0715               CPC     R17, R21
   \   0000005C   0726               CPC     R18, R22
   \   0000005E   0737               CPC     R19, R23
   \   00000060   F490               BRCC    ??get_touch_key_0
    341          	{
    342          		cur_x = top - avg_x;
   \   00000062   018A               MOVW    R17:R16, R21:R20
   \   00000064   9120....           LDS     R18, avg_x
   \   00000068   9130....           LDS     R19, (avg_x + 1)
   \   0000006C   1B02               SUB     R16, R18
   \   0000006E   0B13               SBC     R17, R19
   \   00000070   8700               STD     Z+8, R16
   \   00000072   8711               STD     Z+9, R17
    343          		cur_y = top - avg_y;
   \   00000074   9100....           LDS     R16, avg_y
   \   00000078   9110....           LDS     R17, (avg_y + 1)
   \   0000007C   1B40               SUB     R20, R16
   \   0000007E   0B51               SBC     R21, R17
   \   00000080   8742               STD     Z+10, R20
   \   00000082   8753               STD     Z+11, R21
    344          		asm("nop");
   \   00000084   0000               nop
    345          	}
    346          	
    347          	for(i=0;i<16;i++)
   \                     ??get_touch_key_0:
   \   00000086   E050               LDI     R21, 0
   \   00000088   C001               RJMP    ??get_touch_key_1
   \                     ??get_touch_key_2:
   \   0000008A   9553               INC     R21
   \                     ??get_touch_key_1:
   \   0000008C   01FD               MOVW    R31:R30, R27:R26
   \   0000008E   8400               LDD     R0, Z+8
   \   00000090   8411               LDD     R1, Z+9
   \   00000092   2422               CLR     R2
   \   00000094   2433               CLR     R3
   \   00000096   ....               LDI     R18, LOW(key)
   \   00000098   ....               LDI     R19, (key) >> 8
   \   0000009A   3150               CPI     R21, 16
   \   0000009C   F5A0               BRCC    ??get_touch_key_3
    348          	{
    349          		if(cur_x > key[i].x1 && cur_x < key[i].x2)
   \   0000009E   2F05               MOV     R16, R21
   \   000000A0   E010               LDI     R17, 0
   \   000000A2   E044               LDI     R20, 4
   \   000000A4   ........           CALL    ?S_SHL_L02
   \   000000A8   0F20               ADD     R18, R16
   \   000000AA   1F31               ADC     R19, R17
   \   000000AC   01F9               MOVW    R31:R30, R19:R18
   \   000000AE   8100               LD      R16, Z
   \   000000B0   8111               LDD     R17, Z+1
   \   000000B2   8122               LDD     R18, Z+2
   \   000000B4   8133               LDD     R19, Z+3
   \   000000B6   1500               CP      R16, R0
   \   000000B8   0511               CPC     R17, R1
   \   000000BA   0522               CPC     R18, R2
   \   000000BC   0532               CPC     R19, R2
   \   000000BE   F728               BRCC    ??get_touch_key_2
   \   000000C0   8500               LDD     R16, Z+8
   \   000000C2   8511               LDD     R17, Z+9
   \   000000C4   8522               LDD     R18, Z+10
   \   000000C6   8533               LDD     R19, Z+11
   \   000000C8   1600               CP      R0, R16
   \   000000CA   0611               CPC     R1, R17
   \   000000CC   0622               CPC     R2, R18
   \   000000CE   0633               CPC     R3, R19
   \   000000D0   F6E0               BRCC    ??get_touch_key_2
   \   000000D2   961A               ADIW    R27:R26, 10
   \   000000D4   910D               LD      R16, X+
   \   000000D6   911C               LD      R17, X
   \   000000D8   971B               SBIW    R27:R26, 11
   \   000000DA   E020               LDI     R18, 0
   \   000000DC   E030               LDI     R19, 0
   \   000000DE   8004               LDD     R0, Z+4
   \   000000E0   8015               LDD     R1, Z+5
   \   000000E2   8026               LDD     R2, Z+6
   \   000000E4   8037               LDD     R3, Z+7
   \   000000E6   1600               CP      R0, R16
   \   000000E8   0611               CPC     R1, R17
   \   000000EA   0622               CPC     R2, R18
   \   000000EC   0632               CPC     R3, R18
   \   000000EE   F668               BRCC    ??get_touch_key_2
   \   000000F0   8404               LDD     R0, Z+12
   \   000000F2   8415               LDD     R1, Z+13
   \   000000F4   8426               LDD     R2, Z+14
   \   000000F6   8437               LDD     R3, Z+15
   \   000000F8   1500               CP      R16, R0
   \   000000FA   0511               CPC     R17, R1
   \   000000FC   0522               CPC     R18, R2
   \   000000FE   0533               CPC     R19, R3
   \   00000100   F620               BRCC    ??get_touch_key_2
    350          		{
    351          			if(cur_y > key[i].y1 && cur_y <key[i].y2)
    352          			{
    353          				return i;
   \   00000102   2F05               MOV     R16, R21
   \   00000104   C072               RJMP    ??get_touch_key_4
    354          			}
    355          		}
    356          	}
    357          	
    358          	if(cur_x > key[13].x1 && cur_y > key[13].y2)
   \                     ??get_touch_key_3:
   \   00000106   ....               LDI     R30, ((key + 208) & 0xff) & 0xFF
   \   00000108   ....               LDI     R31, (((key + 208) >> 8) & 0xff) & 0xFF
   \   0000010A   8140               LD      R20, Z
   \   0000010C   8151               LDD     R21, Z+1
   \   0000010E   8162               LDD     R22, Z+2
   \   00000110   8173               LDD     R23, Z+3
   \   00000112   1540               CP      R20, R0
   \   00000114   0551               CPC     R21, R1
   \   00000116   0562               CPC     R22, R2
   \   00000118   0572               CPC     R23, R2
   \   0000011A   F470               BRCC    ??get_touch_key_5
   \   0000011C   8544               LDD     R20, Z+12
   \   0000011E   8555               LDD     R21, Z+13
   \   00000120   8566               LDD     R22, Z+14
   \   00000122   8577               LDD     R23, Z+15
   \   00000124   01FD               MOVW    R31:R30, R27:R26
   \   00000126   8442               LDD     R4, Z+10
   \   00000128   8453               LDD     R5, Z+11
   \   0000012A   1544               CP      R20, R4
   \   0000012C   0555               CPC     R21, R5
   \   0000012E   0562               CPC     R22, R2
   \   00000130   0572               CPC     R23, R2
   \   00000132   F410               BRCC    ??get_touch_key_5
    359          		return 16;
   \   00000134   E100               LDI     R16, 16
   \   00000136   C059               RJMP    ??get_touch_key_4
    360          	
    361          	if(cur_x < key[14].x2 && cur_y > key[14].y2)
   \                     ??get_touch_key_5:
   \   00000138   ....               LDI     R30, ((key + 208) & 0xff) & 0xFF
   \   0000013A   ....               LDI     R31, (((key + 208) >> 8) & 0xff) & 0xFF
   \   0000013C   8D40               LDD     R20, Z+24
   \   0000013E   8D51               LDD     R21, Z+25
   \   00000140   8D62               LDD     R22, Z+26
   \   00000142   8D73               LDD     R23, Z+27
   \   00000144   1604               CP      R0, R20
   \   00000146   0615               CPC     R1, R21
   \   00000148   0626               CPC     R2, R22
   \   0000014A   0637               CPC     R3, R23
   \   0000014C   F470               BRCC    ??get_touch_key_6
   \   0000014E   8D44               LDD     R20, Z+28
   \   00000150   8D55               LDD     R21, Z+29
   \   00000152   8D66               LDD     R22, Z+30
   \   00000154   8D77               LDD     R23, Z+31
   \   00000156   01FD               MOVW    R31:R30, R27:R26
   \   00000158   8442               LDD     R4, Z+10
   \   0000015A   8453               LDD     R5, Z+11
   \   0000015C   1544               CP      R20, R4
   \   0000015E   0555               CPC     R21, R5
   \   00000160   0562               CPC     R22, R2
   \   00000162   0572               CPC     R23, R2
   \   00000164   F410               BRCC    ??get_touch_key_6
    362          		return 17;
   \   00000166   E101               LDI     R16, 17
   \   00000168   C040               RJMP    ??get_touch_key_4
    363          	
    364          	//if(cur_x > key[0].x1 && cur_x < key[0].x2 && cur_y > key[0].y2 && Menu_status == 0x02)		//alan
    365          	//	return 18;
    366          	
    367          	if(cur_x > (key[0].x1+key[0].x2)/2 && cur_x < (key[15].x1+key[15].x2)/2 && cur_y > key[15].y2 && Menu_status == 0x02)	//alan
   \                     ??get_touch_key_6:
   \   0000016A   01F9               MOVW    R31:R30, R19:R18
   \   0000016C   8140               LD      R20, Z
   \   0000016E   8151               LDD     R21, Z+1
   \   00000170   8162               LDD     R22, Z+2
   \   00000172   8173               LDD     R23, Z+3
   \   00000174   8440               LDD     R4, Z+8
   \   00000176   8451               LDD     R5, Z+9
   \   00000178   8462               LDD     R6, Z+10
   \   0000017A   8473               LDD     R7, Z+11
   \   0000017C   0D44               ADD     R20, R4
   \   0000017E   1D55               ADC     R21, R5
   \   00000180   1D66               ADC     R22, R6
   \   00000182   1D77               ADC     R23, R7
   \   00000184   9576               LSR     R23
   \   00000186   9567               ROR     R22
   \   00000188   9557               ROR     R21
   \   0000018A   9547               ROR     R20
   \   0000018C   1540               CP      R20, R0
   \   0000018E   0551               CPC     R21, R1
   \   00000190   0562               CPC     R22, R2
   \   00000192   0572               CPC     R23, R2
   \   00000194   F548               BRCC    ??get_touch_key_7
   \   00000196   ....               LDI     R30, ((key + 208) & 0xff) & 0xFF
   \   00000198   ....               LDI     R31, (((key + 208) >> 8) & 0xff) & 0xFF
   \   0000019A   A140               LDD     R20, Z+32
   \   0000019C   A151               LDD     R21, Z+33
   \   0000019E   A162               LDD     R22, Z+34
   \   000001A0   A173               LDD     R23, Z+35
   \   000001A2   A440               LDD     R4, Z+40
   \   000001A4   A451               LDD     R5, Z+41
   \   000001A6   A462               LDD     R6, Z+42
   \   000001A8   A473               LDD     R7, Z+43
   \   000001AA   0D44               ADD     R20, R4
   \   000001AC   1D55               ADC     R21, R5
   \   000001AE   1D66               ADC     R22, R6
   \   000001B0   1D77               ADC     R23, R7
   \   000001B2   9576               LSR     R23
   \   000001B4   9567               ROR     R22
   \   000001B6   9557               ROR     R21
   \   000001B8   9547               ROR     R20
   \   000001BA   1604               CP      R0, R20
   \   000001BC   0615               CPC     R1, R21
   \   000001BE   0626               CPC     R2, R22
   \   000001C0   0637               CPC     R3, R23
   \   000001C2   F490               BRCC    ??get_touch_key_7
   \   000001C4   A544               LDD     R20, Z+44
   \   000001C6   A555               LDD     R21, Z+45
   \   000001C8   A566               LDD     R22, Z+46
   \   000001CA   A577               LDD     R23, Z+47
   \   000001CC   01FD               MOVW    R31:R30, R27:R26
   \   000001CE   8502               LDD     R16, Z+10
   \   000001D0   8513               LDD     R17, Z+11
   \   000001D2   1740               CP      R20, R16
   \   000001D4   0751               CPC     R21, R17
   \   000001D6   0562               CPC     R22, R2
   \   000001D8   0572               CPC     R23, R2
   \   000001DA   F430               BRCC    ??get_touch_key_7
   \   000001DC   9100....           LDS     R16, Menu_status
   \   000001E0   3002               CPI     R16, 2
   \   000001E2   F411               BRNE    ??get_touch_key_7
    368          		return 19;
   \   000001E4   E103               LDI     R16, 19
   \   000001E6   C001               RJMP    ??get_touch_key_4
    369          	
    370          	return 0xFF;
   \                     ??get_touch_key_7:
   \   000001E8   EF0F               LDI     R16, 255
   \                     ??get_touch_key_4:
   \   000001EA   E0E8               LDI     R30, 8
   \   000001EC   ........           JMP     ?EPILOGUE_B8_L09
    371          }
    372          
    373          

   \                                 In  segment CODE, align 2, keep-with-next
    374          unsigned char get_touch_menu_00(void)
   \                     get_touch_menu_00:
    375          {
    376          	if((avg_x > base && avg_x <top) && (avg_y > base && avg_y < top))
   \   00000000   9100....           LDS     R16, avg_x
   \   00000004   9110....           LDS     R17, (avg_x + 1)
   \   00000008   E020               LDI     R18, 0
   \   0000000A   E030               LDI     R19, 0
   \   0000000C   ....               LDI     R30, LOW(base)
   \   0000000E   ....               LDI     R31, (base) >> 8
   \   00000010   8140               LD      R20, Z
   \   00000012   8151               LDD     R21, Z+1
   \   00000014   8162               LDD     R22, Z+2
   \   00000016   8173               LDD     R23, Z+3
   \   00000018   1740               CP      R20, R16
   \   0000001A   0751               CPC     R21, R17
   \   0000001C   0762               CPC     R22, R18
   \   0000001E   0772               CPC     R23, R18
   \   00000020   F568               BRCC    ??get_touch_menu_00_0
   \   00000022   8144               LDD     R20, Z+4
   \   00000024   8155               LDD     R21, Z+5
   \   00000026   8166               LDD     R22, Z+6
   \   00000028   8177               LDD     R23, Z+7
   \   0000002A   1704               CP      R16, R20
   \   0000002C   0715               CPC     R17, R21
   \   0000002E   0726               CPC     R18, R22
   \   00000030   0737               CPC     R19, R23
   \   00000032   F520               BRCC    ??get_touch_menu_00_0
   \   00000034   9100....           LDS     R16, avg_y
   \   00000038   9110....           LDS     R17, (avg_y + 1)
   \   0000003C   8000               LD      R0, Z
   \   0000003E   8011               LDD     R1, Z+1
   \   00000040   8022               LDD     R2, Z+2
   \   00000042   8033               LDD     R3, Z+3
   \   00000044   1600               CP      R0, R16
   \   00000046   0611               CPC     R1, R17
   \   00000048   0622               CPC     R2, R18
   \   0000004A   0632               CPC     R3, R18
   \   0000004C   F4B8               BRCC    ??get_touch_menu_00_0
   \   0000004E   1704               CP      R16, R20
   \   00000050   0715               CPC     R17, R21
   \   00000052   0726               CPC     R18, R22
   \   00000054   0737               CPC     R19, R23
   \   00000056   F490               BRCC    ??get_touch_menu_00_0
    377          	{
    378          		cur_x = top - avg_x;
   \   00000058   018A               MOVW    R17:R16, R21:R20
   \   0000005A   9120....           LDS     R18, avg_x
   \   0000005E   9130....           LDS     R19, (avg_x + 1)
   \   00000062   1B02               SUB     R16, R18
   \   00000064   0B13               SBC     R17, R19
   \   00000066   8700               STD     Z+8, R16
   \   00000068   8711               STD     Z+9, R17
    379          		cur_y = top - avg_y;
   \   0000006A   9100....           LDS     R16, avg_y
   \   0000006E   9110....           LDS     R17, (avg_y + 1)
   \   00000072   1B40               SUB     R20, R16
   \   00000074   0B51               SBC     R21, R17
   \   00000076   8742               STD     Z+10, R20
   \   00000078   8753               STD     Z+11, R21
    380          		asm("nop");
   \   0000007A   0000               nop
    381          	}
    382          	
    383          	if(cur_y > 108 * 5 && cur_y < 108 * 6)
   \                     ??get_touch_menu_00_0:
   \   0000007C   8502               LDD     R16, Z+10
   \   0000007E   8513               LDD     R17, Z+11
   \   00000080   310D               CPI     R16, 29
   \   00000082   E022               LDI     R18, 2
   \   00000084   0712               CPC     R17, R18
   \   00000086   F028               BRCS    ??get_touch_menu_00_1
   \   00000088   3808               CPI     R16, 136
   \   0000008A   0712               CPC     R17, R18
   \   0000008C   F410               BRCC    ??get_touch_menu_00_1
    384          	{
    385          		return 0;
   \   0000008E   E000               LDI     R16, 0
   \   00000090   9508               RET
    386          	}
    387          	else if(cur_y > 108 * 8 && cur_y < 108 * 9)
   \                     ??get_touch_menu_00_1:
   \   00000092   3601               CPI     R16, 97
   \   00000094   E023               LDI     R18, 3
   \   00000096   0712               CPC     R17, R18
   \   00000098   F028               BRCS    ??get_touch_menu_00_2
   \   0000009A   3C0C               CPI     R16, 204
   \   0000009C   0712               CPC     R17, R18
   \   0000009E   F410               BRCC    ??get_touch_menu_00_2
    388          	{
    389          		return 1;
   \   000000A0   E001               LDI     R16, 1
   \   000000A2   9508               RET
    390          	}
    391          	else if(cur_y > 108 * 11 && cur_y < 108 * 12)
   \                     ??get_touch_menu_00_2:
   \   000000A4   3A05               CPI     R16, 165
   \   000000A6   E024               LDI     R18, 4
   \   000000A8   0712               CPC     R17, R18
   \   000000AA   F030               BRCS    ??get_touch_menu_00_3
   \   000000AC   3100               CPI     R16, 16
   \   000000AE   E025               LDI     R18, 5
   \   000000B0   0712               CPC     R17, R18
   \   000000B2   F410               BRCC    ??get_touch_menu_00_3
    392          	{
    393          		return 2;
   \   000000B4   E002               LDI     R16, 2
   \   000000B6   9508               RET
    394          	}
    395          	
    396          	return 0xFF;
   \                     ??get_touch_menu_00_3:
   \   000000B8   EF0F               LDI     R16, 255
   \   000000BA   9508               RET
    397          }
    398          

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
    399          volatile unsigned char g_buffer_tx[17] = "D000010200000000";
   \                     g_buffer_tx:
   \   00000000                      DS8 17
   \   00000011                      REQUIRE `?<Initializer for g_buffer_tx>`

   \                                 In  segment CODE, align 2, keep-with-next
    400          void id_setting(unsigned char *data)
   \                     id_setting:
    401          {
    402          	//volatile unsigned char buffer_tx[17] = "D000010200000000";
    403          	//volatile unsigned char buffer2_tx[17] = "D000010500000000";
    404          	g_buffer_tx[7] = '2';
   \   00000000   E322               LDI     R18, 50
   \   00000002   9320....           STS     (g_buffer_tx + 7), R18
    405          	strncpy(&g_buffer_tx[8],data,9);
   \   00000006   E049               LDI     R20, 9
   \   00000008   E050               LDI     R21, 0
   \   0000000A   0198               MOVW    R19:R18, R17:R16
   \   0000000C   ....               LDI     R16, LOW((g_buffer_tx + 8))
   \   0000000E   ....               LDI     R17, HIGH((g_buffer_tx + 8))
   \   00000010   ........           CALL    strncpy
    406          	//strncpy(&buffer2_tx[8],data,9);
    407          	
    408          	send_frame_pp_ext_broad(g_buffer_tx,500);
   \   00000014   EF24               LDI     R18, 244
   \   00000016   E031               LDI     R19, 1
   \   00000018   ....               LDI     R16, LOW(g_buffer_tx)
   \   0000001A   ....               LDI     R17, (g_buffer_tx) >> 8
   \   0000001C   ........           CALL    send_frame_pp_ext_broad
    409          	
    410          	g_buffer_tx[7] = '5';
   \   00000020   E305               LDI     R16, 53
   \   00000022   9300....           STS     (g_buffer_tx + 7), R16
    411          	send_frame_pp_ext_broad(g_buffer_tx,200);
   \   00000026   EC28               LDI     R18, 200
   \   00000028   E030               LDI     R19, 0
   \   0000002A   ....               LDI     R16, LOW(g_buffer_tx)
   \   0000002C   ....               LDI     R17, (g_buffer_tx) >> 8
   \   0000002E   ........           CALL    send_frame_pp_ext_broad
    412          }
   \   00000032   9508               RET
    413          

   \                                 In  segment CODE, align 2, keep-with-next
    414          void id_setting_ee(unsigned char __eeprom *data)
   \                     id_setting_ee:
    415          {
    416          	//volatile unsigned char buffer_tx[17] = "D000010200000000";
    417          	//volatile unsigned char buffer2_tx[17] = "D000010500000000";
    418          	g_buffer_tx[7] = '2';
   \   00000000   E322               LDI     R18, 50
   \   00000002   9320....           STS     (g_buffer_tx + 7), R18
    419          	strncpy(&g_buffer_tx[8],data,9);
   \   00000006   E049               LDI     R20, 9
   \   00000008   E050               LDI     R21, 0
   \   0000000A   0198               MOVW    R19:R18, R17:R16
   \   0000000C   ....               LDI     R16, LOW((g_buffer_tx + 8))
   \   0000000E   ....               LDI     R17, HIGH((g_buffer_tx + 8))
   \   00000010   ........           CALL    strncpy
    420          	//strncpy(&buffer2_tx[8],data,9);
    421          	
    422          	send_frame_pp_ext_broad(g_buffer_tx,500);
   \   00000014   EF24               LDI     R18, 244
   \   00000016   E031               LDI     R19, 1
   \   00000018   ....               LDI     R16, LOW(g_buffer_tx)
   \   0000001A   ....               LDI     R17, (g_buffer_tx) >> 8
   \   0000001C   ........           CALL    send_frame_pp_ext_broad
    423          	
    424          	g_buffer_tx[7] = '5';
   \   00000020   E305               LDI     R16, 53
   \   00000022   9300....           STS     (g_buffer_tx + 7), R16
    425          	send_frame_pp_ext_broad(g_buffer_tx,200);
   \   00000026   EC28               LDI     R18, 200
   \   00000028   E030               LDI     R19, 0
   \   0000002A   ....               LDI     R16, LOW(g_buffer_tx)
   \   0000002C   ....               LDI     R17, (g_buffer_tx) >> 8
   \   0000002E   ........           CALL    send_frame_pp_ext_broad
    426          }
   \   00000032   9508               RET
    427          

   \                                 In  segment CODE, align 2, keep-with-next
    428          void touch_key_blink(unsigned char index,unsigned int ms)
   \                     touch_key_blink:
    429          {
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C9               MOVW    R25:R24, R19:R18
    430          	switch(index)
   \   00000006   ....               LDI     R30, LOW(`?<Jumptable for touch_key_blink>_0`)
   \   00000008   ....               LDI     R31, (`?<Jumptable for touch_key_blink>_0`) >> 8
   \   0000000A   ........           JMP     ?CV_SWITCH_L06
    431          	{
    432          	case 0:
    433          		LCD_distring("0", 20, 120, 1);
   \                     ??touch_key_blink_0:
   \   0000000E   E041               LDI     R20, 1
   \   00000010   E738               LDI     R19, 120
   \   00000012   E124               LDI     R18, 20
   \   00000014   ....               LDI     R16, LOW(`?<Constant "0">`)
   \   00000016   ....               LDI     R17, (`?<Constant "0">`) >> 8
   \   00000018   ........           CALL    LCD_distring
    434          		delay_ms(ms);
   \   0000001C   018C               MOVW    R17:R16, R25:R24
   \   0000001E   ........           CALL    delay_ms
    435          		LCD_distring("0", 20, 120, 0);
   \   00000022   E040               LDI     R20, 0
   \   00000024   E738               LDI     R19, 120
   \   00000026   E124               LDI     R18, 20
   \   00000028   ....               LDI     R16, LOW(`?<Constant "0">`)
   \   0000002A   ....               LDI     R17, (`?<Constant "0">`) >> 8
   \   0000002C   C11F               RJMP    ??touch_key_blink_1
    436          		break;
    437          		
    438          	case 1:
    439          		LCD_distring("1", 10, 48, 1);
   \                     ??touch_key_blink_2:
   \   0000002E   E041               LDI     R20, 1
   \   00000030   E330               LDI     R19, 48
   \   00000032   E02A               LDI     R18, 10
   \   00000034   ....               LDI     R16, LOW((`?<Constant "0">` + 2))
   \   00000036   ....               LDI     R17, HIGH((`?<Constant "0">` + 2))
   \   00000038   ........           CALL    LCD_distring
    440          		delay_ms(ms);
   \   0000003C   018C               MOVW    R17:R16, R25:R24
   \   0000003E   ........           CALL    delay_ms
    441          		LCD_distring("1", 10, 48, 0);
   \   00000042   E040               LDI     R20, 0
   \   00000044   E330               LDI     R19, 48
   \   00000046   E02A               LDI     R18, 10
   \   00000048   ....               LDI     R16, LOW((`?<Constant "0">` + 2))
   \   0000004A   ....               LDI     R17, HIGH((`?<Constant "0">` + 2))
   \   0000004C   C10F               RJMP    ??touch_key_blink_1
    442          		break;
    443          		
    444          	case 2:
    445          		LCD_distring("2", 20, 48, 1);
   \                     ??touch_key_blink_3:
   \   0000004E   E041               LDI     R20, 1
   \   00000050   E330               LDI     R19, 48
   \   00000052   E124               LDI     R18, 20
   \   00000054   ....               LDI     R16, LOW((`?<Constant "0">` + 4))
   \   00000056   ....               LDI     R17, HIGH((`?<Constant "0">` + 4))
   \   00000058   ........           CALL    LCD_distring
    446          		delay_ms(ms);
   \   0000005C   018C               MOVW    R17:R16, R25:R24
   \   0000005E   ........           CALL    delay_ms
    447          		LCD_distring("2", 20, 48, 0);
   \   00000062   E040               LDI     R20, 0
   \   00000064   E330               LDI     R19, 48
   \   00000066   E124               LDI     R18, 20
   \   00000068   ....               LDI     R16, LOW((`?<Constant "0">` + 4))
   \   0000006A   ....               LDI     R17, HIGH((`?<Constant "0">` + 4))
   \   0000006C   C0FF               RJMP    ??touch_key_blink_1
    448          		break;
    449          		
    450          	case 3:
    451          		LCD_distring("3", 30, 48, 1);
   \                     ??touch_key_blink_4:
   \   0000006E   E041               LDI     R20, 1
   \   00000070   E330               LDI     R19, 48
   \   00000072   E12E               LDI     R18, 30
   \   00000074   ....               LDI     R16, LOW((`?<Constant "0">` + 6))
   \   00000076   ....               LDI     R17, HIGH((`?<Constant "0">` + 6))
   \   00000078   ........           CALL    LCD_distring
    452          		delay_ms(ms);
   \   0000007C   018C               MOVW    R17:R16, R25:R24
   \   0000007E   ........           CALL    delay_ms
    453          		LCD_distring("3", 30, 48, 0);
   \   00000082   E040               LDI     R20, 0
   \   00000084   E330               LDI     R19, 48
   \   00000086   E12E               LDI     R18, 30
   \   00000088   ....               LDI     R16, LOW((`?<Constant "0">` + 6))
   \   0000008A   ....               LDI     R17, HIGH((`?<Constant "0">` + 6))
   \   0000008C   C0EF               RJMP    ??touch_key_blink_1
    454          		break;
    455          		
    456          	case 4:
    457          		LCD_distring("4", 10, 72, 1);
   \                     ??touch_key_blink_5:
   \   0000008E   E041               LDI     R20, 1
   \   00000090   E438               LDI     R19, 72
   \   00000092   E02A               LDI     R18, 10
   \   00000094   ....               LDI     R16, LOW((`?<Constant "0">` + 8))
   \   00000096   ....               LDI     R17, HIGH((`?<Constant "0">` + 8))
   \   00000098   ........           CALL    LCD_distring
    458          		delay_ms(ms);
   \   0000009C   018C               MOVW    R17:R16, R25:R24
   \   0000009E   ........           CALL    delay_ms
    459          		LCD_distring("4", 10, 72, 0);
   \   000000A2   E040               LDI     R20, 0
   \   000000A4   E438               LDI     R19, 72
   \   000000A6   E02A               LDI     R18, 10
   \   000000A8   ....               LDI     R16, LOW((`?<Constant "0">` + 8))
   \   000000AA   ....               LDI     R17, HIGH((`?<Constant "0">` + 8))
   \   000000AC   C0DF               RJMP    ??touch_key_blink_1
    460          		break;
    461          		
    462          	case 5:
    463          		LCD_distring("5", 20, 72, 1);
   \                     ??touch_key_blink_6:
   \   000000AE   E041               LDI     R20, 1
   \   000000B0   E438               LDI     R19, 72
   \   000000B2   E124               LDI     R18, 20
   \   000000B4   ....               LDI     R16, LOW((`?<Constant "0">` + 10))
   \   000000B6   ....               LDI     R17, HIGH((`?<Constant "0">` + 10))
   \   000000B8   ........           CALL    LCD_distring
    464          		delay_ms(ms);
   \   000000BC   018C               MOVW    R17:R16, R25:R24
   \   000000BE   ........           CALL    delay_ms
    465          		LCD_distring("5", 20, 72, 0);
   \   000000C2   E040               LDI     R20, 0
   \   000000C4   E438               LDI     R19, 72
   \   000000C6   E124               LDI     R18, 20
   \   000000C8   ....               LDI     R16, LOW((`?<Constant "0">` + 10))
   \   000000CA   ....               LDI     R17, HIGH((`?<Constant "0">` + 10))
   \   000000CC   C0CF               RJMP    ??touch_key_blink_1
    466          		break;
    467          		
    468          	case 6:
    469          		LCD_distring("6", 30, 72, 1);
   \                     ??touch_key_blink_7:
   \   000000CE   E041               LDI     R20, 1
   \   000000D0   E438               LDI     R19, 72
   \   000000D2   E12E               LDI     R18, 30
   \   000000D4   ....               LDI     R16, LOW((`?<Constant "0">` + 12))
   \   000000D6   ....               LDI     R17, HIGH((`?<Constant "0">` + 12))
   \   000000D8   ........           CALL    LCD_distring
    470          		delay_ms(ms);
   \   000000DC   018C               MOVW    R17:R16, R25:R24
   \   000000DE   ........           CALL    delay_ms
    471          		LCD_distring("6", 30, 72, 0);
   \   000000E2   E040               LDI     R20, 0
   \   000000E4   E438               LDI     R19, 72
   \   000000E6   E12E               LDI     R18, 30
   \   000000E8   ....               LDI     R16, LOW((`?<Constant "0">` + 12))
   \   000000EA   ....               LDI     R17, HIGH((`?<Constant "0">` + 12))
   \   000000EC   C0BF               RJMP    ??touch_key_blink_1
    472          		break;
    473          		
    474          	case 7:
    475          		LCD_distring("7", 10, 96, 1);
   \                     ??touch_key_blink_8:
   \   000000EE   E041               LDI     R20, 1
   \   000000F0   E630               LDI     R19, 96
   \   000000F2   E02A               LDI     R18, 10
   \   000000F4   ....               LDI     R16, LOW((`?<Constant "0">` + 14))
   \   000000F6   ....               LDI     R17, HIGH((`?<Constant "0">` + 14))
   \   000000F8   ........           CALL    LCD_distring
    476          		delay_ms(ms);
   \   000000FC   018C               MOVW    R17:R16, R25:R24
   \   000000FE   ........           CALL    delay_ms
    477          		LCD_distring("7", 10, 96, 0);
   \   00000102   E040               LDI     R20, 0
   \   00000104   E630               LDI     R19, 96
   \   00000106   E02A               LDI     R18, 10
   \   00000108   ....               LDI     R16, LOW((`?<Constant "0">` + 14))
   \   0000010A   ....               LDI     R17, HIGH((`?<Constant "0">` + 14))
   \   0000010C   C0AF               RJMP    ??touch_key_blink_1
    478          		break;
    479          		
    480          	case 8:
    481          		LCD_distring("8", 20, 96, 1);
   \                     ??touch_key_blink_9:
   \   0000010E   E041               LDI     R20, 1
   \   00000110   E630               LDI     R19, 96
   \   00000112   E124               LDI     R18, 20
   \   00000114   ....               LDI     R16, LOW((`?<Constant "0">` + 16))
   \   00000116   ....               LDI     R17, HIGH((`?<Constant "0">` + 16))
   \   00000118   ........           CALL    LCD_distring
    482          		delay_ms(ms);
   \   0000011C   018C               MOVW    R17:R16, R25:R24
   \   0000011E   ........           CALL    delay_ms
    483          		LCD_distring("8", 20, 96, 0);
   \   00000122   E040               LDI     R20, 0
   \   00000124   E630               LDI     R19, 96
   \   00000126   E124               LDI     R18, 20
   \   00000128   ....               LDI     R16, LOW((`?<Constant "0">` + 16))
   \   0000012A   ....               LDI     R17, HIGH((`?<Constant "0">` + 16))
   \   0000012C   C09F               RJMP    ??touch_key_blink_1
    484          		break;
    485          		
    486          	case 9:
    487          		LCD_distring("9", 30, 96, 1);
   \                     ??touch_key_blink_10:
   \   0000012E   E041               LDI     R20, 1
   \   00000130   E630               LDI     R19, 96
   \   00000132   E12E               LDI     R18, 30
   \   00000134   ....               LDI     R16, LOW((`?<Constant "0">` + 18))
   \   00000136   ....               LDI     R17, HIGH((`?<Constant "0">` + 18))
   \   00000138   ........           CALL    LCD_distring
    488          		delay_ms(ms);
   \   0000013C   018C               MOVW    R17:R16, R25:R24
   \   0000013E   ........           CALL    delay_ms
    489          		LCD_distring("9", 30, 96, 0);
   \   00000142   E040               LDI     R20, 0
   \   00000144   E630               LDI     R19, 96
   \   00000146   E12E               LDI     R18, 30
   \   00000148   ....               LDI     R16, LOW((`?<Constant "0">` + 18))
   \   0000014A   ....               LDI     R17, HIGH((`?<Constant "0">` + 18))
   \   0000014C   C08F               RJMP    ??touch_key_blink_1
    490          		break;
    491          		
    492          	case 10:
    493          		LCD_distring("A", 40, 48, 1);
   \                     ??touch_key_blink_11:
   \   0000014E   E041               LDI     R20, 1
   \   00000150   E330               LDI     R19, 48
   \   00000152   E228               LDI     R18, 40
   \   00000154   ....               LDI     R16, LOW((`?<Constant "0">` + 20))
   \   00000156   ....               LDI     R17, HIGH((`?<Constant "0">` + 20))
   \   00000158   ........           CALL    LCD_distring
    494          		delay_ms(ms);
   \   0000015C   018C               MOVW    R17:R16, R25:R24
   \   0000015E   ........           CALL    delay_ms
    495          		LCD_distring("A", 40, 48, 0);
   \   00000162   E040               LDI     R20, 0
   \   00000164   E330               LDI     R19, 48
   \   00000166   E228               LDI     R18, 40
   \   00000168   ....               LDI     R16, LOW((`?<Constant "0">` + 20))
   \   0000016A   ....               LDI     R17, HIGH((`?<Constant "0">` + 20))
   \   0000016C   C07F               RJMP    ??touch_key_blink_1
    496          		break;
    497          		
    498          	case 11:
    499          		LCD_distring("B", 40, 72, 1);
   \                     ??touch_key_blink_12:
   \   0000016E   E041               LDI     R20, 1
   \   00000170   E438               LDI     R19, 72
   \   00000172   E228               LDI     R18, 40
   \   00000174   ....               LDI     R16, LOW((`?<Constant "0">` + 22))
   \   00000176   ....               LDI     R17, HIGH((`?<Constant "0">` + 22))
   \   00000178   ........           CALL    LCD_distring
    500          		delay_ms(ms);
   \   0000017C   018C               MOVW    R17:R16, R25:R24
   \   0000017E   ........           CALL    delay_ms
    501          		LCD_distring("B", 40, 72, 0);
   \   00000182   E040               LDI     R20, 0
   \   00000184   E438               LDI     R19, 72
   \   00000186   E228               LDI     R18, 40
   \   00000188   ....               LDI     R16, LOW((`?<Constant "0">` + 22))
   \   0000018A   ....               LDI     R17, HIGH((`?<Constant "0">` + 22))
   \   0000018C   C06F               RJMP    ??touch_key_blink_1
    502          		break;
    503          		
    504          	case 12:
    505          		LCD_distring("C", 40, 96, 1);
   \                     ??touch_key_blink_13:
   \   0000018E   E041               LDI     R20, 1
   \   00000190   E630               LDI     R19, 96
   \   00000192   E228               LDI     R18, 40
   \   00000194   ....               LDI     R16, LOW((`?<Constant "0">` + 24))
   \   00000196   ....               LDI     R17, HIGH((`?<Constant "0">` + 24))
   \   00000198   ........           CALL    LCD_distring
    506          		delay_ms(ms);
   \   0000019C   018C               MOVW    R17:R16, R25:R24
   \   0000019E   ........           CALL    delay_ms
    507          		LCD_distring("C", 40, 96, 0);
   \   000001A2   E040               LDI     R20, 0
   \   000001A4   E630               LDI     R19, 96
   \   000001A6   E228               LDI     R18, 40
   \   000001A8   ....               LDI     R16, LOW((`?<Constant "0">` + 24))
   \   000001AA   ....               LDI     R17, HIGH((`?<Constant "0">` + 24))
   \   000001AC   C05F               RJMP    ??touch_key_blink_1
    508          		break;
    509          		
    510          	case 13:
    511          		LCD_distring("D", 40, 120, 1);
   \                     ??touch_key_blink_14:
   \   000001AE   E041               LDI     R20, 1
   \   000001B0   E738               LDI     R19, 120
   \   000001B2   E228               LDI     R18, 40
   \   000001B4   ....               LDI     R16, LOW((`?<Constant "0">` + 26))
   \   000001B6   ....               LDI     R17, HIGH((`?<Constant "0">` + 26))
   \   000001B8   ........           CALL    LCD_distring
    512          		delay_ms(ms);
   \   000001BC   018C               MOVW    R17:R16, R25:R24
   \   000001BE   ........           CALL    delay_ms
    513          		LCD_distring("D", 40, 120, 0);
   \   000001C2   E040               LDI     R20, 0
   \   000001C4   E738               LDI     R19, 120
   \   000001C6   E228               LDI     R18, 40
   \   000001C8   ....               LDI     R16, LOW((`?<Constant "0">` + 26))
   \   000001CA   ....               LDI     R17, HIGH((`?<Constant "0">` + 26))
   \   000001CC   C04F               RJMP    ??touch_key_blink_1
    514          		break;
    515          		
    516          	case 14:
    517          		LCD_distring("E", 10, 120, 1);
   \                     ??touch_key_blink_15:
   \   000001CE   E041               LDI     R20, 1
   \   000001D0   E738               LDI     R19, 120
   \   000001D2   E02A               LDI     R18, 10
   \   000001D4   ....               LDI     R16, LOW((`?<Constant "0">` + 28))
   \   000001D6   ....               LDI     R17, HIGH((`?<Constant "0">` + 28))
   \   000001D8   ........           CALL    LCD_distring
    518          		delay_ms(ms);
   \   000001DC   018C               MOVW    R17:R16, R25:R24
   \   000001DE   ........           CALL    delay_ms
    519          		LCD_distring("E", 10, 120, 0);
   \   000001E2   E040               LDI     R20, 0
   \   000001E4   E738               LDI     R19, 120
   \   000001E6   E02A               LDI     R18, 10
   \   000001E8   ....               LDI     R16, LOW((`?<Constant "0">` + 28))
   \   000001EA   ....               LDI     R17, HIGH((`?<Constant "0">` + 28))
   \   000001EC   C03F               RJMP    ??touch_key_blink_1
    520          		break;
    521          		
    522          	case 15:
    523          		LCD_distring("F", 30, 120, 1);
   \                     ??touch_key_blink_16:
   \   000001EE   E041               LDI     R20, 1
   \   000001F0   E738               LDI     R19, 120
   \   000001F2   E12E               LDI     R18, 30
   \   000001F4   ....               LDI     R16, LOW((`?<Constant "0">` + 30))
   \   000001F6   ....               LDI     R17, HIGH((`?<Constant "0">` + 30))
   \   000001F8   ........           CALL    LCD_distring
    524          		delay_ms(ms);
   \   000001FC   018C               MOVW    R17:R16, R25:R24
   \   000001FE   ........           CALL    delay_ms
    525          		LCD_distring("F", 30, 120, 0);
   \   00000202   E040               LDI     R20, 0
   \   00000204   E738               LDI     R19, 120
   \   00000206   E12E               LDI     R18, 30
   \   00000208   ....               LDI     R16, LOW((`?<Constant "0">` + 30))
   \   0000020A   ....               LDI     R17, HIGH((`?<Constant "0">` + 30))
   \   0000020C   C02F               RJMP    ??touch_key_blink_1
    526          		break;
    527          		
    528          	case 16:
    529          		LCD_distring("Confirm", 36, 140, 1);
   \                     ??touch_key_blink_17:
   \   0000020E   E041               LDI     R20, 1
   \   00000210   E83C               LDI     R19, 140
   \   00000212   E224               LDI     R18, 36
   \   00000214   ....               LDI     R16, LOW((`?<Constant "0">` + 32))
   \   00000216   ....               LDI     R17, HIGH((`?<Constant "0">` + 32))
   \   00000218   ........           CALL    LCD_distring
    530          		delay_ms(ms);
   \   0000021C   018C               MOVW    R17:R16, R25:R24
   \   0000021E   ........           CALL    delay_ms
    531          		LCD_distring("Confirm", 36, 140, 0);
   \   00000222   E040               LDI     R20, 0
   \   00000224   E83C               LDI     R19, 140
   \   00000226   E224               LDI     R18, 36
   \   00000228   ....               LDI     R16, LOW((`?<Constant "0">` + 32))
   \   0000022A   ....               LDI     R17, HIGH((`?<Constant "0">` + 32))
   \   0000022C   C01F               RJMP    ??touch_key_blink_1
    532          		break;
    533          		
    534          	case 17:
    535          		LCD_distring("Delete", 2, 140, 1);
   \                     ??touch_key_blink_18:
   \   0000022E   E041               LDI     R20, 1
   \   00000230   E83C               LDI     R19, 140
   \   00000232   E022               LDI     R18, 2
   \   00000234   ....               LDI     R16, LOW((`?<Constant "0">` + 40))
   \   00000236   ....               LDI     R17, HIGH((`?<Constant "0">` + 40))
   \   00000238   ........           CALL    LCD_distring
    536          		delay_ms(ms);
   \   0000023C   018C               MOVW    R17:R16, R25:R24
   \   0000023E   ........           CALL    delay_ms
    537          		LCD_distring("Delete", 2, 140, 0);
   \   00000242   E040               LDI     R20, 0
   \   00000244   E83C               LDI     R19, 140
   \   00000246   E022               LDI     R18, 2
   \   00000248   ....               LDI     R16, LOW((`?<Constant "0">` + 40))
   \   0000024A   ....               LDI     R17, HIGH((`?<Constant "0">` + 40))
   \   0000024C   C00F               RJMP    ??touch_key_blink_1
    538          		break;
    539          	//case 18:
    540          	//	LCD_distring("Retry", 18, 140, 1);
    541          	//	delay_ms(ms);
    542          	//	LCD_distring("Retry", 18, 140, 0);
    543          	//	break;
    544          	case 19:
    545          		LCD_distring("Next", 22, 140, 1);
   \                     ??touch_key_blink_19:
   \   0000024E   E041               LDI     R20, 1
   \   00000250   E83C               LDI     R19, 140
   \   00000252   E126               LDI     R18, 22
   \   00000254   ....               LDI     R16, LOW((`?<Constant "0">` + 47))
   \   00000256   ....               LDI     R17, HIGH((`?<Constant "0">` + 47))
   \   00000258   ........           CALL    LCD_distring
    546          		delay_ms(ms);
   \   0000025C   018C               MOVW    R17:R16, R25:R24
   \   0000025E   ........           CALL    delay_ms
    547          		LCD_distring("Next", 22, 140, 0);
   \   00000262   E040               LDI     R20, 0
   \   00000264   E83C               LDI     R19, 140
   \   00000266   E126               LDI     R18, 22
   \   00000268   ....               LDI     R16, LOW((`?<Constant "0">` + 47))
   \   0000026A   ....               LDI     R17, HIGH((`?<Constant "0">` + 47))
   \                     ??touch_key_blink_1:
   \   0000026C   ........           CALL    LCD_distring
    548          		break;	
    549          		
    550          	default:break;
    551          	}
    552          }
   \                     ??touch_key_blink_20:
   \   00000270   9189               LD      R24, Y+
   \   00000272   9199               LD      R25, Y+
   \   00000274   9508               RET
    553          

   \                                 In  segment CODE, align 2, keep-with-next
    554          void touch_key_blink_01(unsigned char index,unsigned int ms)
   \                     touch_key_blink_01:
    555          {
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C9               MOVW    R25:R24, R19:R18
    556          	switch(index)
   \   00000006   ....               LDI     R30, LOW(`?<Jumptable for touch_key_blink_01>_0`)
   \   00000008   ....               LDI     R31, (`?<Jumptable for touch_key_blink_01>_0`) >> 8
   \   0000000A   ........           JMP     ?CV_SWITCH_L06
    557          	{
    558          	case 0:
    559          		LCD_distring("0", 20, 120, 1);
   \                     ??touch_key_blink_01_0:
   \   0000000E   E041               LDI     R20, 1
   \   00000010   E738               LDI     R19, 120
   \   00000012   E124               LDI     R18, 20
   \   00000014   ....               LDI     R16, LOW(`?<Constant "0">`)
   \   00000016   ....               LDI     R17, (`?<Constant "0">`) >> 8
   \   00000018   ........           CALL    LCD_distring
    560          		delay_ms(ms);
   \   0000001C   018C               MOVW    R17:R16, R25:R24
   \   0000001E   ........           CALL    delay_ms
    561          		LCD_distring("0", 20, 120, 0);
   \   00000022   E040               LDI     R20, 0
   \   00000024   E738               LDI     R19, 120
   \   00000026   E124               LDI     R18, 20
   \   00000028   ....               LDI     R16, LOW(`?<Constant "0">`)
   \   0000002A   ....               LDI     R17, (`?<Constant "0">`) >> 8
   \   0000002C   C0BF               RJMP    ??touch_key_blink_01_1
    562          		break;
    563          		
    564          	case 1:
    565          		LCD_distring("1", 10, 48, 1);
   \                     ??touch_key_blink_01_2:
   \   0000002E   E041               LDI     R20, 1
   \   00000030   E330               LDI     R19, 48
   \   00000032   E02A               LDI     R18, 10
   \   00000034   ....               LDI     R16, LOW((`?<Constant "0">` + 2))
   \   00000036   ....               LDI     R17, HIGH((`?<Constant "0">` + 2))
   \   00000038   ........           CALL    LCD_distring
    566          		delay_ms(ms);
   \   0000003C   018C               MOVW    R17:R16, R25:R24
   \   0000003E   ........           CALL    delay_ms
    567          		LCD_distring("1", 10, 48, 0);
   \   00000042   E040               LDI     R20, 0
   \   00000044   E330               LDI     R19, 48
   \   00000046   E02A               LDI     R18, 10
   \   00000048   ....               LDI     R16, LOW((`?<Constant "0">` + 2))
   \   0000004A   ....               LDI     R17, HIGH((`?<Constant "0">` + 2))
   \   0000004C   C0AF               RJMP    ??touch_key_blink_01_1
    568          		break;
    569          		
    570          	case 2:
    571          		LCD_distring("2", 20, 48, 1);
   \                     ??touch_key_blink_01_3:
   \   0000004E   E041               LDI     R20, 1
   \   00000050   E330               LDI     R19, 48
   \   00000052   E124               LDI     R18, 20
   \   00000054   ....               LDI     R16, LOW((`?<Constant "0">` + 4))
   \   00000056   ....               LDI     R17, HIGH((`?<Constant "0">` + 4))
   \   00000058   ........           CALL    LCD_distring
    572          		delay_ms(ms);
   \   0000005C   018C               MOVW    R17:R16, R25:R24
   \   0000005E   ........           CALL    delay_ms
    573          		LCD_distring("2", 20, 48, 0);
   \   00000062   E040               LDI     R20, 0
   \   00000064   E330               LDI     R19, 48
   \   00000066   E124               LDI     R18, 20
   \   00000068   ....               LDI     R16, LOW((`?<Constant "0">` + 4))
   \   0000006A   ....               LDI     R17, HIGH((`?<Constant "0">` + 4))
   \   0000006C   C09F               RJMP    ??touch_key_blink_01_1
    574          		break;
    575          		
    576          	case 3:
    577          		LCD_distring("3", 30, 48, 1);
   \                     ??touch_key_blink_01_4:
   \   0000006E   E041               LDI     R20, 1
   \   00000070   E330               LDI     R19, 48
   \   00000072   E12E               LDI     R18, 30
   \   00000074   ....               LDI     R16, LOW((`?<Constant "0">` + 6))
   \   00000076   ....               LDI     R17, HIGH((`?<Constant "0">` + 6))
   \   00000078   ........           CALL    LCD_distring
    578          		delay_ms(ms);
   \   0000007C   018C               MOVW    R17:R16, R25:R24
   \   0000007E   ........           CALL    delay_ms
    579          		LCD_distring("3", 30, 48, 0);
   \   00000082   E040               LDI     R20, 0
   \   00000084   E330               LDI     R19, 48
   \   00000086   E12E               LDI     R18, 30
   \   00000088   ....               LDI     R16, LOW((`?<Constant "0">` + 6))
   \   0000008A   ....               LDI     R17, HIGH((`?<Constant "0">` + 6))
   \   0000008C   C08F               RJMP    ??touch_key_blink_01_1
    580          		break;
    581          		
    582          	case 4:
    583          		LCD_distring("4", 10, 72, 1);
   \                     ??touch_key_blink_01_5:
   \   0000008E   E041               LDI     R20, 1
   \   00000090   E438               LDI     R19, 72
   \   00000092   E02A               LDI     R18, 10
   \   00000094   ....               LDI     R16, LOW((`?<Constant "0">` + 8))
   \   00000096   ....               LDI     R17, HIGH((`?<Constant "0">` + 8))
   \   00000098   ........           CALL    LCD_distring
    584          		delay_ms(ms);
   \   0000009C   018C               MOVW    R17:R16, R25:R24
   \   0000009E   ........           CALL    delay_ms
    585          		LCD_distring("4", 10, 72, 0);
   \   000000A2   E040               LDI     R20, 0
   \   000000A4   E438               LDI     R19, 72
   \   000000A6   E02A               LDI     R18, 10
   \   000000A8   ....               LDI     R16, LOW((`?<Constant "0">` + 8))
   \   000000AA   ....               LDI     R17, HIGH((`?<Constant "0">` + 8))
   \   000000AC   C07F               RJMP    ??touch_key_blink_01_1
    586          		break;
    587          		
    588          	case 5:
    589          		LCD_distring("5", 20, 72, 1);
   \                     ??touch_key_blink_01_6:
   \   000000AE   E041               LDI     R20, 1
   \   000000B0   E438               LDI     R19, 72
   \   000000B2   E124               LDI     R18, 20
   \   000000B4   ....               LDI     R16, LOW((`?<Constant "0">` + 10))
   \   000000B6   ....               LDI     R17, HIGH((`?<Constant "0">` + 10))
   \   000000B8   ........           CALL    LCD_distring
    590          		delay_ms(ms);
   \   000000BC   018C               MOVW    R17:R16, R25:R24
   \   000000BE   ........           CALL    delay_ms
    591          		LCD_distring("5", 20, 72, 0);
   \   000000C2   E040               LDI     R20, 0
   \   000000C4   E438               LDI     R19, 72
   \   000000C6   E124               LDI     R18, 20
   \   000000C8   ....               LDI     R16, LOW((`?<Constant "0">` + 10))
   \   000000CA   ....               LDI     R17, HIGH((`?<Constant "0">` + 10))
   \   000000CC   C06F               RJMP    ??touch_key_blink_01_1
    592          		break;
    593          		
    594          	case 6:
    595          		LCD_distring("6", 30, 72, 1);
   \                     ??touch_key_blink_01_7:
   \   000000CE   E041               LDI     R20, 1
   \   000000D0   E438               LDI     R19, 72
   \   000000D2   E12E               LDI     R18, 30
   \   000000D4   ....               LDI     R16, LOW((`?<Constant "0">` + 12))
   \   000000D6   ....               LDI     R17, HIGH((`?<Constant "0">` + 12))
   \   000000D8   ........           CALL    LCD_distring
    596          		delay_ms(ms);
   \   000000DC   018C               MOVW    R17:R16, R25:R24
   \   000000DE   ........           CALL    delay_ms
    597          		LCD_distring("6", 30, 72, 0);
   \   000000E2   E040               LDI     R20, 0
   \   000000E4   E438               LDI     R19, 72
   \   000000E6   E12E               LDI     R18, 30
   \   000000E8   ....               LDI     R16, LOW((`?<Constant "0">` + 12))
   \   000000EA   ....               LDI     R17, HIGH((`?<Constant "0">` + 12))
   \   000000EC   C05F               RJMP    ??touch_key_blink_01_1
    598          		break;
    599          		
    600          	case 7:
    601          		LCD_distring("7", 10, 96, 1);
   \                     ??touch_key_blink_01_8:
   \   000000EE   E041               LDI     R20, 1
   \   000000F0   E630               LDI     R19, 96
   \   000000F2   E02A               LDI     R18, 10
   \   000000F4   ....               LDI     R16, LOW((`?<Constant "0">` + 14))
   \   000000F6   ....               LDI     R17, HIGH((`?<Constant "0">` + 14))
   \   000000F8   ........           CALL    LCD_distring
    602          		delay_ms(ms);
   \   000000FC   018C               MOVW    R17:R16, R25:R24
   \   000000FE   ........           CALL    delay_ms
    603          		LCD_distring("7", 10, 96, 0);
   \   00000102   E040               LDI     R20, 0
   \   00000104   E630               LDI     R19, 96
   \   00000106   E02A               LDI     R18, 10
   \   00000108   ....               LDI     R16, LOW((`?<Constant "0">` + 14))
   \   0000010A   ....               LDI     R17, HIGH((`?<Constant "0">` + 14))
   \   0000010C   C04F               RJMP    ??touch_key_blink_01_1
    604          		break;
    605          		
    606          	case 8:
    607          		LCD_distring("8", 20, 96, 1);
   \                     ??touch_key_blink_01_9:
   \   0000010E   E041               LDI     R20, 1
   \   00000110   E630               LDI     R19, 96
   \   00000112   E124               LDI     R18, 20
   \   00000114   ....               LDI     R16, LOW((`?<Constant "0">` + 16))
   \   00000116   ....               LDI     R17, HIGH((`?<Constant "0">` + 16))
   \   00000118   ........           CALL    LCD_distring
    608          		delay_ms(ms);
   \   0000011C   018C               MOVW    R17:R16, R25:R24
   \   0000011E   ........           CALL    delay_ms
    609          		LCD_distring("8", 20, 96, 0);
   \   00000122   E040               LDI     R20, 0
   \   00000124   E630               LDI     R19, 96
   \   00000126   E124               LDI     R18, 20
   \   00000128   ....               LDI     R16, LOW((`?<Constant "0">` + 16))
   \   0000012A   ....               LDI     R17, HIGH((`?<Constant "0">` + 16))
   \   0000012C   C03F               RJMP    ??touch_key_blink_01_1
    610          		break;
    611          		
    612          	case 9:
    613          		LCD_distring("9", 30, 96, 1);
   \                     ??touch_key_blink_01_10:
   \   0000012E   E041               LDI     R20, 1
   \   00000130   E630               LDI     R19, 96
   \   00000132   E12E               LDI     R18, 30
   \   00000134   ....               LDI     R16, LOW((`?<Constant "0">` + 18))
   \   00000136   ....               LDI     R17, HIGH((`?<Constant "0">` + 18))
   \   00000138   ........           CALL    LCD_distring
    614          		delay_ms(ms);
   \   0000013C   018C               MOVW    R17:R16, R25:R24
   \   0000013E   ........           CALL    delay_ms
    615          		LCD_distring("9", 30, 96, 0);
   \   00000142   E040               LDI     R20, 0
   \   00000144   E630               LDI     R19, 96
   \   00000146   E12E               LDI     R18, 30
   \   00000148   ....               LDI     R16, LOW((`?<Constant "0">` + 18))
   \   0000014A   ....               LDI     R17, HIGH((`?<Constant "0">` + 18))
   \   0000014C   C02F               RJMP    ??touch_key_blink_01_1
    616          		break;
    617          		
    618          	case 16:
    619          		LCD_distring("Confirm", 36, 140, 1);
   \                     ??touch_key_blink_01_11:
   \   0000014E   E041               LDI     R20, 1
   \   00000150   E83C               LDI     R19, 140
   \   00000152   E224               LDI     R18, 36
   \   00000154   ....               LDI     R16, LOW((`?<Constant "0">` + 32))
   \   00000156   ....               LDI     R17, HIGH((`?<Constant "0">` + 32))
   \   00000158   ........           CALL    LCD_distring
    620          		delay_ms(ms);
   \   0000015C   018C               MOVW    R17:R16, R25:R24
   \   0000015E   ........           CALL    delay_ms
    621          		LCD_distring("Confirm", 36, 140, 0);
   \   00000162   E040               LDI     R20, 0
   \   00000164   E83C               LDI     R19, 140
   \   00000166   E224               LDI     R18, 36
   \   00000168   ....               LDI     R16, LOW((`?<Constant "0">` + 32))
   \   0000016A   ....               LDI     R17, HIGH((`?<Constant "0">` + 32))
   \   0000016C   C01F               RJMP    ??touch_key_blink_01_1
    622          		break;
    623          		
    624          	case 17:
    625          		LCD_distring("Delete", 2, 140, 1);
   \                     ??touch_key_blink_01_12:
   \   0000016E   E041               LDI     R20, 1
   \   00000170   E83C               LDI     R19, 140
   \   00000172   E022               LDI     R18, 2
   \   00000174   ....               LDI     R16, LOW((`?<Constant "0">` + 40))
   \   00000176   ....               LDI     R17, HIGH((`?<Constant "0">` + 40))
   \   00000178   ........           CALL    LCD_distring
    626          		delay_ms(ms);
   \   0000017C   018C               MOVW    R17:R16, R25:R24
   \   0000017E   ........           CALL    delay_ms
    627          		LCD_distring("Delete", 2, 140, 0);
   \   00000182   E040               LDI     R20, 0
   \   00000184   E83C               LDI     R19, 140
   \   00000186   E022               LDI     R18, 2
   \   00000188   ....               LDI     R16, LOW((`?<Constant "0">` + 40))
   \   0000018A   ....               LDI     R17, HIGH((`?<Constant "0">` + 40))
   \   0000018C   C00F               RJMP    ??touch_key_blink_01_1
    628          		break;
    629          		
    630          	//case 18:
    631          	//	LCD_distring("Retry", 12, 140, 1);
    632          	//	delay_ms(ms);
    633          	//	LCD_distring("Retry", 12, 140, 0);
    634          	//	break;
    635          	case 19:
    636          		LCD_distring("Next", 22, 140, 1);
   \                     ??touch_key_blink_01_13:
   \   0000018E   E041               LDI     R20, 1
   \   00000190   E83C               LDI     R19, 140
   \   00000192   E126               LDI     R18, 22
   \   00000194   ....               LDI     R16, LOW((`?<Constant "0">` + 47))
   \   00000196   ....               LDI     R17, HIGH((`?<Constant "0">` + 47))
   \   00000198   ........           CALL    LCD_distring
    637          		delay_ms(ms);
   \   0000019C   018C               MOVW    R17:R16, R25:R24
   \   0000019E   ........           CALL    delay_ms
    638          		LCD_distring("Next", 22, 140, 0);
   \   000001A2   E040               LDI     R20, 0
   \   000001A4   E83C               LDI     R19, 140
   \   000001A6   E126               LDI     R18, 22
   \   000001A8   ....               LDI     R16, LOW((`?<Constant "0">` + 47))
   \   000001AA   ....               LDI     R17, HIGH((`?<Constant "0">` + 47))
   \                     ??touch_key_blink_01_1:
   \   000001AC   ........           CALL    LCD_distring
    639          		break;	
    640          		
    641          	default:break;
    642          	}
    643          }
   \                     ??touch_key_blink_01_14:
   \   000001B0   9189               LD      R24, Y+
   \   000001B2   9199               LD      R25, Y+
   \   000001B4   9508               RET
    644          

   \                                 In  segment CODE, align 2, keep-with-next
    645          void touch_key_blink_02(unsigned char index,unsigned int ms)
   \                     touch_key_blink_02:
    646          {
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C9               MOVW    R25:R24, R19:R18
    647          	switch(index)
   \   00000006   ....               LDI     R30, LOW(`?<Jumptable for touch_key_blink_02>_0`)
   \   00000008   ....               LDI     R31, (`?<Jumptable for touch_key_blink_02>_0`) >> 8
   \   0000000A   ........           JMP     ?CV_SWITCH_L06
    648          	{
    649          	case 0:
    650          		LCD_distring("0", 20, 120, 1);
   \                     ??touch_key_blink_02_0:
   \   0000000E   E041               LDI     R20, 1
   \   00000010   E738               LDI     R19, 120
   \   00000012   E124               LDI     R18, 20
   \   00000014   ....               LDI     R16, LOW(`?<Constant "0">`)
   \   00000016   ....               LDI     R17, (`?<Constant "0">`) >> 8
   \   00000018   ........           CALL    LCD_distring
    651          		delay_ms(ms);
   \   0000001C   018C               MOVW    R17:R16, R25:R24
   \   0000001E   ........           CALL    delay_ms
    652          		LCD_distring("0", 20, 120, 0);
   \   00000022   E040               LDI     R20, 0
   \   00000024   E738               LDI     R19, 120
   \   00000026   E124               LDI     R18, 20
   \   00000028   ....               LDI     R16, LOW(`?<Constant "0">`)
   \   0000002A   ....               LDI     R17, (`?<Constant "0">`) >> 8
   \   0000002C   C0BF               RJMP    ??touch_key_blink_02_1
    653          		break;
    654          		
    655          	case 1:
    656          		LCD_distring("1", 10, 48, 1);
   \                     ??touch_key_blink_02_2:
   \   0000002E   E041               LDI     R20, 1
   \   00000030   E330               LDI     R19, 48
   \   00000032   E02A               LDI     R18, 10
   \   00000034   ....               LDI     R16, LOW((`?<Constant "0">` + 2))
   \   00000036   ....               LDI     R17, HIGH((`?<Constant "0">` + 2))
   \   00000038   ........           CALL    LCD_distring
    657          		delay_ms(ms);
   \   0000003C   018C               MOVW    R17:R16, R25:R24
   \   0000003E   ........           CALL    delay_ms
    658          		LCD_distring("1", 10, 48, 0);
   \   00000042   E040               LDI     R20, 0
   \   00000044   E330               LDI     R19, 48
   \   00000046   E02A               LDI     R18, 10
   \   00000048   ....               LDI     R16, LOW((`?<Constant "0">` + 2))
   \   0000004A   ....               LDI     R17, HIGH((`?<Constant "0">` + 2))
   \   0000004C   C0AF               RJMP    ??touch_key_blink_02_1
    659          		break;
    660          		
    661          	case 2:
    662          		LCD_distring("2", 20, 48, 1);
   \                     ??touch_key_blink_02_3:
   \   0000004E   E041               LDI     R20, 1
   \   00000050   E330               LDI     R19, 48
   \   00000052   E124               LDI     R18, 20
   \   00000054   ....               LDI     R16, LOW((`?<Constant "0">` + 4))
   \   00000056   ....               LDI     R17, HIGH((`?<Constant "0">` + 4))
   \   00000058   ........           CALL    LCD_distring
    663          		delay_ms(ms);
   \   0000005C   018C               MOVW    R17:R16, R25:R24
   \   0000005E   ........           CALL    delay_ms
    664          		LCD_distring("2", 20, 48, 0);
   \   00000062   E040               LDI     R20, 0
   \   00000064   E330               LDI     R19, 48
   \   00000066   E124               LDI     R18, 20
   \   00000068   ....               LDI     R16, LOW((`?<Constant "0">` + 4))
   \   0000006A   ....               LDI     R17, HIGH((`?<Constant "0">` + 4))
   \   0000006C   C09F               RJMP    ??touch_key_blink_02_1
    665          		break;
    666          		
    667          	case 3:
    668          		LCD_distring("3", 30, 48, 1);
   \                     ??touch_key_blink_02_4:
   \   0000006E   E041               LDI     R20, 1
   \   00000070   E330               LDI     R19, 48
   \   00000072   E12E               LDI     R18, 30
   \   00000074   ....               LDI     R16, LOW((`?<Constant "0">` + 6))
   \   00000076   ....               LDI     R17, HIGH((`?<Constant "0">` + 6))
   \   00000078   ........           CALL    LCD_distring
    669          		delay_ms(ms);
   \   0000007C   018C               MOVW    R17:R16, R25:R24
   \   0000007E   ........           CALL    delay_ms
    670          		LCD_distring("3", 30, 48, 0);
   \   00000082   E040               LDI     R20, 0
   \   00000084   E330               LDI     R19, 48
   \   00000086   E12E               LDI     R18, 30
   \   00000088   ....               LDI     R16, LOW((`?<Constant "0">` + 6))
   \   0000008A   ....               LDI     R17, HIGH((`?<Constant "0">` + 6))
   \   0000008C   C08F               RJMP    ??touch_key_blink_02_1
    671          		break;
    672          		
    673          	case 4:
    674          		LCD_distring("4", 10, 72, 1);
   \                     ??touch_key_blink_02_5:
   \   0000008E   E041               LDI     R20, 1
   \   00000090   E438               LDI     R19, 72
   \   00000092   E02A               LDI     R18, 10
   \   00000094   ....               LDI     R16, LOW((`?<Constant "0">` + 8))
   \   00000096   ....               LDI     R17, HIGH((`?<Constant "0">` + 8))
   \   00000098   ........           CALL    LCD_distring
    675          		delay_ms(ms);
   \   0000009C   018C               MOVW    R17:R16, R25:R24
   \   0000009E   ........           CALL    delay_ms
    676          		LCD_distring("4", 10, 72, 0);
   \   000000A2   E040               LDI     R20, 0
   \   000000A4   E438               LDI     R19, 72
   \   000000A6   E02A               LDI     R18, 10
   \   000000A8   ....               LDI     R16, LOW((`?<Constant "0">` + 8))
   \   000000AA   ....               LDI     R17, HIGH((`?<Constant "0">` + 8))
   \   000000AC   C07F               RJMP    ??touch_key_blink_02_1
    677          		break;
    678          		
    679          	case 5:
    680          		LCD_distring("5", 20, 72, 1);
   \                     ??touch_key_blink_02_6:
   \   000000AE   E041               LDI     R20, 1
   \   000000B0   E438               LDI     R19, 72
   \   000000B2   E124               LDI     R18, 20
   \   000000B4   ....               LDI     R16, LOW((`?<Constant "0">` + 10))
   \   000000B6   ....               LDI     R17, HIGH((`?<Constant "0">` + 10))
   \   000000B8   ........           CALL    LCD_distring
    681          		delay_ms(ms);
   \   000000BC   018C               MOVW    R17:R16, R25:R24
   \   000000BE   ........           CALL    delay_ms
    682          		LCD_distring("5", 20, 72, 0);
   \   000000C2   E040               LDI     R20, 0
   \   000000C4   E438               LDI     R19, 72
   \   000000C6   E124               LDI     R18, 20
   \   000000C8   ....               LDI     R16, LOW((`?<Constant "0">` + 10))
   \   000000CA   ....               LDI     R17, HIGH((`?<Constant "0">` + 10))
   \   000000CC   C06F               RJMP    ??touch_key_blink_02_1
    683          		break;
    684          		
    685          	case 6:
    686          		LCD_distring("6", 30, 72, 1);
   \                     ??touch_key_blink_02_7:
   \   000000CE   E041               LDI     R20, 1
   \   000000D0   E438               LDI     R19, 72
   \   000000D2   E12E               LDI     R18, 30
   \   000000D4   ....               LDI     R16, LOW((`?<Constant "0">` + 12))
   \   000000D6   ....               LDI     R17, HIGH((`?<Constant "0">` + 12))
   \   000000D8   ........           CALL    LCD_distring
    687          		delay_ms(ms);
   \   000000DC   018C               MOVW    R17:R16, R25:R24
   \   000000DE   ........           CALL    delay_ms
    688          		LCD_distring("6", 30, 72, 0);
   \   000000E2   E040               LDI     R20, 0
   \   000000E4   E438               LDI     R19, 72
   \   000000E6   E12E               LDI     R18, 30
   \   000000E8   ....               LDI     R16, LOW((`?<Constant "0">` + 12))
   \   000000EA   ....               LDI     R17, HIGH((`?<Constant "0">` + 12))
   \   000000EC   C05F               RJMP    ??touch_key_blink_02_1
    689          		break;
    690          		
    691          	case 7:
    692          		LCD_distring("7", 10, 96, 1);
   \                     ??touch_key_blink_02_8:
   \   000000EE   E041               LDI     R20, 1
   \   000000F0   E630               LDI     R19, 96
   \   000000F2   E02A               LDI     R18, 10
   \   000000F4   ....               LDI     R16, LOW((`?<Constant "0">` + 14))
   \   000000F6   ....               LDI     R17, HIGH((`?<Constant "0">` + 14))
   \   000000F8   ........           CALL    LCD_distring
    693          		delay_ms(ms);
   \   000000FC   018C               MOVW    R17:R16, R25:R24
   \   000000FE   ........           CALL    delay_ms
    694          		LCD_distring("7", 10, 96, 0);
   \   00000102   E040               LDI     R20, 0
   \   00000104   E630               LDI     R19, 96
   \   00000106   E02A               LDI     R18, 10
   \   00000108   ....               LDI     R16, LOW((`?<Constant "0">` + 14))
   \   0000010A   ....               LDI     R17, HIGH((`?<Constant "0">` + 14))
   \   0000010C   C04F               RJMP    ??touch_key_blink_02_1
    695          		break;
    696          		
    697          	case 8:
    698          		LCD_distring("8", 20, 96, 1);
   \                     ??touch_key_blink_02_9:
   \   0000010E   E041               LDI     R20, 1
   \   00000110   E630               LDI     R19, 96
   \   00000112   E124               LDI     R18, 20
   \   00000114   ....               LDI     R16, LOW((`?<Constant "0">` + 16))
   \   00000116   ....               LDI     R17, HIGH((`?<Constant "0">` + 16))
   \   00000118   ........           CALL    LCD_distring
    699          		delay_ms(ms);
   \   0000011C   018C               MOVW    R17:R16, R25:R24
   \   0000011E   ........           CALL    delay_ms
    700          		LCD_distring("8", 20, 96, 0);
   \   00000122   E040               LDI     R20, 0
   \   00000124   E630               LDI     R19, 96
   \   00000126   E124               LDI     R18, 20
   \   00000128   ....               LDI     R16, LOW((`?<Constant "0">` + 16))
   \   0000012A   ....               LDI     R17, HIGH((`?<Constant "0">` + 16))
   \   0000012C   C03F               RJMP    ??touch_key_blink_02_1
    701          		break;
    702          		
    703          	case 9:
    704          		LCD_distring("9", 30, 96, 1);
   \                     ??touch_key_blink_02_10:
   \   0000012E   E041               LDI     R20, 1
   \   00000130   E630               LDI     R19, 96
   \   00000132   E12E               LDI     R18, 30
   \   00000134   ....               LDI     R16, LOW((`?<Constant "0">` + 18))
   \   00000136   ....               LDI     R17, HIGH((`?<Constant "0">` + 18))
   \   00000138   ........           CALL    LCD_distring
    705          		delay_ms(ms);
   \   0000013C   018C               MOVW    R17:R16, R25:R24
   \   0000013E   ........           CALL    delay_ms
    706          		LCD_distring("9", 30, 96, 0);
   \   00000142   E040               LDI     R20, 0
   \   00000144   E630               LDI     R19, 96
   \   00000146   E12E               LDI     R18, 30
   \   00000148   ....               LDI     R16, LOW((`?<Constant "0">` + 18))
   \   0000014A   ....               LDI     R17, HIGH((`?<Constant "0">` + 18))
   \   0000014C   C02F               RJMP    ??touch_key_blink_02_1
    707          		break;
    708          		
    709          	case 16:
    710          		LCD_distring("  PnG ", 36, 140, 1);
   \                     ??touch_key_blink_02_11:
   \   0000014E   E041               LDI     R20, 1
   \   00000150   E83C               LDI     R19, 140
   \   00000152   E224               LDI     R18, 36
   \   00000154   ....               LDI     R16, LOW((`?<Constant "0">` + 52))
   \   00000156   ....               LDI     R17, HIGH((`?<Constant "0">` + 52))
   \   00000158   ........           CALL    LCD_distring
    711          		delay_ms(ms);
   \   0000015C   018C               MOVW    R17:R16, R25:R24
   \   0000015E   ........           CALL    delay_ms
    712          		LCD_distring("  PnG ", 36, 140, 0);
   \   00000162   E040               LDI     R20, 0
   \   00000164   E83C               LDI     R19, 140
   \   00000166   E224               LDI     R18, 36
   \   00000168   ....               LDI     R16, LOW((`?<Constant "0">` + 52))
   \   0000016A   ....               LDI     R17, HIGH((`?<Constant "0">` + 52))
   \   0000016C   C01F               RJMP    ??touch_key_blink_02_1
    713          		break;
    714          		
    715          	case 17:
    716          		LCD_distring("Delete", 2, 140, 1);
   \                     ??touch_key_blink_02_12:
   \   0000016E   E041               LDI     R20, 1
   \   00000170   E83C               LDI     R19, 140
   \   00000172   E022               LDI     R18, 2
   \   00000174   ....               LDI     R16, LOW((`?<Constant "0">` + 40))
   \   00000176   ....               LDI     R17, HIGH((`?<Constant "0">` + 40))
   \   00000178   ........           CALL    LCD_distring
    717          		delay_ms(ms);
   \   0000017C   018C               MOVW    R17:R16, R25:R24
   \   0000017E   ........           CALL    delay_ms
    718          		LCD_distring("Delete", 2, 140, 0);
   \   00000182   E040               LDI     R20, 0
   \   00000184   E83C               LDI     R19, 140
   \   00000186   E022               LDI     R18, 2
   \   00000188   ....               LDI     R16, LOW((`?<Constant "0">` + 40))
   \   0000018A   ....               LDI     R17, HIGH((`?<Constant "0">` + 40))
   \   0000018C   C00F               RJMP    ??touch_key_blink_02_1
    719          		break;
    720          		
    721          	//case 18:
    722          	//	LCD_distring("Retry", 12, 140, 1);
    723          	//	delay_ms(ms);
    724          	//	LCD_distring("Retry", 12, 140, 0);
    725          	//	break;
    726          	case 19:
    727          		LCD_distring("Next", 22, 140, 1);
   \                     ??touch_key_blink_02_13:
   \   0000018E   E041               LDI     R20, 1
   \   00000190   E83C               LDI     R19, 140
   \   00000192   E126               LDI     R18, 22
   \   00000194   ....               LDI     R16, LOW((`?<Constant "0">` + 47))
   \   00000196   ....               LDI     R17, HIGH((`?<Constant "0">` + 47))
   \   00000198   ........           CALL    LCD_distring
    728          		delay_ms(ms);
   \   0000019C   018C               MOVW    R17:R16, R25:R24
   \   0000019E   ........           CALL    delay_ms
    729          		LCD_distring("Next", 22, 140, 0);
   \   000001A2   E040               LDI     R20, 0
   \   000001A4   E83C               LDI     R19, 140
   \   000001A6   E126               LDI     R18, 22
   \   000001A8   ....               LDI     R16, LOW((`?<Constant "0">` + 47))
   \   000001AA   ....               LDI     R17, HIGH((`?<Constant "0">` + 47))
   \                     ??touch_key_blink_02_1:
   \   000001AC   ........           CALL    LCD_distring
    730          		break;	
    731          		
    732          	default:break;
    733          	}
    734          }
   \                     ??touch_key_blink_02_14:
   \   000001B0   9189               LD      R24, Y+
   \   000001B2   9199               LD      R25, Y+
   \   000001B4   9508               RET
    735          

   \                                 In  segment NEAR_F, align 1, keep-with-next
   \                     `?<Constant "D200014210000000">_1`:
   \   00000000   324430303130       DC8 "D200014210000000"
   \              323430313030
   \              3030303000  
    736          __flash const unsigned char calibration[] = "Calibration Station";
   \                     calibration:
   \   00000011   6143696C7262       DC8 "Calibration Station"
   \              74616F69206E
   \              745374616F69
   \              006E        
    737          __flash const unsigned char Delivery[] = "Delivery Station";
   \                     Delivery:
   \   00000025   6544696C6576       DC8 "Delivery Station"
   \              797253206174
   \              69746E6F00  
    738          __flash const unsigned char Test[] = "Test Functionality";
   \                     Test:
   \   00000036   655474734620       DC8 "Test Functionality"
   \              6E7574636F69
   \              616E696C7974
   \              00          

   \                                 In  segment CODE, align 2, keep-with-next
    739          void menu_00(void)
   \                     menu_00:
    740          {
    741          	LCD_distring(__DATE__, 28, 0, 0);
   \   00000000   E040               LDI     R20, 0
   \   00000002   E030               LDI     R19, 0
   \   00000004   E12C               LDI     R18, 28
   \   00000006   ....               LDI     R16, LOW(`?<Constant "Dec 11 2009">`)
   \   00000008   ....               LDI     R17, (`?<Constant "Dec 11 2009">`) >> 8
   \   0000000A   ........           CALL    LCD_distring
    742          	LCD_distring(__TIME__, 28,12, 0);
   \   0000000E   E040               LDI     R20, 0
   \   00000010   E03C               LDI     R19, 12
   \   00000012   E12C               LDI     R18, 28
   \   00000014   ....               LDI     R16, LOW((`?<Constant "Dec 11 2009">` + 12))
   \   00000016   ....               LDI     R17, HIGH((`?<Constant "Dec 11 2009">` + 12))
   \   00000018   ........           CALL    LCD_distring
    743          	LCD_distring_V2(calibration, 8, 50, 0);
   \   0000001C   E040               LDI     R20, 0
   \   0000001E   E332               LDI     R19, 50
   \   00000020   E028               LDI     R18, 8
   \   00000022   ....               LDI     R16, LOW((`?<Constant "D200014210000000">_1` + 17))
   \   00000024   ....               LDI     R17, HIGH((`?<Constant "D200014210000000">_1` + 17))
   \   00000026   ........           CALL    LCD_distring_V2
    744          	LCD_distring_V2(Delivery, 10, 80, 0);
   \   0000002A   E040               LDI     R20, 0
   \   0000002C   E530               LDI     R19, 80
   \   0000002E   E02A               LDI     R18, 10
   \   00000030   ....               LDI     R16, LOW((`?<Constant "D200014210000000">_1` + 37))
   \   00000032   ....               LDI     R17, HIGH((`?<Constant "D200014210000000">_1` + 37))
   \   00000034   ........           CALL    LCD_distring_V2
    745          	LCD_distring_V2(Test, 8, 110, 0);
   \   00000038   E040               LDI     R20, 0
   \   0000003A   E63E               LDI     R19, 110
   \   0000003C   E028               LDI     R18, 8
   \   0000003E   ....               LDI     R16, LOW((`?<Constant "D200014210000000">_1` + 54))
   \   00000040   ....               LDI     R17, HIGH((`?<Constant "D200014210000000">_1` + 54))
   \   00000042   ........           CALL    LCD_distring_V2
    746          }
   \   00000046   9508               RET
    747          

   \                                 In  segment CODE, align 2, keep-with-next
    748          void menu_01(void)
   \                     menu_01:
    749          {
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   9764               SBIW    R29:R28, 20
    750          	unsigned char temp = 0;
   \   00000006   E090               LDI     R25, 0
    751          	unsigned char col = 24;
   \   00000008   E188               LDI     R24, 24
    752          	unsigned char buffer[3];
    753          	static unsigned int ui_lux;
    754          	static unsigned char lux_high;
    755          	static unsigned char lux_low;
    756          	unsigned char buffer_tx[17] = "D200014210000000";
   \   0000000A   019E               MOVW    R19:R18, R29:R28
   \   0000000C   5F2D               SUBI    R18, 253
   \   0000000E   4F3F               SBCI    R19, 255
   \   00000010   0189               MOVW    R17:R16, R19:R18
   \   00000012   ....               LDI     R30, LOW(`?<Constant "D200014210000000">_1`)
   \   00000014   ....               LDI     R31, (`?<Constant "D200014210000000">_1`) >> 8
   \   00000016   E141               LDI     R20, 17
   \   00000018   E050               LDI     R21, 0
   \   0000001A   ........           CALL    ?ML_FLASH_SRAM_16EC_16_L07
    757          	unsigned int temp_int;
    758          	
    759          	LCD_distring_V2(calibration, 8, 4, 0);
   \   0000001E   E034               LDI     R19, 4
   \   00000020   E028               LDI     R18, 8
   \   00000022   ....               LDI     R16, LOW((`?<Constant "D200014210000000">_1` + 17))
   \   00000024   ....               LDI     R17, HIGH((`?<Constant "D200014210000000">_1` + 17))
   \   00000026   ........           CALL    LCD_distring_V2
    760          	LCD_distring("     Lux:", 0, 24, 0);
   \   0000002A   E040               LDI     R20, 0
   \   0000002C   E138               LDI     R19, 24
   \   0000002E   E020               LDI     R18, 0
   \   00000030   ....               LDI     R16, LOW((`?<Constant "0">` + 59))
   \   00000032   ....               LDI     R17, HIGH((`?<Constant "0">` + 59))
   \   00000034   ........           CALL    LCD_distring
    761          	//LCD_distring("123456789012345678901234567", 0, 38, 0);
    762          	LCD_distring("1    2    3     ", 10, 48, 0);
   \   00000038   E040               LDI     R20, 0
   \   0000003A   E330               LDI     R19, 48
   \   0000003C   E02A               LDI     R18, 10
   \   0000003E   ....               LDI     R16, LOW((`?<Constant "0">` + 69))
   \   00000040   ....               LDI     R17, HIGH((`?<Constant "0">` + 69))
   \   00000042   ........           CALL    LCD_distring
    763          	LCD_distring("4    5    6     ", 10, 72, 0);
   \   00000046   E040               LDI     R20, 0
   \   00000048   E438               LDI     R19, 72
   \   0000004A   E02A               LDI     R18, 10
   \   0000004C   ....               LDI     R16, LOW((`?<Constant "0">` + 86))
   \   0000004E   ....               LDI     R17, HIGH((`?<Constant "0">` + 86))
   \   00000050   ........           CALL    LCD_distring
    764          	LCD_distring("7    8    9     ", 10, 96, 0);
   \   00000054   E040               LDI     R20, 0
   \   00000056   E630               LDI     R19, 96
   \   00000058   E02A               LDI     R18, 10
   \   0000005A   ....               LDI     R16, LOW((`?<Constant "0">` + 103))
   \   0000005C   ....               LDI     R17, HIGH((`?<Constant "0">` + 103))
   \   0000005E   ........           CALL    LCD_distring
    765          	LCD_distring("     0          ", 10, 120, 0);
   \   00000062   E040               LDI     R20, 0
   \   00000064   E738               LDI     R19, 120
   \   00000066   E02A               LDI     R18, 10
   \   00000068   ....               LDI     R16, LOW((`?<Constant "0">` + 120))
   \   0000006A   ....               LDI     R17, HIGH((`?<Constant "0">` + 120))
   \   0000006C   ........           CALL    LCD_distring
    766          	LCD_distring("Delete", 2, 140, 0);
   \   00000070   E040               LDI     R20, 0
   \   00000072   E83C               LDI     R19, 140
   \   00000074   E022               LDI     R18, 2
   \   00000076   ....               LDI     R16, LOW((`?<Constant "0">` + 40))
   \   00000078   ....               LDI     R17, HIGH((`?<Constant "0">` + 40))
   \   0000007A   ........           CALL    LCD_distring
    767          	LCD_distring("Confirm", 36, 140, 0);
   \   0000007E   E040               LDI     R20, 0
   \   00000080   E83C               LDI     R19, 140
   \   00000082   E224               LDI     R18, 36
   \   00000084   ....               LDI     R16, LOW((`?<Constant "0">` + 32))
   \   00000086   ....               LDI     R17, HIGH((`?<Constant "0">` + 32))
   \   00000088   ........           CALL    LCD_distring
    768          	
    769          	timer_flex2_initial(500);
   \   0000008C   EF04               LDI     R16, 244
   \   0000008E   E011               LDI     R17, 1
   \   00000090   E020               LDI     R18, 0
   \   00000092   E030               LDI     R19, 0
   \   00000094   ........           CALL    timer_flex2_initial
   \   00000098   E300               LDI     R16, 48
   \   0000009A   9300....           STS     g_lux, R16
    770          	g_lux[0] = '0';
    771          	g_lux[1] = '0';
   \   0000009E   9300....           STS     (g_lux + 1), R16
    772          	g_lux[2] = '0';
   \   000000A2   9300....           STS     (g_lux + 2), R16
    773          	g_lux[3] = '0';
   \   000000A6   9300....           STS     (g_lux + 3), R16
    774          	g_lux[4] = 0;
   \   000000AA   9390....           STS     (g_lux + 4), R25
   \   000000AE   C006               RJMP    ??menu_01_0
    775          	
    776          	while(1)
    777          	{
    778          		if(IS_PEN == 0)
    779          		{
    780          			TOUCH_getdata();
    781          			temp_int = get_touch_key();
    782          			touch_key_blink_01(temp_int,100);
    783          			
    784          			if(temp_int <= 9 || temp_int == 16 || temp_int == 17)
    785          			{
    786          				if(temp_int <= 9)
    787          				{
    788          					if(col >= 24 & col< 24 + 8)
    789          					{
    790          						buffer[0] = 48 + temp_int;
    791          						buffer[1] = 0;
    792          						LCD_distring(buffer,col,24,0);
    793          						switch(col)
    794          						{
    795          							case 24:
    796          								g_lux[0] = temp_int;
    797          							break;
    798          							
    799          							case 26:
    800          								g_lux[1] = temp_int;
    801          							break;
    802          							
    803          							case 28:
    804          								g_lux[2] = temp_int;
    805          							break;
    806          							
    807          							case 30:
    808          								g_lux[3] = temp_int;
    809          							break;
    810          							
    811          							default:break;
    812          						}
    813          						
    814          						col += 2;
    815          					}
    816          				}
    817          				else if(temp_int == 16)		// "Confirm"
    818          				{
    819          					if(col == 32)
    820          					{
    821          						
    822          						ui_lux = 1000 * (unsigned int)g_lux[0] + 100 * (unsigned int)g_lux[1] + 10 * (unsigned int)g_lux[2] + g_lux[3];
    823          						lux_high = ui_lux >> 8;
    824          						lux_low = ui_lux;
    825          						
    826          						send_frame_pp_ext_broad("D200014214000001",2000);
    827          						strncpy(buffer_tx,"D200014210000000",17);
    828          						CharToStr(lux_high,buffer);
    829          						buffer_tx[12] = buffer[0];
    830          						buffer_tx[13] = buffer[1];
    831          						CharToStr(lux_low,buffer);
    832          						buffer_tx[14] = buffer[0];
    833          						buffer_tx[15] = buffer[1];
    834          						send_frame_pp_ext_broad(buffer_tx,200);
    835          						send_frame_pp_ext_broad("D2000142140000FF",200);
    836          						
    837          						col = 24;
    838          						g_lux[0] = 0;
    839          						g_lux[1] = 0;
    840          						g_lux[2] = 0;
    841          						g_lux[3] = 0;
    842          						LCD_distring("     ",col,24,0);
    843          						asm("nop");
    844          					}
    845          				}
    846          				else if(temp_int == 17)		// "Delete"
    847          				{
    848          					if(col >24)
    849          					{
    850          						LCD_distring(" ",col,24,0);
    851          						col -= 2;
    852          					}
    853          				}
    854          			}
    855          		}
    856          		
    857          		if(Time_delay.timer_flex2.time_out == 1)
    858          		{
    859          			temp = ~temp;
    860          			timer_flex2_initial(500);
    861          			if(temp)
    862          				LCD_distring("_",col,24,0);
    863          			else
    864          				LCD_distring(" ",col,24,0);
   \                     ??menu_01_1:
   \   000000B0   ....               LDI     R16, LOW((`?<Constant "0">` + 194))
   \   000000B2   ....               LDI     R17, HIGH((`?<Constant "0">` + 194))
   \                     ??menu_01_2:
   \   000000B4   ........           CALL    LCD_distring
    865          		}
    866          		
    867          		light_adj();
   \                     ??menu_01_3:
   \   000000B8   ........           CALL    light_adj
   \                     ??menu_01_0:
   \   000000BC   994D               SBIC    0x09, 0x05
   \   000000BE   C0B6               RJMP    ??menu_01_4
   \   000000C0   ........           CALL    TOUCH_getdata
   \   000000C4   ....               RCALL   get_touch_key
   \   000000C6   2FA0               MOV     R26, R16
   \   000000C8   E0B0               LDI     R27, 0
   \   000000CA   E624               LDI     R18, 100
   \   000000CC   E030               LDI     R19, 0
   \   000000CE   ....               RCALL   touch_key_blink_01
   \   000000D0   30AA               CPI     R26, 10
   \   000000D2   07BB               CPC     R27, R27
   \   000000D4   F038               BRCS    ??menu_01_5
   \   000000D6   31A0               CPI     R26, 16
   \   000000D8   07BB               CPC     R27, R27
   \   000000DA   F021               BREQ    ??menu_01_5
   \   000000DC   31A1               CPI     R26, 17
   \   000000DE   07BB               CPC     R27, R27
   \   000000E0   F009               BREQ    $+2+2
   \   000000E2   C0A4               RJMP    ??menu_01_4
   \                     ??menu_01_5:
   \   000000E4   30AA               CPI     R26, 10
   \   000000E6   07BB               CPC     R27, R27
   \   000000E8   F538               BRCC    ??menu_01_6
   \   000000EA   3188               CPI     R24, 24
   \   000000EC   F408               BRCC    $+2+2
   \   000000EE   C09E               RJMP    ??menu_01_4
   \   000000F0   3280               CPI     R24, 32
   \   000000F2   F008               BRCS    $+2+2
   \   000000F4   C09B               RJMP    ??menu_01_4
   \   000000F6   2F0A               MOV     R16, R26
   \   000000F8   5D00               SUBI    R16, 208
   \   000000FA   8308               ST      Y, R16
   \   000000FC   83B9               STD     Y+1, R27
   \   000000FE   E040               LDI     R20, 0
   \   00000100   E138               LDI     R19, 24
   \   00000102   2F28               MOV     R18, R24
   \   00000104   018E               MOVW    R17:R16, R29:R28
   \   00000106   ........           CALL    LCD_distring
   \   0000010A   2F08               MOV     R16, R24
   \   0000010C   5108               SUBI    R16, 24
   \   0000010E   F039               BREQ    ??menu_01_7
   \   00000110   5002               SUBI    R16, 2
   \   00000112   F041               BREQ    ??menu_01_8
   \   00000114   5002               SUBI    R16, 2
   \   00000116   F049               BREQ    ??menu_01_9
   \   00000118   5002               SUBI    R16, 2
   \   0000011A   F051               BREQ    ??menu_01_10
   \   0000011C   C00B               RJMP    ??menu_01_11
   \                     ??menu_01_7:
   \   0000011E   93A0....           STS     g_lux, R26
   \   00000122   C008               RJMP    ??menu_01_11
   \                     ??menu_01_8:
   \   00000124   93A0....           STS     (g_lux + 1), R26
   \   00000128   C005               RJMP    ??menu_01_11
   \                     ??menu_01_9:
   \   0000012A   93A0....           STS     (g_lux + 2), R26
   \   0000012E   C002               RJMP    ??menu_01_11
   \                     ??menu_01_10:
   \   00000130   93A0....           STS     (g_lux + 3), R26
   \                     ??menu_01_11:
   \   00000134   5F8E               SUBI    R24, 254
   \   00000136   C07A               RJMP    ??menu_01_4
   \                     ??menu_01_6:
   \   00000138   31A0               CPI     R26, 16
   \   0000013A   07BB               CPC     R27, R27
   \   0000013C   F009               BREQ    $+2+2
   \   0000013E   C069               RJMP    ??menu_01_12
   \   00000140   3280               CPI     R24, 32
   \   00000142   F009               BREQ    $+2+2
   \   00000144   C073               RJMP    ??menu_01_4
   \   00000146   ....               LDI     R30, LOW(??ui_lux)
   \   00000148   ....               LDI     R31, (??ui_lux) >> 8
   \   0000014A   9140....           LDS     R20, g_lux
   \   0000014E   E050               LDI     R21, 0
   \   00000150   EE08               LDI     R16, 232
   \   00000152   E013               LDI     R17, 3
   \   00000154   ........           CALL    ?S_EC_MUL_L02
   \   00000158   0198               MOVW    R19:R18, R17:R16
   \   0000015A   9140....           LDS     R20, (g_lux + 1)
   \   0000015E   E604               LDI     R16, 100
   \   00000160   E010               LDI     R17, 0
   \   00000162   ........           CALL    ?S_EC_MUL_L02
   \   00000166   0F20               ADD     R18, R16
   \   00000168   1F31               ADC     R19, R17
   \   0000016A   9140....           LDS     R20, (g_lux + 2)
   \   0000016E   E00A               LDI     R16, 10
   \   00000170   E010               LDI     R17, 0
   \   00000172   ........           CALL    ?S_EC_MUL_L02
   \   00000176   0F20               ADD     R18, R16
   \   00000178   1F31               ADC     R19, R17
   \   0000017A   9100....           LDS     R16, (g_lux + 3)
   \   0000017E   0F20               ADD     R18, R16
   \   00000180   1F3B               ADC     R19, R27
   \   00000182   8320               ST      Z, R18
   \   00000184   8331               STD     Z+1, R19
   \   00000186   8111               LDD     R17, Z+1
   \   00000188   9310....           STS     (??ui_lux + 2), R17
   \   0000018C   8100               LD      R16, Z
   \   0000018E   9300....           STS     (??ui_lux + 3), R16
   \   00000192   ED20               LDI     R18, 208
   \   00000194   E037               LDI     R19, 7
   \   00000196   ....               LDI     R16, LOW((`?<Constant "0">` + 137))
   \   00000198   ....               LDI     R17, HIGH((`?<Constant "0">` + 137))
   \   0000019A   ........           CALL    send_frame_pp_ext_broad
   \   0000019E   E141               LDI     R20, 17
   \   000001A0   E050               LDI     R21, 0
   \   000001A2   ....               LDI     R18, LOW((`?<Constant "0">` + 154))
   \   000001A4   ....               LDI     R19, HIGH((`?<Constant "0">` + 154))
   \   000001A6   018E               MOVW    R17:R16, R29:R28
   \   000001A8   5F0D               SUBI    R16, 253
   \   000001AA   4F1F               SBCI    R17, 255
   \   000001AC   ........           CALL    strncpy
   \   000001B0   019E               MOVW    R19:R18, R29:R28
   \   000001B2   9100....           LDS     R16, (??ui_lux + 2)
   \   000001B6   ........           CALL    CharToStr
   \   000001BA   8108               LD      R16, Y
   \   000001BC   870F               STD     Y+15, R16
   \   000001BE   8109               LDD     R16, Y+1
   \   000001C0   8B08               STD     Y+16, R16
   \   000001C2   019E               MOVW    R19:R18, R29:R28
   \   000001C4   9100....           LDS     R16, (??ui_lux + 3)
   \   000001C8   ........           CALL    CharToStr
   \   000001CC   8108               LD      R16, Y
   \   000001CE   8B09               STD     Y+17, R16
   \   000001D0   8109               LDD     R16, Y+1
   \   000001D2   8B0A               STD     Y+18, R16
   \   000001D4   EC28               LDI     R18, 200
   \   000001D6   E030               LDI     R19, 0
   \   000001D8   018E               MOVW    R17:R16, R29:R28
   \   000001DA   5F0D               SUBI    R16, 253
   \   000001DC   4F1F               SBCI    R17, 255
   \   000001DE   ........           CALL    send_frame_pp_ext_broad
   \   000001E2   EC28               LDI     R18, 200
   \   000001E4   E030               LDI     R19, 0
   \   000001E6   ....               LDI     R16, LOW((`?<Constant "0">` + 171))
   \   000001E8   ....               LDI     R17, HIGH((`?<Constant "0">` + 171))
   \   000001EA   ........           CALL    send_frame_pp_ext_broad
   \   000001EE   E188               LDI     R24, 24
   \   000001F0   93B0....           STS     g_lux, R27
   \   000001F4   93B0....           STS     (g_lux + 1), R27
   \   000001F8   93B0....           STS     (g_lux + 2), R27
   \   000001FC   93B0....           STS     (g_lux + 3), R27
   \   00000200   E040               LDI     R20, 0
   \   00000202   E138               LDI     R19, 24
   \   00000204   E128               LDI     R18, 24
   \   00000206   ....               LDI     R16, LOW((`?<Constant "0">` + 188))
   \   00000208   ....               LDI     R17, HIGH((`?<Constant "0">` + 188))
   \   0000020A   ........           CALL    LCD_distring
   \   0000020E   0000               nop
   \   00000210   C00D               RJMP    ??menu_01_4
   \                     ??menu_01_12:
   \   00000212   31A1               CPI     R26, 17
   \   00000214   07BB               CPC     R27, R27
   \   00000216   F451               BRNE    ??menu_01_4
   \   00000218   3189               CPI     R24, 25
   \   0000021A   F040               BRCS    ??menu_01_4
   \   0000021C   E040               LDI     R20, 0
   \   0000021E   E138               LDI     R19, 24
   \   00000220   2F28               MOV     R18, R24
   \   00000222   ....               LDI     R16, LOW((`?<Constant "0">` + 194))
   \   00000224   ....               LDI     R17, HIGH((`?<Constant "0">` + 194))
   \   00000226   ........           CALL    LCD_distring
   \   0000022A   5082               SUBI    R24, 2
   \                     ??menu_01_4:
   \   0000022C   9100....           LDS     R16, (Time_delay + 212)
   \   00000230   3001               CPI     R16, 1
   \   00000232   F009               BREQ    $+2+2
   \   00000234   CF41               RJMP    ??menu_01_3
   \   00000236   9590               COM     R25
   \   00000238   EF04               LDI     R16, 244
   \   0000023A   E011               LDI     R17, 1
   \   0000023C   E020               LDI     R18, 0
   \   0000023E   E030               LDI     R19, 0
   \   00000240   ........           CALL    timer_flex2_initial
   \   00000244   2399               TST     R25
   \   00000246   E040               LDI     R20, 0
   \   00000248   E138               LDI     R19, 24
   \   0000024A   2F28               MOV     R18, R24
   \   0000024C   F409               BRNE    $+2+2
   \   0000024E   CF30               RJMP    ??menu_01_1
   \   00000250   ....               LDI     R16, LOW((`?<Constant "0">` + 196))
   \   00000252   ....               LDI     R17, HIGH((`?<Constant "0">` + 196))
   \   00000254   CF2F               RJMP    ??menu_01_2
   \   00000256                      REQUIRE _A_PIND
    868          	}
    869          }

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     ??ui_lux:
   \   00000000                      DS8 2
   \   00000002                      DS8 1
   \   00000003                      DS8 1
    870          
    871          //extern char	  Menu_status;	//alan

   \                                 In  segment CODE, align 2, keep-with-next
    872          void menu_02(void)
   \                     menu_02:
    873          {
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   97AB               SBIW    R29:R28, 43
    874          	unsigned char i;
    875          	unsigned char temp = 0;
   \   00000006   2455               CLR     R5
    876          	unsigned char col = 24;
    877          	unsigned char buffer[2];
    878          	unsigned int temp_int;
    879          	unsigned char g_id[9];
    880          	unsigned char year_week[6] = "00W00";
   \   00000008   019E               MOVW    R19:R18, R29:R28
   \   0000000A   5F25               SUBI    R18, 245
   \   0000000C   4F3F               SBCI    R19, 255
   \   0000000E   0189               MOVW    R17:R16, R19:R18
   \   00000010   ....               LDI     R30, LOW(`?<Constant "00W00">`)
   \   00000012   ....               LDI     R31, (`?<Constant "00W00">`) >> 8
   \   00000014   E046               LDI     R20, 6
   \   00000016   E050               LDI     R21, 0
   \   00000018   ........           CALL    ?ML_FLASH_SRAM_16EC_16_L07
    881          	unsigned char buffer_tx[17];
    882          	unsigned char buffer_received[9];
    883          	unsigned long int id_long;
    884          	
    885          	buffer_received[8] = 0;
   \   0000001C   A74A               STD     Y+42, R20
    886          	
    887          	
    888          	Menu_status = 0x02;		//alan
   \   0000001E   E002               LDI     R16, 2
   \   00000020   9300....           STS     Menu_status, R16
   \   00000024   9100....           LDS     R16, g_year
   \   00000028   870B               STD     Y+11, R16
    889          	
    890          	year_week[0] = g_year[0];
    891          	year_week[1] = g_year[1];
   \   0000002A   9100....           LDS     R16, (g_year + 1)
   \   0000002E   870C               STD     Y+12, R16
   \   00000030   9100....           LDS     R16, g_week
   \   00000034   870E               STD     Y+14, R16
    892          	
    893          	year_week[3] = g_week[0];
    894          	year_week[4] = g_week[1];
   \   00000036   9100....           LDS     R16, (g_week + 1)
   \   0000003A   870F               STD     Y+15, R16
    895          	
    896          	LCD_distring("Delivery Station", 12, 4, 0);
   \   0000003C   E034               LDI     R19, 4
   \   0000003E   E02C               LDI     R18, 12
   \   00000040   ....               LDI     R16, LOW((`?<Constant "0">` + 198))
   \   00000042   ....               LDI     R17, HIGH((`?<Constant "0">` + 198))
   \   00000044   ........           CALL    LCD_distring
    897          	LCD_distring("Input ID:", 0, 24, 0);
   \   00000048   E040               LDI     R20, 0
   \   0000004A   E138               LDI     R19, 24
   \   0000004C   E020               LDI     R18, 0
   \   0000004E   ....               LDI     R16, LOW((`?<Constant "0">` + 215))
   \   00000050   ....               LDI     R17, HIGH((`?<Constant "0">` + 215))
   \   00000052   ........           CALL    LCD_distring
    898          	LCD_distring("   Infor:", 0, 36, 0);
   \   00000056   E040               LDI     R20, 0
   \   00000058   E234               LDI     R19, 36
   \   0000005A   E020               LDI     R18, 0
   \   0000005C   ....               LDI     R16, LOW((`?<Constant "0">` + 225))
   \   0000005E   ....               LDI     R17, HIGH((`?<Constant "0">` + 225))
   \   00000060   ........           CALL    LCD_distring
    899          	//LCD_distring("123456789012345678901234567", 0, 38, 0);
    900          	LCD_distring("1    2    3    A", 10, 48, 0);
   \   00000064   E040               LDI     R20, 0
   \   00000066   E330               LDI     R19, 48
   \   00000068   E02A               LDI     R18, 10
   \   0000006A   ....               LDI     R16, LOW((`?<Constant "0">` + 235))
   \   0000006C   ....               LDI     R17, HIGH((`?<Constant "0">` + 235))
   \   0000006E   ........           CALL    LCD_distring
    901          	LCD_distring("4    5    6    B", 10, 72, 0);
   \   00000072   E040               LDI     R20, 0
   \   00000074   E438               LDI     R19, 72
   \   00000076   E02A               LDI     R18, 10
   \   00000078   ....               LDI     R16, LOW((`?<Constant "0">` + 252))
   \   0000007A   ....               LDI     R17, HIGH((`?<Constant "0">` + 252))
   \   0000007C   ........           CALL    LCD_distring
    902          	LCD_distring("7    8    9    C", 10, 96, 0);
   \   00000080   E040               LDI     R20, 0
   \   00000082   E630               LDI     R19, 96
   \   00000084   E02A               LDI     R18, 10
   \   00000086   ....               LDI     R16, LOW((`?<Constant "0">` + 269))
   \   00000088   ....               LDI     R17, HIGH((`?<Constant "0">` + 269))
   \   0000008A   ........           CALL    LCD_distring
    903          	LCD_distring("E    0    F    D", 10, 120, 0);
   \   0000008E   E040               LDI     R20, 0
   \   00000090   E738               LDI     R19, 120
   \   00000092   E02A               LDI     R18, 10
   \   00000094   ....               LDI     R16, LOW((`?<Constant "0">` + 286))
   \   00000096   ....               LDI     R17, HIGH((`?<Constant "0">` + 286))
   \   00000098   ........           CALL    LCD_distring
    904          	LCD_distring("Delete", 2, 140, 0);
   \   0000009C   E040               LDI     R20, 0
   \   0000009E   E83C               LDI     R19, 140
   \   000000A0   E022               LDI     R18, 2
   \   000000A2   ....               LDI     R16, LOW((`?<Constant "0">` + 40))
   \   000000A4   ....               LDI     R17, HIGH((`?<Constant "0">` + 40))
   \   000000A6   ........           CALL    LCD_distring
    905          	//LCD_distring("Retry", 12, 140, 0);		//alan		18
    906          	LCD_distring("Next", 22, 140, 0);			//alan		19
   \   000000AA   E040               LDI     R20, 0
   \   000000AC   E83C               LDI     R19, 140
   \   000000AE   E126               LDI     R18, 22
   \   000000B0   ....               LDI     R16, LOW((`?<Constant "0">` + 47))
   \   000000B2   ....               LDI     R17, HIGH((`?<Constant "0">` + 47))
   \   000000B4   ........           CALL    LCD_distring
    907          	LCD_distring("Confirm", 36, 140, 0);
   \   000000B8   E040               LDI     R20, 0
   \   000000BA   E83C               LDI     R19, 140
   \   000000BC   E224               LDI     R18, 36
   \   000000BE   ....               LDI     R16, LOW((`?<Constant "0">` + 32))
   \   000000C0   ....               LDI     R17, HIGH((`?<Constant "0">` + 32))
   \   000000C2   ........           CALL    LCD_distring
    908          	
    909          	timer_flex2_initial(500);
   \   000000C6   EF04               LDI     R16, 244
   \   000000C8   E011               LDI     R17, 1
   \   000000CA   E020               LDI     R18, 0
   \   000000CC   E030               LDI     R19, 0
   \   000000CE   ........           CALL    timer_flex2_initial
    910          	
    911          	ee_printed_id[8] = 0;
   \   000000D2   E000               LDI     R16, 0
   \   000000D4   ....               LDI     R20, LOW((ee_printed_id + 8))
   \   000000D6   ....               LDI     R21, HIGH((ee_printed_id + 8))
   \   000000D8   ........           CALL    __eeput8_16
    912          	for(i=0;i<8;i++)
   \   000000DC   E020               LDI     R18, 0
   \   000000DE   C00C               RJMP    ??menu_02_0
    913          	{
    914          		g_id[i] = ee_printed_id[i];
   \                     ??menu_02_1:
   \   000000E0   ....               LDI     R20, LOW(ee_printed_id)
   \   000000E2   ....               LDI     R21, (ee_printed_id) >> 8
   \   000000E4   0F42               ADD     R20, R18
   \   000000E6   1D55               ADC     R21, R5
   \   000000E8   ........           CALL    __eeget8_16
   \   000000EC   01FE               MOVW    R31:R30, R29:R28
   \   000000EE   9632               ADIW    R31:R30, 2
   \   000000F0   0FE2               ADD     R30, R18
   \   000000F2   1DF5               ADC     R31, R5
   \   000000F4   8300               ST      Z, R16
    915          	}
   \   000000F6   9523               INC     R18
   \                     ??menu_02_0:
   \   000000F8   3028               CPI     R18, 8
   \   000000FA   F390               BRCS    ??menu_02_1
    916          	LCD_distring_ee(ee_printed_id,24,24,0);
   \   000000FC   E040               LDI     R20, 0
   \   000000FE   E138               LDI     R19, 24
   \   00000100   E128               LDI     R18, 24
   \   00000102   ....               LDI     R16, LOW(ee_printed_id)
   \   00000104   ....               LDI     R17, (ee_printed_id) >> 8
   \   00000106   ........           CALL    LCD_distring_ee
    917          	col = 40;
   \   0000010A   E208               LDI     R16, 40
   \   0000010C   2E40               MOV     R4, R16
   \   0000010E   C008               RJMP    ??menu_02_2
    918          	
    919          	while(1)
    920          	{
    921          		while(decode_SCS());
    922          		
    923          		switch(state.main_state)
    924          		{
    925          			case FINAL_ID_STEP1:
    926          				id_setting(g_id);
    927          				state.main_state = FINAL_ID_STEP2;
    928          			break;
    929          			
    930          			case FINAL_ID_STEP2:
    931          				if(g_asc_reception_buffer[0] == 0xD0 && g_asc_reception_buffer[3] == 0x04)
    932          				{
    933          					strncpy(&g_reception_buffer[8],buffer_received,8);
    934          					buffer_received[8] = 0;
    935          					if(strcmp(buffer_received,g_id))
    936          					{
    937          						state.main_state = FINAL_ID_STEP3;
    938          					}
    939          				}
    940          			break;
    941          			
    942          			case FINAL_ID_STEP3:
    943          				delay_ms(200);
    944          				strncpy(buffer_tx,"D200014280000000",17);
    945          				strncpy(&buffer_tx[10],g_model,6);
    946          				if(g_model[4] == '3' && g_model[5] == '0')
    947          				{
    948          					buffer_tx[14] = '2';
    949          					buffer_tx[15] = 'A';
    950          				}
    951          				send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY); //brand & production line
    952          				state.main_state = FINAL_ID_STEP4;
    953          			break;
    954          			
    955          			case FINAL_ID_STEP4:
    956          				if(g_asc_reception_buffer[0]  == 0xD2 && g_asc_reception_buffer[3] == 0x34)
    957          				{
    958          					if(g_asc_reception_buffer[4] == 0x80)
    959          					{
    960          						if(g_reception_buffer[10] == g_model[0] && g_reception_buffer[14] == g_model[4] && g_reception_buffer[15] == g_model[5])
    961          						{
    962          							if(g_reception_buffer[12] == g_model[2] && g_reception_buffer[13] == g_model[3])
    963          							{
    964          								state.main_state = FINAL_ID_STEP5;
    965          							}
    966          						}
    967          						else
    968          						{
    969          							if(g_reception_buffer[10] == g_model[0])
    970          							{
    971          								if(g_asc_reception_buffer[7] == 0x2A && g_model[4] == '3' && g_model[5] == '0')
    972          								{
    973          									state.main_state = FINAL_ID_STEP5;
    974          								}
    975          							}
    976          						}
    977          					}
    978          				}
    979          			break;
    980          			
    981          			case FINAL_ID_STEP5:
    982          				delay_ms(200);
    983          				strncpy(buffer_tx,"D200014282000000",17);
    984          				buffer_tx[10] = g_hard[0];
    985          				buffer_tx[11] = g_hard[1];
    986          				buffer_tx[12] = g_year[0];
    987          				buffer_tx[13] = g_year[1];
    988          				buffer_tx[14] = g_week[0];
    989          				buffer_tx[15] = g_week[1];
    990          				send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
    991          				state.main_state = FINAL_ID_STEP6;
    992          			break;
    993          			
    994          			case FINAL_ID_STEP6:
    995          				if(g_asc_reception_buffer[0]  == 0xD2 && g_asc_reception_buffer[3] == 0x34)
    996          				{
    997          					if(g_asc_reception_buffer[4] == 0x82)
    998          					{
    999          						if(g_reception_buffer[10] == g_hard[0] && g_reception_buffer[11] == g_hard[1])
   1000          						{
   1001          							if(g_reception_buffer[12] == g_year[0] && g_reception_buffer[13] == g_year[1] && g_reception_buffer[14] == g_week[0] && g_reception_buffer[15] == g_week[1])
   1002          							{
   1003          								state.main_state = FINAL_ID_STEP7;
   1004          							}
   1005          						}
   1006          					}
   1007          				}
   1008          			break;
   1009          			
   1010          			case FINAL_ID_STEP7:
   1011          				print_label(g_id,g_model,year_week,g_soft,g_hard);
   1012          				for(i=0;i<8;i++)
   1013          				{
   1014          					ee_printed_id[i] = g_id[i];
   1015          				}
   1016          				LCD_distring(g_id,24,24,0);		// display the ID sent last time
   1017          				LCD_distring("ID Programmed",20,36,0);
   1018          				led_blinking(120,0);
   1019          				state.main_state = NORMAL;
   1020          			break;
   1021          			
   1022          			default:break;
   1023          		}
   1024          		
   1025          		if(state.main_state != NORMAL)
   1026          		{
   1027          			if(Time_delay.timer_flex.time_out == 1)
   1028          			{
   1029          				LCD_distring_V2(error_109,20,36,0);
   1030          			}
   1031          		}
   1032          		
   1033          		if(IS_PEN == 0)
   1034          		{
   1035          			TOUCH_getdata();
   1036          			temp_int = get_touch_key();
   1037          			
   1038          			touch_key_blink(temp_int,100);
   1039          			
   1040          			//if(temp_int <= 0x11)
   1041          			if(temp_int <= 19)		//alan
   1042          			{
   1043          				if(temp_int <= 9)
   1044          				{
   1045          					if(col >= 24 & col< 24 + 16)
   1046          					{
   1047          						buffer[0] = 48 + temp_int;
   1048          						buffer[1] = 0;
   1049          						LCD_distring(buffer,col,24,0);
   1050          			
   1051          						switch(col)
   1052          						{
   1053          						case 24:
   1054          								g_id[0] = buffer[0];
   1055          							break;
   1056          							
   1057          						case 26:
   1058          								g_id[1] = buffer[0];
   1059          							break;
   1060          							
   1061          						case 28:
   1062          								g_id[2] = buffer[0];
   1063          							break;
   1064          							
   1065          						case 30:
   1066          								g_id[3] = buffer[0];
   1067          							break;
   1068          							
   1069          						case 32:
   1070          								g_id[4] = buffer[0];
   1071          							break;
   1072          							
   1073          						case 34:
   1074          								g_id[5] = buffer[0];
   1075          							break;
   1076          							
   1077          						case 36:
   1078          								g_id[6] = buffer[0];
   1079          							break;
   1080          							
   1081          						case 38:
   1082          								g_id[7] = buffer[0];
   1083          							break;
   1084          							
   1085          						default:break;
   1086          						}
   1087          						
   1088          						col += 2;
   1089          					}
   1090          				}
   1091          				else if(temp_int <= 15)
   1092          				{
   1093          					if(col >= 24 & col< 24 + 16)
   1094          					{
   1095          						buffer[0] = 65 - 10 + temp_int;
   1096          						buffer[1] = 0;
   1097          						LCD_distring(buffer,col,24,0);
   1098          						switch(col)
   1099          						{
   1100          						case 24:
   1101          								g_id[0] = buffer[0];
   1102          							break;
   1103          							
   1104          						case 26:
   1105          								g_id[1] = buffer[0];
   1106          							break;
   1107          							
   1108          						case 28:
   1109          								g_id[2] = buffer[0];
   1110          							break;
   1111          							
   1112          						case 30:
   1113          								g_id[3] = buffer[0];
   1114          							break;
   1115          							
   1116          						case 32:
   1117          								g_id[4] = buffer[0];
   1118          							break;
   1119          							
   1120          						case 34:
   1121          								g_id[5] = buffer[0];
   1122          							break;
   1123          							
   1124          						case 36:
   1125          								g_id[6] = buffer[0];
   1126          							break;
   1127          							
   1128          						case 38:
   1129          								g_id[7] = buffer[0];
   1130          							break;
   1131          							
   1132          						default:break;
   1133          						}
   1134          						col += 2;
   1135          					}
   1136          				}
   1137          				else if((temp_int == 16)||(temp_int == 18))		//"confirm"
   1138          				{
   1139          					if(col == 40)
   1140          					{
   1141          						g_id[8] = 0;
   1142          						LCD_distring(g_id,24,24,1);		// display the ID sent last time
   1143          						LCD_distring("             ",20,36,0);
   1144          						led_blinking_disable(0);
   1145          						timer_flex_initial(5000);
   1146          						state.main_state = FINAL_ID_STEP1;
   1147          						/*
   1148          						id_setting(g_id);
   1149          						
   1150          						strncpy(buffer_tx,"D200014280000000",17);
   1151          						strncpy(&buffer_tx[10],g_model,6);
   1152          						send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY); //brand & production line
   1153          						
   1154          						delay_ms(500);
   1155          						
   1156          						strncpy(buffer_tx,"D200014282000000",17);
   1157          						buffer_tx[10] = g_hard[0];
   1158          						buffer_tx[11] = g_hard[1];
   1159          						buffer_tx[12] = g_year[0];
   1160          						buffer_tx[13] = g_year[1];
   1161          						buffer_tx[14] = g_week[0];
   1162          						buffer_tx[15] = g_week[1];
   1163          						send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1164          						
   1165          						print_label(g_id,g_model,year_week,g_soft,g_hard);
   1166          						LCD_distring(g_id,24,24,0);		// display the ID sent last time
   1167          						*/
   1168          					}
   1169          				}
   1170          				else if(temp_int == 17)		// "delete"
   1171          				{
   1172          					if(col >24)
   1173          					{
   1174          						LCD_distring(" ",col,24,0);
   1175          						col -= 2;
   1176          					}
   1177          				}
   1178          				else if(temp_int == 19)		//"Next" alan
   1179          				{
   1180          					
   1181          					id_long = 0;
   1182          					id_long = StrToChar(g_id);
   1183          					id_long = (id_long << 8) + StrToChar(&g_id[2]);
   1184          					id_long = (id_long << 8) + StrToChar(&g_id[4]);
   1185          					id_long = (id_long << 8) + StrToChar(&g_id[6]);
   1186          					id_long++;
   1187          					CharToStr((unsigned char)id_long,buffer);
   1188          					g_id[6] = buffer[0];
   1189          					g_id[7] = buffer[1]; 
   1190          					CharToStr((id_long & 0x0000FF00) >> 8,buffer);
   1191          					g_id[4] = buffer[0];
   1192          					g_id[5] = buffer[1]; 
   1193          					CharToStr((id_long & 0x00FF0000) >> 16,buffer);
   1194          					g_id[2] = buffer[0];
   1195          					g_id[3] = buffer[1]; 
   1196          					CharToStr((id_long & 0xFF000000) >> 24,buffer);
   1197          					g_id[0] = buffer[0];
   1198          					g_id[1] = buffer[1]; 
   1199          
   1200          					if(col == 40)
   1201          					{
   1202          						g_id[8] = 0;
   1203          						LCD_distring(g_id,24,24,1);		// alan,display the ID sent last time
   1204          						LCD_distring("             ",20,36,0);
   1205          						led_blinking_disable(0);
   1206          						timer_flex_initial(5000);
   1207          						state.main_state = FINAL_ID_STEP1;
   1208          					}
   1209          				}
   1210          			}
   1211          		}
   1212          		
   1213          		if(Time_delay.timer_flex2.time_out == 1)
   1214          		{
   1215          			temp = ~temp;
   1216          			timer_flex2_initial(500);
   1217          			if(temp)
   1218          				LCD_distring("_",col,24,0);
   1219          			else
   1220          				LCD_distring(" ",col,24,0);
   \                     ??menu_02_3:
   \   00000110   ....               LDI     R16, LOW((`?<Constant "0">` + 194))
   \   00000112   ....               LDI     R17, HIGH((`?<Constant "0">` + 194))
   \                     ??menu_02_4:
   \   00000114   ........           CALL    LCD_distring
   1221          		}
   1222          		
   1223          		all_reception_buffer_clear();
   \                     ??menu_02_5:
   \   00000118   ........           CALL    all_reception_buffer_clear
   1224          		light_adj();
   \   0000011C   ........           CALL    light_adj
   \                     ??menu_02_2:
   \   00000120   ........           CALL    decode_SCS
   \   00000124   2300               TST     R16
   \   00000126   F7E1               BRNE    ??menu_02_2
   \   00000128   9100....           LDS     R16, (state + 2)
   \   0000012C   9110....           LDS     R17, (state + 3)
   \   00000130   ....               LDI     R30, LOW(`?<Jumptable for menu_02>_0`)
   \   00000132   ....               LDI     R31, (`?<Jumptable for menu_02>_0`) >> 8
   \   00000134   ........           JMP     ?SV_SWITCH_L06
   \                     ??menu_02_6:
   \   00000138   018E               MOVW    R17:R16, R29:R28
   \   0000013A   5F0E               SUBI    R16, 254
   \   0000013C   4F1F               SBCI    R17, 255
   \   0000013E   ....               RCALL   id_setting
   \   00000140   E40F               LDI     R16, 79
   \                     ??menu_02_7:
   \   00000142   E910               LDI     R17, 144
   \   00000144   9300....           STS     (state + 2), R16
   \   00000148   9310....           STS     (state + 3), R17
   \   0000014C   C137               RJMP    ??menu_02_8
   \                     ??menu_02_9:
   \   0000014E   9100....           LDS     R16, g_asc_reception_buffer
   \   00000152   3D00               CPI     R16, 208
   \   00000154   F009               BREQ    $+2+2
   \   00000156   C132               RJMP    ??menu_02_8
   \   00000158   9100....           LDS     R16, (g_asc_reception_buffer + 3)
   \   0000015C   3004               CPI     R16, 4
   \   0000015E   F009               BREQ    $+2+2
   \   00000160   C12D               RJMP    ??menu_02_8
   \   00000162   E048               LDI     R20, 8
   \   00000164   E050               LDI     R21, 0
   \   00000166   019E               MOVW    R19:R18, R29:R28
   \   00000168   5D2E               SUBI    R18, 222
   \   0000016A   4F3F               SBCI    R19, 255
   \   0000016C   ....               LDI     R16, LOW((g_reception_buffer + 8))
   \   0000016E   ....               LDI     R17, HIGH((g_reception_buffer + 8))
   \   00000170   ........           CALL    strncpy
   \   00000174   E000               LDI     R16, 0
   \   00000176   A70A               STD     Y+42, R16
   \   00000178   019E               MOVW    R19:R18, R29:R28
   \   0000017A   5F2E               SUBI    R18, 254
   \   0000017C   4F3F               SBCI    R19, 255
   \   0000017E   018E               MOVW    R17:R16, R29:R28
   \   00000180   5D0E               SUBI    R16, 222
   \   00000182   4F1F               SBCI    R17, 255
   \   00000184   ........           CALL    strcmp
   \   00000188   2B01               OR      R16, R17
   \   0000018A   F409               BRNE    $+2+2
   \   0000018C   C117               RJMP    ??menu_02_8
   \   0000018E   E500               LDI     R16, 80
   \   00000190   CFD8               RJMP    ??menu_02_7
   \                     ??menu_02_10:
   \   00000192   EC08               LDI     R16, 200
   \   00000194   E010               LDI     R17, 0
   \   00000196   ........           CALL    delay_ms
   \   0000019A   E141               LDI     R20, 17
   \   0000019C   E050               LDI     R21, 0
   \   0000019E   ....               LDI     R18, LOW((`?<Constant "0">` + 303))
   \   000001A0   ....               LDI     R19, HIGH((`?<Constant "0">` + 303))
   \   000001A2   018E               MOVW    R17:R16, R29:R28
   \   000001A4   5E0F               SUBI    R16, 239
   \   000001A6   4F1F               SBCI    R17, 255
   \   000001A8   ........           CALL    strncpy
   \   000001AC   E046               LDI     R20, 6
   \   000001AE   E050               LDI     R21, 0
   \   000001B0   ....               LDI     R18, LOW(g_model)
   \   000001B2   ....               LDI     R19, (g_model) >> 8
   \   000001B4   018E               MOVW    R17:R16, R29:R28
   \   000001B6   5E05               SUBI    R16, 229
   \   000001B8   4F1F               SBCI    R17, 255
   \   000001BA   ........           CALL    strncpy
   \   000001BE   9100....           LDS     R16, (g_model + 4)
   \   000001C2   3303               CPI     R16, 51
   \   000001C4   F441               BRNE    ??menu_02_11
   \   000001C6   9100....           LDS     R16, (g_model + 5)
   \   000001CA   3300               CPI     R16, 48
   \   000001CC   F421               BRNE    ??menu_02_11
   \   000001CE   E302               LDI     R16, 50
   \   000001D0   8F0F               STD     Y+31, R16
   \   000001D2   E401               LDI     R16, 65
   \   000001D4   A308               STD     Y+32, R16
   \                     ??menu_02_11:
   \   000001D6   E322               LDI     R18, 50
   \   000001D8   E030               LDI     R19, 0
   \   000001DA   018E               MOVW    R17:R16, R29:R28
   \   000001DC   5E0F               SUBI    R16, 239
   \   000001DE   4F1F               SBCI    R17, 255
   \   000001E0   ........           CALL    send_frame_pp_ext_broad
   \   000001E4   E501               LDI     R16, 81
   \   000001E6   CFAD               RJMP    ??menu_02_7
   \                     ??menu_02_12:
   \   000001E8   9100....           LDS     R16, g_asc_reception_buffer
   \   000001EC   3D02               CPI     R16, 210
   \   000001EE   F009               BREQ    $+2+2
   \   000001F0   C0E5               RJMP    ??menu_02_8
   \   000001F2   9100....           LDS     R16, (g_asc_reception_buffer + 3)
   \   000001F6   3304               CPI     R16, 52
   \   000001F8   F009               BREQ    $+2+2
   \   000001FA   C0E0               RJMP    ??menu_02_8
   \   000001FC   9100....           LDS     R16, (g_asc_reception_buffer + 4)
   \   00000200   3800               CPI     R16, 128
   \   00000202   F009               BREQ    $+2+2
   \   00000204   C0DB               RJMP    ??menu_02_8
   \   00000206   9100....           LDS     R16, (g_reception_buffer + 10)
   \   0000020A   9110....           LDS     R17, g_model
   \   0000020E   1701               CP      R16, R17
   \   00000210   F4E1               BRNE    ??menu_02_13
   \   00000212   9100....           LDS     R16, (g_reception_buffer + 14)
   \   00000216   9110....           LDS     R17, (g_model + 4)
   \   0000021A   1701               CP      R16, R17
   \   0000021C   F4B1               BRNE    ??menu_02_13
   \   0000021E   9100....           LDS     R16, (g_reception_buffer + 15)
   \   00000222   9110....           LDS     R17, (g_model + 5)
   \   00000226   1701               CP      R16, R17
   \   00000228   F481               BRNE    ??menu_02_13
   \   0000022A   9100....           LDS     R16, (g_reception_buffer + 12)
   \   0000022E   9110....           LDS     R17, (g_model + 2)
   \   00000232   1701               CP      R16, R17
   \   00000234   F009               BREQ    $+2+2
   \   00000236   C0C2               RJMP    ??menu_02_8
   \   00000238   9100....           LDS     R16, (g_reception_buffer + 13)
   \   0000023C   9110....           LDS     R17, (g_model + 3)
   \   00000240   1701               CP      R16, R17
   \   00000242   F009               BREQ    $+2+2
   \   00000244   C0BB               RJMP    ??menu_02_8
   \                     ??menu_02_14:
   \   00000246   E502               LDI     R16, 82
   \   00000248   CF7C               RJMP    ??menu_02_7
   \                     ??menu_02_13:
   \   0000024A   9100....           LDS     R16, (g_reception_buffer + 10)
   \   0000024E   9110....           LDS     R17, g_model
   \   00000252   1701               CP      R16, R17
   \   00000254   F009               BREQ    $+2+2
   \   00000256   C0B2               RJMP    ??menu_02_8
   \   00000258   9100....           LDS     R16, (g_asc_reception_buffer + 7)
   \   0000025C   320A               CPI     R16, 42
   \   0000025E   F009               BREQ    $+2+2
   \   00000260   C0AD               RJMP    ??menu_02_8
   \   00000262   9100....           LDS     R16, (g_model + 4)
   \   00000266   3303               CPI     R16, 51
   \   00000268   F009               BREQ    $+2+2
   \   0000026A   C0A8               RJMP    ??menu_02_8
   \   0000026C   9100....           LDS     R16, (g_model + 5)
   \   00000270   3300               CPI     R16, 48
   \   00000272   F009               BREQ    $+2+2
   \   00000274   C0A3               RJMP    ??menu_02_8
   \   00000276   CFE7               RJMP    ??menu_02_14
   \                     ??menu_02_15:
   \   00000278   EC08               LDI     R16, 200
   \   0000027A   E010               LDI     R17, 0
   \   0000027C   ........           CALL    delay_ms
   \   00000280   E141               LDI     R20, 17
   \   00000282   E050               LDI     R21, 0
   \   00000284   ....               LDI     R18, LOW((`?<Constant "0">` + 320))
   \   00000286   ....               LDI     R19, HIGH((`?<Constant "0">` + 320))
   \   00000288   018E               MOVW    R17:R16, R29:R28
   \   0000028A   5E0F               SUBI    R16, 239
   \   0000028C   4F1F               SBCI    R17, 255
   \   0000028E   ........           CALL    strncpy
   \   00000292   9100....           LDS     R16, g_hard
   \   00000296   8F0B               STD     Y+27, R16
   \   00000298   9100....           LDS     R16, (g_hard + 1)
   \   0000029C   8F0C               STD     Y+28, R16
   \   0000029E   9100....           LDS     R16, g_year
   \   000002A2   8F0D               STD     Y+29, R16
   \   000002A4   9100....           LDS     R16, (g_year + 1)
   \   000002A8   8F0E               STD     Y+30, R16
   \   000002AA   9100....           LDS     R16, g_week
   \   000002AE   8F0F               STD     Y+31, R16
   \   000002B0   9100....           LDS     R16, (g_week + 1)
   \   000002B4   A308               STD     Y+32, R16
   \   000002B6   E322               LDI     R18, 50
   \   000002B8   E030               LDI     R19, 0
   \   000002BA   018E               MOVW    R17:R16, R29:R28
   \   000002BC   5E0F               SUBI    R16, 239
   \   000002BE   4F1F               SBCI    R17, 255
   \   000002C0   ........           CALL    send_frame_pp_ext_broad
   \   000002C4   E503               LDI     R16, 83
   \   000002C6   CF3D               RJMP    ??menu_02_7
   \                     ??menu_02_16:
   \   000002C8   9100....           LDS     R16, g_asc_reception_buffer
   \   000002CC   3D02               CPI     R16, 210
   \   000002CE   F009               BREQ    $+2+2
   \   000002D0   C075               RJMP    ??menu_02_8
   \   000002D2   9100....           LDS     R16, (g_asc_reception_buffer + 3)
   \   000002D6   3304               CPI     R16, 52
   \   000002D8   F009               BREQ    $+2+2
   \   000002DA   C070               RJMP    ??menu_02_8
   \   000002DC   9100....           LDS     R16, (g_asc_reception_buffer + 4)
   \   000002E0   3802               CPI     R16, 130
   \   000002E2   F009               BREQ    $+2+2
   \   000002E4   C06B               RJMP    ??menu_02_8
   \   000002E6   9100....           LDS     R16, (g_reception_buffer + 10)
   \   000002EA   9110....           LDS     R17, g_hard
   \   000002EE   1701               CP      R16, R17
   \   000002F0   F009               BREQ    $+2+2
   \   000002F2   C064               RJMP    ??menu_02_8
   \   000002F4   9100....           LDS     R16, (g_reception_buffer + 11)
   \   000002F8   9110....           LDS     R17, (g_hard + 1)
   \   000002FC   1701               CP      R16, R17
   \   000002FE   F009               BREQ    $+2+2
   \   00000300   C05D               RJMP    ??menu_02_8
   \   00000302   9100....           LDS     R16, (g_reception_buffer + 12)
   \   00000306   9110....           LDS     R17, g_year
   \   0000030A   1701               CP      R16, R17
   \   0000030C   F009               BREQ    $+2+2
   \   0000030E   C056               RJMP    ??menu_02_8
   \   00000310   9100....           LDS     R16, (g_reception_buffer + 13)
   \   00000314   9110....           LDS     R17, (g_year + 1)
   \   00000318   1701               CP      R16, R17
   \   0000031A   F009               BREQ    $+2+2
   \   0000031C   C04F               RJMP    ??menu_02_8
   \   0000031E   9100....           LDS     R16, (g_reception_buffer + 14)
   \   00000322   9110....           LDS     R17, g_week
   \   00000326   1701               CP      R16, R17
   \   00000328   F009               BREQ    $+2+2
   \   0000032A   C048               RJMP    ??menu_02_8
   \   0000032C   9100....           LDS     R16, (g_reception_buffer + 15)
   \   00000330   9110....           LDS     R17, (g_week + 1)
   \   00000334   1701               CP      R16, R17
   \   00000336   F009               BREQ    $+2+2
   \   00000338   C041               RJMP    ??menu_02_8
   \   0000033A   E504               LDI     R16, 84
   \   0000033C   CF02               RJMP    ??menu_02_7
   \                     ??menu_02_17:
   \   0000033E   ....               LDI     R16, LOW(g_hard)
   \   00000340   ....               LDI     R17, (g_hard) >> 8
   \   00000342   931A               ST      -Y, R17
   \   00000344   930A               ST      -Y, R16
   \   00000346   ....               LDI     R22, LOW(g_soft)
   \   00000348   ....               LDI     R23, (g_soft) >> 8
   \   0000034A   01AE               MOVW    R21:R20, R29:R28
   \   0000034C   5F43               SUBI    R20, 243
   \   0000034E   4F5F               SBCI    R21, 255
   \   00000350   ....               LDI     R18, LOW(g_model)
   \   00000352   ....               LDI     R19, (g_model) >> 8
   \   00000354   018E               MOVW    R17:R16, R29:R28
   \   00000356   5F0C               SUBI    R16, 252
   \   00000358   4F1F               SBCI    R17, 255
   \   0000035A   ........           CALL    print_label
   \   0000035E   E020               LDI     R18, 0
   \   00000360   C00D               RJMP    ??menu_02_18
   \                     ??menu_02_19:
   \   00000362   01FE               MOVW    R31:R30, R29:R28
   \   00000364   9632               ADIW    R31:R30, 2
   \   00000366   E030               LDI     R19, 0
   \   00000368   0FE2               ADD     R30, R18
   \   0000036A   1FF3               ADC     R31, R19
   \   0000036C   8100               LD      R16, Z
   \   0000036E   ....               LDI     R20, LOW(ee_printed_id)
   \   00000370   ....               LDI     R21, (ee_printed_id) >> 8
   \   00000372   0F42               ADD     R20, R18
   \   00000374   1F53               ADC     R21, R19
   \   00000376   ........           CALL    __eeput8_16
   \   0000037A   9523               INC     R18
   \                     ??menu_02_18:
   \   0000037C   3028               CPI     R18, 8
   \   0000037E   F388               BRCS    ??menu_02_19
   \   00000380   E040               LDI     R20, 0
   \   00000382   E138               LDI     R19, 24
   \   00000384   E128               LDI     R18, 24
   \   00000386   018E               MOVW    R17:R16, R29:R28
   \   00000388   5F0E               SUBI    R16, 254
   \   0000038A   4F1F               SBCI    R17, 255
   \   0000038C   ........           CALL    LCD_distring
   \   00000390   E040               LDI     R20, 0
   \   00000392   E234               LDI     R19, 36
   \   00000394   E124               LDI     R18, 20
   \   00000396   ....               LDI     R16, LOW((`?<Constant "0">` + 337))
   \   00000398   ....               LDI     R17, HIGH((`?<Constant "0">` + 337))
   \   0000039A   ........           CALL    LCD_distring
   \   0000039E   E040               LDI     R20, 0
   \   000003A0   E050               LDI     R21, 0
   \   000003A2   E060               LDI     R22, 0
   \   000003A4   E070               LDI     R23, 0
   \   000003A6   E708               LDI     R16, 120
   \   000003A8   E010               LDI     R17, 0
   \   000003AA   E020               LDI     R18, 0
   \   000003AC   E030               LDI     R19, 0
   \   000003AE   ........           CALL    led_blinking
   \   000003B2   E000               LDI     R16, 0
   \   000003B4   9300....           STS     (state + 2), R16
   \   000003B8   9300....           STS     (state + 3), R16
   \                     ??menu_02_8:
   \   000003BC   9100....           LDS     R16, (state + 2)
   \   000003C0   9110....           LDS     R17, (state + 3)
   \   000003C4   2B01               OR      R16, R17
   \   000003C6   F059               BREQ    ??menu_02_20
   \   000003C8   9100....           LDS     R16, (Time_delay + 157)
   \   000003CC   3001               CPI     R16, 1
   \   000003CE   F439               BRNE    ??menu_02_20
   \   000003D0   E040               LDI     R20, 0
   \   000003D2   E234               LDI     R19, 36
   \   000003D4   E124               LDI     R18, 20
   \   000003D6   ....               LDI     R16, LOW(error_109)
   \   000003D8   ....               LDI     R17, (error_109) >> 8
   \   000003DA   ........           CALL    LCD_distring_V2
   \                     ??menu_02_20:
   \   000003DE   994D               SBIC    0x09, 0x05
   \   000003E0   C0E5               RJMP    ??menu_02_21
   \   000003E2   ........           CALL    TOUCH_getdata
   \   000003E6   ....               RCALL   get_touch_key
   \   000003E8   2F80               MOV     R24, R16
   \   000003EA   E090               LDI     R25, 0
   \   000003EC   E624               LDI     R18, 100
   \   000003EE   E030               LDI     R19, 0
   \   000003F0   ....               RCALL   touch_key_blink
   \   000003F2   3184               CPI     R24, 20
   \   000003F4   0799               CPC     R25, R25
   \   000003F6   F008               BRCS    $+2+2
   \   000003F8   C0D9               RJMP    ??menu_02_21
   \   000003FA   308A               CPI     R24, 10
   \   000003FC   0799               CPC     R25, R25
   \   000003FE   F5D0               BRCC    ??menu_02_22
   \   00000400   E108               LDI     R16, 24
   \   00000402   1640               CP      R4, R16
   \   00000404   F408               BRCC    $+2+2
   \   00000406   C0D2               RJMP    ??menu_02_21
   \   00000408   E208               LDI     R16, 40
   \   0000040A   1640               CP      R4, R16
   \   0000040C   F008               BRCS    $+2+2
   \   0000040E   C0CE               RJMP    ??menu_02_21
   \   00000410   5D80               SUBI    R24, 208
   \                     ??menu_02_23:
   \   00000412   8388               ST      Y, R24
   \   00000414   8399               STD     Y+1, R25
   \   00000416   E040               LDI     R20, 0
   \   00000418   E138               LDI     R19, 24
   \   0000041A   2D24               MOV     R18, R4
   \   0000041C   018E               MOVW    R17:R16, R29:R28
   \   0000041E   ........           CALL    LCD_distring
   \   00000422   2D04               MOV     R16, R4
   \   00000424   5108               SUBI    R16, 24
   \   00000426   F079               BREQ    ??menu_02_24
   \   00000428   5002               SUBI    R16, 2
   \   0000042A   F189               BREQ    ??menu_02_25
   \   0000042C   5002               SUBI    R16, 2
   \   0000042E   F071               BREQ    ??menu_02_26
   \   00000430   5002               SUBI    R16, 2
   \   00000432   F079               BREQ    ??menu_02_27
   \   00000434   5002               SUBI    R16, 2
   \   00000436   F081               BREQ    ??menu_02_28
   \   00000438   5002               SUBI    R16, 2
   \   0000043A   F089               BREQ    ??menu_02_29
   \   0000043C   5002               SUBI    R16, 2
   \   0000043E   F091               BREQ    ??menu_02_30
   \   00000440   5002               SUBI    R16, 2
   \   00000442   F099               BREQ    ??menu_02_31
   \   00000444   C014               RJMP    ??menu_02_32
   \                     ??menu_02_24:
   \   00000446   8108               LD      R16, Y
   \   00000448   830A               STD     Y+2, R16
   \   0000044A   C011               RJMP    ??menu_02_32
   \                     ??menu_02_26:
   \   0000044C   8108               LD      R16, Y
   \   0000044E   830C               STD     Y+4, R16
   \   00000450   C00E               RJMP    ??menu_02_32
   \                     ??menu_02_27:
   \   00000452   8108               LD      R16, Y
   \   00000454   830D               STD     Y+5, R16
   \   00000456   C00B               RJMP    ??menu_02_32
   \                     ??menu_02_28:
   \   00000458   8108               LD      R16, Y
   \   0000045A   830E               STD     Y+6, R16
   \   0000045C   C008               RJMP    ??menu_02_32
   \                     ??menu_02_29:
   \   0000045E   8108               LD      R16, Y
   \   00000460   830F               STD     Y+7, R16
   \   00000462   C005               RJMP    ??menu_02_32
   \                     ??menu_02_30:
   \   00000464   8108               LD      R16, Y
   \   00000466   8708               STD     Y+8, R16
   \   00000468   C002               RJMP    ??menu_02_32
   \                     ??menu_02_31:
   \   0000046A   8108               LD      R16, Y
   \   0000046C   8709               STD     Y+9, R16
   \                     ??menu_02_32:
   \   0000046E   E002               LDI     R16, 2
   \                     ??menu_02_33:
   \   00000470   0E40               ADD     R4, R16
   \   00000472   C09C               RJMP    ??menu_02_21
   \                     ??menu_02_22:
   \   00000474   3180               CPI     R24, 16
   \   00000476   0799               CPC     R25, R25
   \   00000478   F468               BRCC    ??menu_02_34
   \   0000047A   E108               LDI     R16, 24
   \   0000047C   1640               CP      R4, R16
   \   0000047E   F408               BRCC    $+2+2
   \   00000480   C095               RJMP    ??menu_02_21
   \   00000482   E208               LDI     R16, 40
   \   00000484   1640               CP      R4, R16
   \   00000486   F008               BRCS    $+2+2
   \   00000488   C091               RJMP    ??menu_02_21
   \   0000048A   5C89               SUBI    R24, 201
   \   0000048C   CFC2               RJMP    ??menu_02_23
   \                     ??menu_02_25:
   \   0000048E   8108               LD      R16, Y
   \   00000490   830B               STD     Y+3, R16
   \   00000492   CFED               RJMP    ??menu_02_32
   \                     ??menu_02_34:
   \   00000494   3180               CPI     R24, 16
   \   00000496   0799               CPC     R25, R25
   \   00000498   F019               BREQ    ??menu_02_35
   \   0000049A   3182               CPI     R24, 18
   \   0000049C   0799               CPC     R25, R25
   \   0000049E   F529               BRNE    ??menu_02_36
   \                     ??menu_02_35:
   \   000004A0   E208               LDI     R16, 40
   \   000004A2   1640               CP      R4, R16
   \   000004A4   F009               BREQ    $+2+2
   \   000004A6   C082               RJMP    ??menu_02_21
   \                     ??menu_02_37:
   \   000004A8   E000               LDI     R16, 0
   \   000004AA   870A               STD     Y+10, R16
   \   000004AC   E041               LDI     R20, 1
   \   000004AE   E138               LDI     R19, 24
   \   000004B0   E128               LDI     R18, 24
   \   000004B2   018E               MOVW    R17:R16, R29:R28
   \   000004B4   5F0E               SUBI    R16, 254
   \   000004B6   4F1F               SBCI    R17, 255
   \   000004B8   ........           CALL    LCD_distring
   \   000004BC   E040               LDI     R20, 0
   \   000004BE   E234               LDI     R19, 36
   \   000004C0   E124               LDI     R18, 20
   \   000004C2   ....               LDI     R16, LOW((`?<Constant "0">` + 351))
   \   000004C4   ....               LDI     R17, HIGH((`?<Constant "0">` + 351))
   \   000004C6   ........           CALL    LCD_distring
   \   000004CA   E000               LDI     R16, 0
   \   000004CC   ........           CALL    led_blinking_disable
   \   000004D0   E808               LDI     R16, 136
   \   000004D2   E113               LDI     R17, 19
   \   000004D4   E020               LDI     R18, 0
   \   000004D6   E030               LDI     R19, 0
   \   000004D8   ........           CALL    timer_flex_initial
   \   000004DC   E40E               LDI     R16, 78
   \   000004DE   E910               LDI     R17, 144
   \   000004E0   9300....           STS     (state + 2), R16
   \   000004E4   9310....           STS     (state + 3), R17
   \   000004E8   C061               RJMP    ??menu_02_21
   \                     ??menu_02_36:
   \   000004EA   3181               CPI     R24, 17
   \   000004EC   0799               CPC     R25, R25
   \   000004EE   F469               BRNE    ??menu_02_38
   \   000004F0   E109               LDI     R16, 25
   \   000004F2   1640               CP      R4, R16
   \   000004F4   F408               BRCC    $+2+2
   \   000004F6   C05A               RJMP    ??menu_02_21
   \   000004F8   E040               LDI     R20, 0
   \   000004FA   E138               LDI     R19, 24
   \   000004FC   2D24               MOV     R18, R4
   \   000004FE   ....               LDI     R16, LOW((`?<Constant "0">` + 194))
   \   00000500   ....               LDI     R17, HIGH((`?<Constant "0">` + 194))
   \   00000502   ........           CALL    LCD_distring
   \   00000506   EF0E               LDI     R16, 254
   \   00000508   CFB3               RJMP    ??menu_02_33
   \                     ??menu_02_38:
   \   0000050A   3183               CPI     R24, 19
   \   0000050C   0799               CPC     R25, R25
   \   0000050E   F009               BREQ    $+2+2
   \   00000510   C04D               RJMP    ??menu_02_21
   \   00000512   018E               MOVW    R17:R16, R29:R28
   \   00000514   5F0E               SUBI    R16, 254
   \   00000516   4F1F               SBCI    R17, 255
   \   00000518   ........           CALL    StrToChar
   \   0000051C   2F80               MOV     R24, R16
   \   0000051E   2F98               MOV     R25, R24
   \   00000520   E080               LDI     R24, 0
   \   00000522   018E               MOVW    R17:R16, R29:R28
   \   00000524   5F0C               SUBI    R16, 252
   \   00000526   4F1F               SBCI    R17, 255
   \   00000528   ........           CALL    StrToChar
   \   0000052C   0F80               ADD     R24, R16
   \   0000052E   2FA9               MOV     R26, R25
   \   00000530   2F98               MOV     R25, R24
   \   00000532   E080               LDI     R24, 0
   \   00000534   018E               MOVW    R17:R16, R29:R28
   \   00000536   5F0A               SUBI    R16, 250
   \   00000538   4F1F               SBCI    R17, 255
   \   0000053A   ........           CALL    StrToChar
   \   0000053E   0F80               ADD     R24, R16
   \   00000540   2FBA               MOV     R27, R26
   \   00000542   2FA9               MOV     R26, R25
   \   00000544   2F98               MOV     R25, R24
   \   00000546   E080               LDI     R24, 0
   \   00000548   018E               MOVW    R17:R16, R29:R28
   \   0000054A   5F08               SUBI    R16, 248
   \   0000054C   4F1F               SBCI    R17, 255
   \   0000054E   ........           CALL    StrToChar
   \   00000552   0F80               ADD     R24, R16
   \   00000554   5F8F               SUBI    R24, 255
   \   00000556   4F9F               SBCI    R25, 255
   \   00000558   4FAF               SBCI    R26, 255
   \   0000055A   4FBF               SBCI    R27, 255
   \   0000055C   019E               MOVW    R19:R18, R29:R28
   \   0000055E   018C               MOVW    R17:R16, R25:R24
   \   00000560   ........           CALL    CharToStr
   \   00000564   8108               LD      R16, Y
   \   00000566   8708               STD     Y+8, R16
   \   00000568   8109               LDD     R16, Y+1
   \   0000056A   8709               STD     Y+9, R16
   \   0000056C   019E               MOVW    R19:R18, R29:R28
   \   0000056E   018C               MOVW    R17:R16, R25:R24
   \   00000570   2F01               MOV     R16, R17
   \   00000572   ........           CALL    CharToStr
   \   00000576   8108               LD      R16, Y
   \   00000578   830E               STD     Y+6, R16
   \   0000057A   8109               LDD     R16, Y+1
   \   0000057C   830F               STD     Y+7, R16
   \   0000057E   019E               MOVW    R19:R18, R29:R28
   \   00000580   01BD               MOVW    R23:R22, R27:R26
   \   00000582   2F46               MOV     R20, R22
   \   00000584   2F04               MOV     R16, R20
   \   00000586   ........           CALL    CharToStr
   \   0000058A   8108               LD      R16, Y
   \   0000058C   830C               STD     Y+4, R16
   \   0000058E   8109               LDD     R16, Y+1
   \   00000590   830D               STD     Y+5, R16
   \   00000592   019E               MOVW    R19:R18, R29:R28
   \   00000594   2F8B               MOV     R24, R27
   \   00000596   2F08               MOV     R16, R24
   \   00000598   ........           CALL    CharToStr
   \   0000059C   8108               LD      R16, Y
   \   0000059E   830A               STD     Y+2, R16
   \   000005A0   8109               LDD     R16, Y+1
   \   000005A2   830B               STD     Y+3, R16
   \   000005A4   E208               LDI     R16, 40
   \   000005A6   1640               CP      R4, R16
   \   000005A8   F409               BRNE    $+2+2
   \   000005AA   CF7E               RJMP    ??menu_02_37
   \                     ??menu_02_21:
   \   000005AC   9100....           LDS     R16, (Time_delay + 212)
   \   000005B0   3001               CPI     R16, 1
   \   000005B2   F009               BREQ    $+2+2
   \   000005B4   CDB1               RJMP    ??menu_02_5
   \   000005B6   9450               COM     R5
   \   000005B8   EF04               LDI     R16, 244
   \   000005BA   E011               LDI     R17, 1
   \   000005BC   E020               LDI     R18, 0
   \   000005BE   E030               LDI     R19, 0
   \   000005C0   ........           CALL    timer_flex2_initial
   \   000005C4   2055               TST     R5
   \   000005C6   E040               LDI     R20, 0
   \   000005C8   E138               LDI     R19, 24
   \   000005CA   2D24               MOV     R18, R4
   \   000005CC   F409               BRNE    $+2+2
   \   000005CE   CDA0               RJMP    ??menu_02_3
   \   000005D0   ....               LDI     R16, LOW((`?<Constant "0">` + 196))
   \   000005D2   ....               LDI     R17, HIGH((`?<Constant "0">` + 196))
   \   000005D4   CD9F               RJMP    ??menu_02_4
   \   000005D6                      REQUIRE _A_PIND
   1225          	}
   1226          }
   1227          

   \                                 In  segment CODE, align 2, keep-with-next
   1228          unsigned char input_screen(unsigned char *title,unsigned char *input_result,unsigned char flag)
   \                     input_screen:
   1229          {
   \   00000000   ........           CALL    ?PROLOGUE7_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004   9723               SBIW    R29:R28, 3
   \   00000006   01D8               MOVW    R27:R26, R17:R16
   \   00000008   0129               MOVW    R5:R4, R19:R18
   \   0000000A   2E64               MOV     R6, R20
   1230          	unsigned char temp = 0;
   \   0000000C   E090               LDI     R25, 0
   1231          	unsigned char col = 24;
   1232          	unsigned char buffer[3];
   1233          	unsigned int temp_int;
   1234          	
   1235          	unsigned char i;
   1236          	static unsigned char len;
   1237          	len = strlen(input_result);
   \   0000000E   0182               MOVW    R17:R16, R5:R4
   \   00000010   ........           CALL    strlen
   \   00000014   9300....           STS     ??len, R16
   1238          		
   1239          	LCD_Clr();
   \   00000018   ........           CALL    LCD_Clr
   1240          	LCD_distring(title, 12, 4, 0);
   \   0000001C   E040               LDI     R20, 0
   \   0000001E   E034               LDI     R19, 4
   \   00000020   E02C               LDI     R18, 12
   \   00000022   018D               MOVW    R17:R16, R27:R26
   \   00000024   ........           CALL    LCD_distring
   1241          	LCD_distring("   Input:", 0, 24, 0);
   \   00000028   E040               LDI     R20, 0
   \   0000002A   E138               LDI     R19, 24
   \   0000002C   E020               LDI     R18, 0
   \   0000002E   ....               LDI     R16, LOW((`?<Constant "0">` + 365))
   \   00000030   ....               LDI     R17, HIGH((`?<Constant "0">` + 365))
   \   00000032   ........           CALL    LCD_distring
   1242          	//LCD_distring("123456789012345678901234567", 0, 38, 0);
   1243          	LCD_distring("1    2    3     ", 10, 48, 0);
   \   00000036   E040               LDI     R20, 0
   \   00000038   E330               LDI     R19, 48
   \   0000003A   E02A               LDI     R18, 10
   \   0000003C   ....               LDI     R16, LOW((`?<Constant "0">` + 69))
   \   0000003E   ....               LDI     R17, HIGH((`?<Constant "0">` + 69))
   \   00000040   ........           CALL    LCD_distring
   1244          	LCD_distring("4    5    6     ", 10, 72, 0);
   \   00000044   E040               LDI     R20, 0
   \   00000046   E438               LDI     R19, 72
   \   00000048   E02A               LDI     R18, 10
   \   0000004A   ....               LDI     R16, LOW((`?<Constant "0">` + 86))
   \   0000004C   ....               LDI     R17, HIGH((`?<Constant "0">` + 86))
   \   0000004E   ........           CALL    LCD_distring
   1245          	LCD_distring("7    8    9     ", 10, 96, 0);
   \   00000052   E040               LDI     R20, 0
   \   00000054   E630               LDI     R19, 96
   \   00000056   E02A               LDI     R18, 10
   \   00000058   ....               LDI     R16, LOW((`?<Constant "0">` + 103))
   \   0000005A   ....               LDI     R17, HIGH((`?<Constant "0">` + 103))
   \   0000005C   ........           CALL    LCD_distring
   1246          	LCD_distring("     0          ", 10, 120, 0);
   \   00000060   E040               LDI     R20, 0
   \   00000062   E738               LDI     R19, 120
   \   00000064   E02A               LDI     R18, 10
   \   00000066   ....               LDI     R16, LOW((`?<Constant "0">` + 120))
   \   00000068   ....               LDI     R17, HIGH((`?<Constant "0">` + 120))
   \   0000006A   ........           CALL    LCD_distring
   1247          	LCD_distring("Delete", 2, 140, 0);
   \   0000006E   E040               LDI     R20, 0
   \   00000070   E83C               LDI     R19, 140
   \   00000072   E022               LDI     R18, 2
   \   00000074   ....               LDI     R16, LOW((`?<Constant "0">` + 40))
   \   00000076   ....               LDI     R17, HIGH((`?<Constant "0">` + 40))
   \   00000078   ........           CALL    LCD_distring
   1248          	//LCD_distring("Again", 10, 140, 0);		//alan		18
   1249          	//LCD_distring("Next", 24, 140, 0);			//alan		19
   1250          	LCD_distring("Confirm", 36, 140, 0);
   \   0000007C   E040               LDI     R20, 0
   \   0000007E   E83C               LDI     R19, 140
   \   00000080   E224               LDI     R18, 36
   \   00000082   ....               LDI     R16, LOW((`?<Constant "0">` + 32))
   \   00000084   ....               LDI     R17, HIGH((`?<Constant "0">` + 32))
   \   00000086   ........           CALL    LCD_distring
   1251          	
   1252          	timer_flex2_initial(500);
   \   0000008A   EF04               LDI     R16, 244
   \   0000008C   E011               LDI     R17, 1
   \   0000008E   E020               LDI     R18, 0
   \   00000090   E030               LDI     R19, 0
   \   00000092   ........           CALL    timer_flex2_initial
   1253          	g_lux[0] = '0';
   \   00000096   ....               LDI     R30, LOW(g_lux)
   \   00000098   ....               LDI     R31, (g_lux) >> 8
   \   0000009A   E300               LDI     R16, 48
   \   0000009C   8300               ST      Z, R16
   1254          	g_lux[1] = '0';
   \   0000009E   8301               STD     Z+1, R16
   1255          	g_lux[2] = '0';
   \   000000A0   8302               STD     Z+2, R16
   1256          	g_lux[3] = '0';
   \   000000A2   8303               STD     Z+3, R16
   1257          	g_lux[4] = 0;
   \   000000A4   8394               STD     Z+4, R25
   1258          	
   1259          	switch(flag)
   \   000000A6   2D06               MOV     R16, R6
   \   000000A8   5000               SUBI    R16, 0
   \   000000AA   F059               BREQ    ??input_screen_0
   \   000000AC   950A               DEC     R16
   \   000000AE   F0F9               BREQ    ??input_screen_1
   \   000000B0   950A               DEC     R16
   \   000000B2   F199               BREQ    ??input_screen_2
   \   000000B4   950A               DEC     R16
   \   000000B6   F409               BRNE    $+2+2
   \   000000B8   C046               RJMP    ??input_screen_3
   \   000000BA   950A               DEC     R16
   \   000000BC   F409               BRNE    $+2+2
   \   000000BE   C059               RJMP    ??input_screen_4
   \   000000C0   C06F               RJMP    ??input_screen_5
   1260          	{
   1261          		case INPUT_MODEL:
   1262          			for(i=0;i<6;i++)
   \                     ??input_screen_0:
   \   000000C2   E020               LDI     R18, 0
   \   000000C4   C00C               RJMP    ??input_screen_6
   1263          			{
   1264          				g_model[i] = ee_model[i]; 
   \                     ??input_screen_7:
   \   000000C6   E030               LDI     R19, 0
   \   000000C8   ....               LDI     R20, LOW(ee_model)
   \   000000CA   ....               LDI     R21, (ee_model) >> 8
   \   000000CC   0F42               ADD     R20, R18
   \   000000CE   1F59               ADC     R21, R25
   \   000000D0   ........           CALL    __eeget8_16
   \   000000D4   01F9               MOVW    R31:R30, R19:R18
   \   000000D6   ....               SUBI    R30, LOW((-(g_model) & 0xFFFF))
   \   000000D8   ....               SBCI    R31, (-(g_model) & 0xFFFF) >> 8
   \   000000DA   8300               ST      Z, R16
   1265          			}
   \   000000DC   9523               INC     R18
   \                     ??input_screen_6:
   \   000000DE   3026               CPI     R18, 6
   \   000000E0   F390               BRCS    ??input_screen_7
   1266          			LCD_distring_ee(ee_model,24,24,0);
   \   000000E2   E040               LDI     R20, 0
   \   000000E4   E138               LDI     R19, 24
   \   000000E6   E128               LDI     R18, 24
   \   000000E8   ....               LDI     R16, LOW(ee_model)
   \   000000EA   ....               LDI     R17, (ee_model) >> 8
   \   000000EC   C057               RJMP    ??input_screen_8
   1267          		break;
   1268          		
   1269          		case INPUT_YEAR:
   1270          			for(i=0;i<2;i++)
   \                     ??input_screen_1:
   \   000000EE   E020               LDI     R18, 0
   \   000000F0   C00C               RJMP    ??input_screen_9
   1271          			{
   1272          				g_year[i] = ee_year[i];
   \                     ??input_screen_10:
   \   000000F2   E030               LDI     R19, 0
   \   000000F4   ....               LDI     R20, LOW(ee_year)
   \   000000F6   ....               LDI     R21, (ee_year) >> 8
   \   000000F8   0F42               ADD     R20, R18
   \   000000FA   1F59               ADC     R21, R25
   \   000000FC   ........           CALL    __eeget8_16
   \   00000100   01F9               MOVW    R31:R30, R19:R18
   \   00000102   ....               SUBI    R30, LOW((-(g_year) & 0xFFFF))
   \   00000104   ....               SBCI    R31, (-(g_year) & 0xFFFF) >> 8
   \   00000106   8300               ST      Z, R16
   1273          			}
   \   00000108   9523               INC     R18
   \                     ??input_screen_9:
   \   0000010A   3022               CPI     R18, 2
   \   0000010C   F390               BRCS    ??input_screen_10
   1274          			LCD_distring_ee(ee_year,24,24,0);
   \   0000010E   E040               LDI     R20, 0
   \   00000110   E138               LDI     R19, 24
   \   00000112   E128               LDI     R18, 24
   \   00000114   ....               LDI     R16, LOW(ee_year)
   \   00000116   ....               LDI     R17, (ee_year) >> 8
   \   00000118   C041               RJMP    ??input_screen_8
   1275          		break;
   1276          		
   1277          		case INPUT_WEEK:
   1278          			for(i=0;i<2;i++)
   \                     ??input_screen_2:
   \   0000011A   E020               LDI     R18, 0
   \   0000011C   C00C               RJMP    ??input_screen_11
   1279          			{
   1280          				g_week[i] = ee_week[i];
   \                     ??input_screen_12:
   \   0000011E   E030               LDI     R19, 0
   \   00000120   ....               LDI     R20, LOW(ee_week)
   \   00000122   ....               LDI     R21, (ee_week) >> 8
   \   00000124   0F42               ADD     R20, R18
   \   00000126   1F59               ADC     R21, R25
   \   00000128   ........           CALL    __eeget8_16
   \   0000012C   01F9               MOVW    R31:R30, R19:R18
   \   0000012E   ....               SUBI    R30, LOW((-(g_week) & 0xFFFF))
   \   00000130   ....               SBCI    R31, (-(g_week) & 0xFFFF) >> 8
   \   00000132   8300               ST      Z, R16
   1281          			}
   \   00000134   9523               INC     R18
   \                     ??input_screen_11:
   \   00000136   3022               CPI     R18, 2
   \   00000138   F390               BRCS    ??input_screen_12
   1282          			LCD_distring_ee(ee_week,24,24,0);
   \   0000013A   E040               LDI     R20, 0
   \   0000013C   E138               LDI     R19, 24
   \   0000013E   E128               LDI     R18, 24
   \   00000140   ....               LDI     R16, LOW(ee_week)
   \   00000142   ....               LDI     R17, (ee_week) >> 8
   \   00000144   C02B               RJMP    ??input_screen_8
   1283          		break;
   1284          		
   1285          		case INPUT_SOFTWARE_VERSION:
   1286          			for(i=0;i<6;i++)
   \                     ??input_screen_3:
   \   00000146   E020               LDI     R18, 0
   \   00000148   C00C               RJMP    ??input_screen_13
   1287          			{
   1288          				g_soft[i] = ee_soft[i];
   \                     ??input_screen_14:
   \   0000014A   E030               LDI     R19, 0
   \   0000014C   ....               LDI     R20, LOW(ee_soft)
   \   0000014E   ....               LDI     R21, (ee_soft) >> 8
   \   00000150   0F42               ADD     R20, R18
   \   00000152   1F59               ADC     R21, R25
   \   00000154   ........           CALL    __eeget8_16
   \   00000158   01F9               MOVW    R31:R30, R19:R18
   \   0000015A   ....               SUBI    R30, LOW((-(g_soft) & 0xFFFF))
   \   0000015C   ....               SBCI    R31, (-(g_soft) & 0xFFFF) >> 8
   \   0000015E   8300               ST      Z, R16
   1289          			}
   \   00000160   9523               INC     R18
   \                     ??input_screen_13:
   \   00000162   3026               CPI     R18, 6
   \   00000164   F390               BRCS    ??input_screen_14
   1290          			LCD_distring_ee(ee_soft,24,24,0);
   \   00000166   E040               LDI     R20, 0
   \   00000168   E138               LDI     R19, 24
   \   0000016A   E128               LDI     R18, 24
   \   0000016C   ....               LDI     R16, LOW(ee_soft)
   \   0000016E   ....               LDI     R17, (ee_soft) >> 8
   \   00000170   C015               RJMP    ??input_screen_8
   1291          		break;
   1292          		
   1293          		case INPUT_HARDWARE_VERSION:
   1294          			for(i=0;i<2;i++)
   \                     ??input_screen_4:
   \   00000172   E020               LDI     R18, 0
   \   00000174   C00C               RJMP    ??input_screen_15
   1295          			{
   1296          				g_hard[i] = ee_hard[i];
   \                     ??input_screen_16:
   \   00000176   E030               LDI     R19, 0
   \   00000178   ....               LDI     R20, LOW(ee_hard)
   \   0000017A   ....               LDI     R21, (ee_hard) >> 8
   \   0000017C   0F42               ADD     R20, R18
   \   0000017E   1F59               ADC     R21, R25
   \   00000180   ........           CALL    __eeget8_16
   \   00000184   01F9               MOVW    R31:R30, R19:R18
   \   00000186   ....               SUBI    R30, LOW((-(g_hard) & 0xFFFF))
   \   00000188   ....               SBCI    R31, (-(g_hard) & 0xFFFF) >> 8
   \   0000018A   8300               ST      Z, R16
   1297          			}
   \   0000018C   9523               INC     R18
   \                     ??input_screen_15:
   \   0000018E   3022               CPI     R18, 2
   \   00000190   F390               BRCS    ??input_screen_16
   1298          			LCD_distring_ee(ee_hard,24,24,0);
   \   00000192   E040               LDI     R20, 0
   \   00000194   E138               LDI     R19, 24
   \   00000196   E128               LDI     R18, 24
   \   00000198   ....               LDI     R16, LOW(ee_hard)
   \   0000019A   ....               LDI     R17, (ee_hard) >> 8
   \                     ??input_screen_8:
   \   0000019C   ........           CALL    LCD_distring_ee
   1299          		break;
   1300          		
   1301          		default:break;
   1302          	}
   1303          	
   1304          	col = 24 + 2 * len;
   \                     ??input_screen_5:
   \   000001A0   9180....           LDS     R24, ??len
   \   000001A4   0F88               LSL     R24
   \   000001A6   5E88               SUBI    R24, 232
   \   000001A8   C006               RJMP    ??input_screen_17
   1305          	
   1306          	while(1)
   1307          	{
   1308          		if(IS_PEN == 0)
   1309          		{
   1310          			TOUCH_getdata();
   1311          			temp_int = get_touch_key();
   1312          			touch_key_blink_01(temp_int,100);
   1313          			
   1314          			if(temp_int <= 9 || temp_int == 16 || temp_int == 17)
   1315          			{
   1316          				if(temp_int <= 9)
   1317          				{
   1318          					if(col >= 24 & col< 24 + 2 * len)
   1319          					{
   1320          						buffer[0] = 48 + temp_int;
   1321          						buffer[1] = 0;
   1322          						LCD_distring(buffer,col,24,0);
   1323          						
   1324          						i = (col - 24) / 2;
   1325          						
   1326          						*(input_result + i) = temp_int + 48;
   1327          						col += 2;
   1328          					}
   1329          				}
   1330          				else if(temp_int == 16)
   1331          				{
   1332          					if(col == 24 + 2 * len)
   1333          					{
   1334          						col = 24;
   1335          						LCD_distring("          ",col,24,0);
   1336          						switch(flag)
   1337          						{
   1338          							case INPUT_MODEL:
   1339          								for(i=0;i<6;i++)
   1340          								{
   1341          									ee_model[i] = g_model[i]; 
   1342          								}
   1343          							break;
   1344          							
   1345          							case INPUT_YEAR:
   1346          								for(i=0;i<2;i++)
   1347          								{
   1348          									ee_year[i] = g_year[i];
   1349          								}
   1350          							break;
   1351          							
   1352          							case INPUT_WEEK:
   1353          								for(i=0;i<2;i++)
   1354          								{
   1355          									ee_week[i] = g_week[i];
   1356          								}
   1357          							break;
   1358          							
   1359          							case INPUT_SOFTWARE_VERSION:
   1360          								for(i=0;i<6;i++)
   1361          								{
   1362          									ee_soft[i] = g_soft[i];
   1363          								}
   1364          							break;
   1365          							
   1366          							case INPUT_HARDWARE_VERSION:
   1367          								for(i=0;i<2;i++)
   1368          								{
   1369          									ee_hard[i] = g_hard[i];
   1370          								}
   1371          							break;
   1372          							
   1373          							default:break;
   1374          						}
   1375          						return 0;
   1376          					}
   1377          				}
   1378          				else if(temp_int == 17)
   1379          				{
   1380          					if(col >24)
   1381          					{
   1382          						LCD_distring(" ",col,24,0);
   1383          						col -= 2;
   1384          					}
   1385          				}
   1386          			}
   1387          		}
   1388          		
   1389          		if(Time_delay.timer_flex2.time_out == 1)
   1390          		{
   1391          			temp = ~temp;
   1392          			timer_flex2_initial(500);
   1393          			if(temp)
   1394          				LCD_distring("_",col,24,0);
   1395          			else
   1396          				LCD_distring(" ",col,24,0);
   \                     ??input_screen_18:
   \   000001AA   ....               LDI     R16, LOW((`?<Constant "0">` + 194))
   \   000001AC   ....               LDI     R17, HIGH((`?<Constant "0">` + 194))
   \                     ??input_screen_19:
   \   000001AE   ........           CALL    LCD_distring
   1397          		}
   1398          		
   1399          		light_adj();
   \                     ??input_screen_20:
   \   000001B2   ........           CALL    light_adj
   \                     ??input_screen_17:
   \   000001B6   994D               SBIC    0x09, 0x05
   \   000001B8   C0C4               RJMP    ??input_screen_21
   \   000001BA   ........           CALL    TOUCH_getdata
   \   000001BE   ........           CALL    get_touch_key
   \   000001C2   2FA0               MOV     R26, R16
   \   000001C4   E0B0               LDI     R27, 0
   \   000001C6   E624               LDI     R18, 100
   \   000001C8   E030               LDI     R19, 0
   \   000001CA   ....               RCALL   touch_key_blink_01
   \   000001CC   30AA               CPI     R26, 10
   \   000001CE   07BB               CPC     R27, R27
   \   000001D0   F038               BRCS    ??input_screen_22
   \   000001D2   31A0               CPI     R26, 16
   \   000001D4   07BB               CPC     R27, R27
   \   000001D6   F021               BREQ    ??input_screen_22
   \   000001D8   31A1               CPI     R26, 17
   \   000001DA   07BB               CPC     R27, R27
   \   000001DC   F009               BREQ    $+2+2
   \   000001DE   C0B1               RJMP    ??input_screen_21
   \                     ??input_screen_22:
   \   000001E0   30AA               CPI     R26, 10
   \   000001E2   07BB               CPC     R27, R27
   \   000001E4   F530               BRCC    ??input_screen_23
   \   000001E6   3188               CPI     R24, 24
   \   000001E8   F408               BRCC    $+2+2
   \   000001EA   C0AB               RJMP    ??input_screen_21
   \   000001EC   2F28               MOV     R18, R24
   \   000001EE   E030               LDI     R19, 0
   \   000001F0   9100....           LDS     R16, ??len
   \   000001F4   E012               LDI     R17, 2
   \   000001F6   9F01               MUL     R16, R17
   \   000001F8   E108               LDI     R16, 24
   \   000001FA   0E00               ADD     R0, R16
   \   000001FC   1E1B               ADC     R1, R27
   \   000001FE   1520               CP      R18, R0
   \   00000200   0531               CPC     R19, R1
   \   00000202   F00C               BRLT    $+2+2
   \   00000204   C09E               RJMP    ??input_screen_21
   \   00000206   5DA0               SUBI    R26, 208
   \   00000208   83A8               ST      Y, R26
   \   0000020A   83B9               STD     Y+1, R27
   \   0000020C   E040               LDI     R20, 0
   \   0000020E   E138               LDI     R19, 24
   \   00000210   018E               MOVW    R17:R16, R29:R28
   \   00000212   ........           CALL    LCD_distring
   \   00000216   2F08               MOV     R16, R24
   \   00000218   E010               LDI     R17, 0
   \   0000021A   5108               SUBI    R16, 24
   \   0000021C   4010               SBCI    R17, 0
   \   0000021E   E042               LDI     R20, 2
   \   00000220   E050               LDI     R21, 0
   \   00000222   ........           CALL    ?SS_DIVMOD_L02
   \   00000226   01F2               MOVW    R31:R30, R5:R4
   \   00000228   0FE0               ADD     R30, R16
   \   0000022A   1FFB               ADC     R31, R27
   \   0000022C   83A0               ST      Z, R26
   \   0000022E   5F8E               SUBI    R24, 254
   \   00000230   C088               RJMP    ??input_screen_21
   \                     ??input_screen_23:
   \   00000232   31A0               CPI     R26, 16
   \   00000234   07BB               CPC     R27, R27
   \   00000236   F009               BREQ    $+2+2
   \   00000238   C077               RJMP    ??input_screen_24
   \   0000023A   2F28               MOV     R18, R24
   \   0000023C   E030               LDI     R19, 0
   \   0000023E   9100....           LDS     R16, ??len
   \   00000242   E012               LDI     R17, 2
   \   00000244   9F01               MUL     R16, R17
   \   00000246   E108               LDI     R16, 24
   \   00000248   0E00               ADD     R0, R16
   \   0000024A   1E1B               ADC     R1, R27
   \   0000024C   1520               CP      R18, R0
   \   0000024E   0531               CPC     R19, R1
   \   00000250   F009               BREQ    $+2+2
   \   00000252   C077               RJMP    ??input_screen_21
   \   00000254   E040               LDI     R20, 0
   \   00000256   E138               LDI     R19, 24
   \   00000258   E128               LDI     R18, 24
   \   0000025A   ....               LDI     R16, LOW((`?<Constant "0">` + 375))
   \   0000025C   ....               LDI     R17, HIGH((`?<Constant "0">` + 375))
   \   0000025E   ........           CALL    LCD_distring
   \   00000262   2D06               MOV     R16, R6
   \   00000264   5000               SUBI    R16, 0
   \   00000266   F051               BREQ    ??input_screen_25
   \   00000268   950A               DEC     R16
   \   0000026A   F0C9               BREQ    ??input_screen_26
   \   0000026C   950A               DEC     R16
   \   0000026E   F139               BREQ    ??input_screen_27
   \   00000270   950A               DEC     R16
   \   00000272   F1A9               BREQ    ??input_screen_28
   \   00000274   950A               DEC     R16
   \   00000276   F409               BRNE    $+2+2
   \   00000278   C042               RJMP    ??input_screen_29
   \   0000027A   C051               RJMP    ??input_screen_30
   \                     ??input_screen_25:
   \   0000027C   E020               LDI     R18, 0
   \                     ??input_screen_31:
   \   0000027E   3026               CPI     R18, 6
   \   00000280   F008               BRCS    $+2+2
   \   00000282   C04D               RJMP    ??input_screen_30
   \   00000284   E030               LDI     R19, 0
   \   00000286   01F9               MOVW    R31:R30, R19:R18
   \   00000288   ....               SUBI    R30, LOW((-(g_model) & 0xFFFF))
   \   0000028A   ....               SBCI    R31, (-(g_model) & 0xFFFF) >> 8
   \   0000028C   8100               LD      R16, Z
   \   0000028E   ....               LDI     R20, LOW(ee_model)
   \   00000290   ....               LDI     R21, (ee_model) >> 8
   \   00000292   0F42               ADD     R20, R18
   \   00000294   1F5B               ADC     R21, R27
   \   00000296   ........           CALL    __eeput8_16
   \   0000029A   9523               INC     R18
   \   0000029C   CFF0               RJMP    ??input_screen_31
   \                     ??input_screen_26:
   \   0000029E   E020               LDI     R18, 0
   \                     ??input_screen_32:
   \   000002A0   3022               CPI     R18, 2
   \   000002A2   F5E8               BRCC    ??input_screen_30
   \   000002A4   E030               LDI     R19, 0
   \   000002A6   01F9               MOVW    R31:R30, R19:R18
   \   000002A8   ....               SUBI    R30, LOW((-(g_year) & 0xFFFF))
   \   000002AA   ....               SBCI    R31, (-(g_year) & 0xFFFF) >> 8
   \   000002AC   8100               LD      R16, Z
   \   000002AE   ....               LDI     R20, LOW(ee_year)
   \   000002B0   ....               LDI     R21, (ee_year) >> 8
   \   000002B2   0F42               ADD     R20, R18
   \   000002B4   1F5B               ADC     R21, R27
   \   000002B6   ........           CALL    __eeput8_16
   \   000002BA   9523               INC     R18
   \   000002BC   CFF1               RJMP    ??input_screen_32
   \                     ??input_screen_27:
   \   000002BE   E020               LDI     R18, 0
   \                     ??input_screen_33:
   \   000002C0   3022               CPI     R18, 2
   \   000002C2   F568               BRCC    ??input_screen_30
   \   000002C4   E030               LDI     R19, 0
   \   000002C6   01F9               MOVW    R31:R30, R19:R18
   \   000002C8   ....               SUBI    R30, LOW((-(g_week) & 0xFFFF))
   \   000002CA   ....               SBCI    R31, (-(g_week) & 0xFFFF) >> 8
   \   000002CC   8100               LD      R16, Z
   \   000002CE   ....               LDI     R20, LOW(ee_week)
   \   000002D0   ....               LDI     R21, (ee_week) >> 8
   \   000002D2   0F42               ADD     R20, R18
   \   000002D4   1F5B               ADC     R21, R27
   \   000002D6   ........           CALL    __eeput8_16
   \   000002DA   9523               INC     R18
   \   000002DC   CFF1               RJMP    ??input_screen_33
   \                     ??input_screen_28:
   \   000002DE   E020               LDI     R18, 0
   \                     ??input_screen_34:
   \   000002E0   3026               CPI     R18, 6
   \   000002E2   F4E8               BRCC    ??input_screen_30
   \   000002E4   E030               LDI     R19, 0
   \   000002E6   01F9               MOVW    R31:R30, R19:R18
   \   000002E8   ....               SUBI    R30, LOW((-(g_soft) & 0xFFFF))
   \   000002EA   ....               SBCI    R31, (-(g_soft) & 0xFFFF) >> 8
   \   000002EC   8100               LD      R16, Z
   \   000002EE   ....               LDI     R20, LOW(ee_soft)
   \   000002F0   ....               LDI     R21, (ee_soft) >> 8
   \   000002F2   0F42               ADD     R20, R18
   \   000002F4   1F5B               ADC     R21, R27
   \   000002F6   ........           CALL    __eeput8_16
   \   000002FA   9523               INC     R18
   \   000002FC   CFF1               RJMP    ??input_screen_34
   \                     ??input_screen_29:
   \   000002FE   E020               LDI     R18, 0
   \   00000300   C00C               RJMP    ??input_screen_35
   \                     ??input_screen_36:
   \   00000302   E030               LDI     R19, 0
   \   00000304   01F9               MOVW    R31:R30, R19:R18
   \   00000306   ....               SUBI    R30, LOW((-(g_hard) & 0xFFFF))
   \   00000308   ....               SBCI    R31, (-(g_hard) & 0xFFFF) >> 8
   \   0000030A   8100               LD      R16, Z
   \   0000030C   ....               LDI     R20, LOW(ee_hard)
   \   0000030E   ....               LDI     R21, (ee_hard) >> 8
   \   00000310   0F42               ADD     R20, R18
   \   00000312   1F5B               ADC     R21, R27
   \   00000314   ........           CALL    __eeput8_16
   \   00000318   9523               INC     R18
   \                     ??input_screen_35:
   \   0000031A   3022               CPI     R18, 2
   \   0000031C   F390               BRCS    ??input_screen_36
   \                     ??input_screen_30:
   \   0000031E   E000               LDI     R16, 0
   \   00000320   9623               ADIW    R29:R28, 3
   \   00000322   E0E7               LDI     R30, 7
   \   00000324   ........           JMP     ?EPILOGUE_B7_L09
   \                     ??input_screen_24:
   \   00000328   31A1               CPI     R26, 17
   \   0000032A   07BB               CPC     R27, R27
   \   0000032C   F451               BRNE    ??input_screen_21
   \   0000032E   3189               CPI     R24, 25
   \   00000330   F040               BRCS    ??input_screen_21
   \   00000332   E040               LDI     R20, 0
   \   00000334   E138               LDI     R19, 24
   \   00000336   2F28               MOV     R18, R24
   \   00000338   ....               LDI     R16, LOW((`?<Constant "0">` + 194))
   \   0000033A   ....               LDI     R17, HIGH((`?<Constant "0">` + 194))
   \   0000033C   ........           CALL    LCD_distring
   \   00000340   5082               SUBI    R24, 2
   \                     ??input_screen_21:
   \   00000342   9100....           LDS     R16, (Time_delay + 212)
   \   00000346   3001               CPI     R16, 1
   \   00000348   F009               BREQ    $+2+2
   \   0000034A   CF33               RJMP    ??input_screen_20
   \   0000034C   9590               COM     R25
   \   0000034E   EF04               LDI     R16, 244
   \   00000350   E011               LDI     R17, 1
   \   00000352   E020               LDI     R18, 0
   \   00000354   E030               LDI     R19, 0
   \   00000356   ........           CALL    timer_flex2_initial
   \   0000035A   2399               TST     R25
   \   0000035C   E040               LDI     R20, 0
   \   0000035E   E138               LDI     R19, 24
   \   00000360   2F28               MOV     R18, R24
   \   00000362   F409               BRNE    $+2+2
   \   00000364   CF22               RJMP    ??input_screen_18
   \   00000366   ....               LDI     R16, LOW((`?<Constant "0">` + 196))
   \   00000368   ....               LDI     R17, HIGH((`?<Constant "0">` + 196))
   \   0000036A   CF21               RJMP    ??input_screen_19
   \   0000036C                      REQUIRE _A_PIND
   1400          	}
   1401          }

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     ??len:
   \   00000000                      DS8 1
   1402          

   \                                 In  segment CODE, align 2, keep-with-next
   1403          unsigned char test_screen(unsigned char *title,unsigned char *input_result)
   \                     test_screen:
   1404          {
   \   00000000   ........           CALL    ?PROLOGUE8_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004   97E7               SBIW    R29:R28, 55
   \   00000006   01D8               MOVW    R27:R26, R17:R16
   \   00000008   0139               MOVW    R7:R6, R19:R18
   1405          	unsigned char temp = 0;
   \   0000000A   E090               LDI     R25, 0
   1406          	unsigned char col = 24;
   \   0000000C   E188               LDI     R24, 24
   1407          	unsigned char buffer[3];
   1408          	unsigned int temp_int;
   1409          	unsigned char buffer_tx[17];
   1410          	unsigned char buffer_tx_short[9];
   1411          	unsigned char model;
   1412          	unsigned char buffer_last_8[9];
   1413          	unsigned char buffer_last_16[17];
   1414          	
   1415          	unsigned char i;
   1416          	static unsigned char len;
   1417          	len = strlen(input_result);
   \   0000000E   0183               MOVW    R17:R16, R7:R6
   \   00000010   ........           CALL    strlen
   \   00000014   9300....           STS     ??len_1, R16
   1418          		
   1419          	LCD_Clr();
   \   00000018   ........           CALL    LCD_Clr
   1420          	LCD_distring(title, 12, 4, 0);
   \   0000001C   E040               LDI     R20, 0
   \   0000001E   E034               LDI     R19, 4
   \   00000020   E02C               LDI     R18, 12
   \   00000022   018D               MOVW    R17:R16, R27:R26
   \   00000024   ........           CALL    LCD_distring
   1421          	LCD_distring("   Input:", 0, 24, 0);
   \   00000028   E040               LDI     R20, 0
   \   0000002A   E138               LDI     R19, 24
   \   0000002C   E020               LDI     R18, 0
   \   0000002E   ....               LDI     R16, LOW((`?<Constant "0">` + 365))
   \   00000030   ....               LDI     R17, HIGH((`?<Constant "0">` + 365))
   \   00000032   ........           CALL    LCD_distring
   1422          	LCD_distring("   Frame:", 0, 36, 0);
   \   00000036   E040               LDI     R20, 0
   \   00000038   E234               LDI     R19, 36
   \   0000003A   E020               LDI     R18, 0
   \   0000003C   ....               LDI     R16, LOW((`?<Constant "0">` + 386))
   \   0000003E   ....               LDI     R17, HIGH((`?<Constant "0">` + 386))
   \   00000040   ........           CALL    LCD_distring
   1423          	//LCD_distring("123456789012345678901234567", 0, 38, 0);
   1424          	LCD_distring("1    2    3     ", 10, 48, 0);
   \   00000044   E040               LDI     R20, 0
   \   00000046   E330               LDI     R19, 48
   \   00000048   E02A               LDI     R18, 10
   \   0000004A   ....               LDI     R16, LOW((`?<Constant "0">` + 69))
   \   0000004C   ....               LDI     R17, HIGH((`?<Constant "0">` + 69))
   \   0000004E   ........           CALL    LCD_distring
   1425          	LCD_distring("4    5    6     ", 10, 72, 0);
   \   00000052   E040               LDI     R20, 0
   \   00000054   E438               LDI     R19, 72
   \   00000056   E02A               LDI     R18, 10
   \   00000058   ....               LDI     R16, LOW((`?<Constant "0">` + 86))
   \   0000005A   ....               LDI     R17, HIGH((`?<Constant "0">` + 86))
   \   0000005C   ........           CALL    LCD_distring
   1426          	LCD_distring("7    8    9     ", 10, 96, 0);
   \   00000060   E040               LDI     R20, 0
   \   00000062   E630               LDI     R19, 96
   \   00000064   E02A               LDI     R18, 10
   \   00000066   ....               LDI     R16, LOW((`?<Constant "0">` + 103))
   \   00000068   ....               LDI     R17, HIGH((`?<Constant "0">` + 103))
   \   0000006A   ........           CALL    LCD_distring
   1427          	LCD_distring("     0          ", 10, 120, 0);
   \   0000006E   E040               LDI     R20, 0
   \   00000070   E738               LDI     R19, 120
   \   00000072   E02A               LDI     R18, 10
   \   00000074   ....               LDI     R16, LOW((`?<Constant "0">` + 120))
   \   00000076   ....               LDI     R17, HIGH((`?<Constant "0">` + 120))
   \   00000078   ........           CALL    LCD_distring
   1428          	LCD_distring("Delete", 2, 140, 0);
   \   0000007C   E040               LDI     R20, 0
   \   0000007E   E83C               LDI     R19, 140
   \   00000080   E022               LDI     R18, 2
   \   00000082   ....               LDI     R16, LOW((`?<Constant "0">` + 40))
   \   00000084   ....               LDI     R17, HIGH((`?<Constant "0">` + 40))
   \   00000086   ........           CALL    LCD_distring
   1429          	//LCD_distring("Again", 10, 140, 0);		//alan		18
   1430          	//LCD_distring("Next", 24, 140, 0);			//alan		19
   1431          	LCD_distring("  PnG ", 36, 140, 0);
   \   0000008A   E040               LDI     R20, 0
   \   0000008C   E83C               LDI     R19, 140
   \   0000008E   E224               LDI     R18, 36
   \   00000090   ....               LDI     R16, LOW((`?<Constant "0">` + 52))
   \   00000092   ....               LDI     R17, HIGH((`?<Constant "0">` + 52))
   \   00000094   ........           CALL    LCD_distring
   1432          	
   1433          	timer_flex2_initial(500);
   \   00000098   EF04               LDI     R16, 244
   \   0000009A   E011               LDI     R17, 1
   \   0000009C   E020               LDI     R18, 0
   \   0000009E   E030               LDI     R19, 0
   \   000000A0   ........           CALL    timer_flex2_initial
   1434          	g_lux[0] = '0';
   \   000000A4   ....               LDI     R30, LOW(g_lux)
   \   000000A6   ....               LDI     R31, (g_lux) >> 8
   \   000000A8   E300               LDI     R16, 48
   \   000000AA   8300               ST      Z, R16
   1435          	g_lux[1] = '0';
   \   000000AC   8301               STD     Z+1, R16
   1436          	g_lux[2] = '0';
   \   000000AE   8302               STD     Z+2, R16
   1437          	g_lux[3] = '0';
   \   000000B0   8303               STD     Z+3, R16
   1438          	g_lux[4] = 0;
   \   000000B2   E000               LDI     R16, 0
   \   000000B4   8394               STD     Z+4, R25
   1439          	
   1440          	for(i=0;i<16;i++)
   \   000000B6   C006               RJMP    ??test_screen_0
   1441          	{
   1442          		buffer_last_16[i] = 0x00;
   \                     ??test_screen_1:
   \   000000B8   01FE               MOVW    R31:R30, R29:R28
   \   000000BA   96B6               ADIW    R31:R30, 38
   \   000000BC   0FE0               ADD     R30, R16
   \   000000BE   1FF9               ADC     R31, R25
   \   000000C0   8390               ST      Z, R25
   1443          	}
   \   000000C2   9503               INC     R16
   \                     ??test_screen_0:
   \   000000C4   3100               CPI     R16, 16
   \   000000C6   F3C0               BRCS    ??test_screen_1
   1444          	
   1445          	for(i=0;i<8;i++)
   \   000000C8   E000               LDI     R16, 0
   \   000000CA   C006               RJMP    ??test_screen_2
   1446          	{
   1447          		buffer_last_8[i] = 0x00;
   \                     ??test_screen_3:
   \   000000CC   01FE               MOVW    R31:R30, R29:R28
   \   000000CE   9633               ADIW    R31:R30, 3
   \   000000D0   0FE0               ADD     R30, R16
   \   000000D2   1FF9               ADC     R31, R25
   \   000000D4   8390               ST      Z, R25
   1448          	}
   \   000000D6   9503               INC     R16
   \                     ??test_screen_2:
   \   000000D8   3008               CPI     R16, 8
   \   000000DA   F3C0               BRCS    ??test_screen_3
   1449          	
   1450          	buffer_tx[16] = 0;
   \   000000DC   A39D               STD     Y+37, R25
   1451          	buffer_last_16[16] = 0;
   \   000000DE   AB9E               STD     Y+54, R25
   1452          	
   1453          	buffer_tx_short[8] = 0;
   \   000000E0   8B9C               STD     Y+20, R25
   1454          	
   1455          	product_information.conf_type = ADVANCED;
   \   000000E2   E002               LDI     R16, 2
   \   000000E4   9300....           STS     product_information, R16
   1456          	led_blinking_disable(0);
   \   000000E8   E000               LDI     R16, 0
   \   000000EA   ........           CALL    led_blinking_disable
   \   000000EE   C008               RJMP    ??test_screen_4
   1457          	
   1458          	while(1)
   1459          	{
   1460          		while(decode_SCS());
   1461          		
   1462          		if(g_asc_short_buffer[2] == 0x12)
   1463          		{
   1464          			if(g_asc_short_buffer[3] == 0x00)
   1465          			{
   1466          				led_blinking_disable(1);
   1467          			}
   1468          			else if(g_asc_short_buffer[3] == 0x01)
   1469          			{
   1470          				led_blinking_disable(0);
   1471          			}
   1472          		}
   1473          		else if(g_asc_short_buffer[2] == 0x1D)
   1474          		{
   1475          			if(g_asc_short_buffer[3] == 0x00)
   1476          			{
   1477          				led_blinking(500,500);
   1478          			}
   1479          		}
   1480          		
   1481          		strncpy(buffer_tx,g_reception_buffer,16);
   1482          
   1483          		strncpy(buffer_tx_short,g_short_buffer,8);
   1484          		
   1485          		if(strcmp(buffer_last_16,buffer_tx))
   1486          		{
   1487          			LCD_distring(buffer_last_16,20,36,0);
   1488          			strncpy(buffer_last_16,buffer_tx,16);
   1489          		}
   1490          		else if(strcmp(buffer_last_8,buffer_tx_short))
   1491          		{
   1492          			LCD_distring(buffer_last_8,20,36,0);
   1493          			LCD_distring("        ",20+16,36,0);
   1494          			strncpy(buffer_last_8,buffer_tx_short,8);
   1495          		}
   1496          		
   1497          		switch(state.main_state)
   1498          		{
   1499          			case AFTER_REQUEST_ID:
   1500          				if(Time_delay.timer_flex.time_out == 0)
   1501          				{
   1502          					if(g_asc_reception_buffer[0] == 0xD0 && g_reception_buffer[7] == '4')
   1503          					{
   1504          						strncpy(buffer_tx,"D000010600000000",17);
   1505          						strncpy(&buffer_tx[8],&g_reception_buffer[8],8);
   1506          						send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY);
   1507          						timer_flex_initial(4000);
   1508          						state.main_state = FINAL_STEP1;
   1509          						asm("nop");
   1510          					}
   1511          				}
   1512          				else
   1513          				{
   1514          					id_setting("FFFFFFFF");
   1515          					send_frame_pp_ext_broad("D000010300000000",TRANS_DELAY);
   1516          					timer_flex_initial(1000);
   1517          					state.main_state = AFTER_REQUEST_ID;
   1518          				}
   1519          			break;
   1520          			
   1521          			case FINAL_STEP1:
   1522          				if(Time_delay.timer_flex.time_out == 0)
   1523          				{
   1524          					if(g_asc_reception_buffer[3] == 0x34 && g_asc_reception_buffer[4] == 0x80)
   1525          					{
   1526          						model = g_asc_reception_buffer[7];
   1527          						state.main_state = FINAL_STEP2;
   1528          					}
   1529          				}
   1530          			break;
   1531          			
   1532          			case FINAL_STEP2:
   1533          				if(Time_delay.timer_flex.time_out == 0)
   1534          				{
   1535          					if(g_asc_reception_buffer[3] == 0x34 && g_asc_reception_buffer[4] == 0x8B)
   1536          					{
   1537          						if(g_asc_reception_buffer[5] == 0x02 && g_asc_reception_buffer[6] == 0x03 && g_asc_reception_buffer[7] == 0x81)
   1538          						{
   1539          							state.main_state = FINAL_STEP3;
   1540          						}
   1541          					}
   1542          				}
   1543          				else if(Time_delay.timer_flex.time_out == 1)
   1544          				{
   1545          					send_frame_pp_ext_broad("D20101428C0000FF",TRANS_DELAY);
   1546          					state.main_state = NORMAL;
   1547          				}
   1548          			break;
   1549          			
   1550          			case FINAL_STEP3:
   1551          				//if(Time_delay.timer_flex.time_out)
   1552          				if((g_asc_reception_buffer[3] == 0x34 && g_asc_reception_buffer[4] == 0x8C && g_asc_reception_buffer[7] == 0xAA) || Time_delay.timer_flex.time_out)
   1553          				{
   1554          					switch(model)
   1555          					{
   1556          						case 0x20:
   1557          						case 0x21:
   1558          						case 0x22:
   1559          						case 0x23:
   1560          						case 0x24:
   1561          						case 0x25:
   1562          						case 0x26:
   1563          						case 0x29:
   1564          						case 0x2A:
   1565          							PnG_048820();
   1566          							state.main_state = FINAL_STEP4;
   1567          						break;
   1568          						default:break;
   1569          					}
   1570          					asm("nop");
   1571          				}
   1572          			break;
   1573          			
   1574          			default:break;
   1575          		}
   1576          		
   1577          		if(IS_PEN == 0)
   1578          		{
   1579          			TOUCH_getdata();
   1580          			temp_int = get_touch_key();
   1581          			touch_key_blink_02(temp_int,100);
   1582          			
   1583          			if(temp_int <= 9 || temp_int == 16 || temp_int == 17)
   1584          			{
   1585          				if(temp_int <= 9)
   1586          				{
   1587          					if(col >= 24 & col< 24 + 2 * len)
   1588          					{
   1589          						buffer[0] = 48 + temp_int;
   1590          						buffer[1] = 0;
   1591          						LCD_distring(buffer,col,24,0);
   1592          						
   1593          						i = (col - 24) / 2;
   1594          						
   1595          						*(input_result + i) = temp_int + 48;
   1596          						col += 2;
   1597          					}
   1598          				}
   1599          				else if(temp_int == 16)
   1600          				{
   1601          					led_blinking_disable(0);
   1602          					
   1603          					if(col == 24 + 2 * len)
   1604          					{
   1605          						//col = 24;
   1606          						//LCD_distring("          ",col,24,0);
   1607          						//return 0;
   1608          						
   1609          						if(g_model[0] == '0' && g_model[1] == '4' && g_model[2] == '8' && g_model[3] == '8')
   1610          						{
   1611          							buffer[0] = g_model[4];
   1612          							buffer[1] = g_model[5];
   1613          							buffer[2] = 0;
   1614          							
   1615          							switch(StrToChar(buffer))
   1616          							{
   1617          								case 0x20:
   1618          								case 0x21:
   1619          								case 0x22:
   1620          								case 0x23:
   1621          								case 0x24:
   1622          								case 0x25:
   1623          								case 0x26:
   1624          								case 0x29:
   1625          								case 0x30:
   1626          									send_frame_pp_ext_broad("D000010300000000",TRANS_DELAY);
   1627          									timer_flex_initial(1000);
   1628          									state.main_state = AFTER_REQUEST_ID;
   1629          								break;
   1630          								default:break;
   1631          							}
   1632          						}
   1633          					}
   1634          				}
   1635          				else if(temp_int == 17)
   1636          				{
   1637          					if(col >24)
   1638          					{
   1639          						LCD_distring(" ",col,24,0);
   1640          						col -= 2;
   1641          					}
   1642          				}
   1643          			}
   1644          		}
   1645          		
   1646          		if(Time_delay.timer_flex2.time_out == 1)
   1647          		{
   1648          			temp = ~temp;
   1649          			timer_flex2_initial(500);
   1650          			if(temp)
   1651          				LCD_distring("_",col,24,0);
   1652          			else
   1653          				LCD_distring(" ",col,24,0);
   \                     ??test_screen_5:
   \   000000F0   ....               LDI     R16, LOW((`?<Constant "0">` + 194))
   \   000000F2   ....               LDI     R17, HIGH((`?<Constant "0">` + 194))
   \                     ??test_screen_6:
   \   000000F4   ........           CALL    LCD_distring
   1654          		}
   1655          		
   1656          		light_adj();
   \                     ??test_screen_7:
   \   000000F8   ........           CALL    light_adj
   1657          		
   1658          		//delay_ms(10);
   1659          		all_reception_buffer_clear();
   \   000000FC   ........           CALL    all_reception_buffer_clear
   \                     ??test_screen_4:
   \   00000100   ........           CALL    decode_SCS
   \   00000104   2300               TST     R16
   \   00000106   F7E1               BRNE    ??test_screen_4
   \   00000108   ....               LDI     R30, LOW(g_asc_short_buffer)
   \   0000010A   ....               LDI     R31, (g_asc_short_buffer) >> 8
   \   0000010C   8102               LDD     R16, Z+2
   \   0000010E   3102               CPI     R16, 18
   \   00000110   F461               BRNE    ??test_screen_8
   \   00000112   8103               LDD     R16, Z+3
   \   00000114   2300               TST     R16
   \   00000116   F421               BRNE    ??test_screen_9
   \   00000118   E001               LDI     R16, 1
   \                     ??test_screen_10:
   \   0000011A   ........           CALL    led_blinking_disable
   \   0000011E   C015               RJMP    ??test_screen_11
   \                     ??test_screen_9:
   \   00000120   8103               LDD     R16, Z+3
   \   00000122   3001               CPI     R16, 1
   \   00000124   F491               BRNE    ??test_screen_11
   \   00000126   E000               LDI     R16, 0
   \   00000128   CFF8               RJMP    ??test_screen_10
   \                     ??test_screen_8:
   \   0000012A   8102               LDD     R16, Z+2
   \   0000012C   310D               CPI     R16, 29
   \   0000012E   F469               BRNE    ??test_screen_11
   \   00000130   8103               LDD     R16, Z+3
   \   00000132   2300               TST     R16
   \   00000134   F451               BRNE    ??test_screen_11
   \   00000136   EF44               LDI     R20, 244
   \   00000138   E051               LDI     R21, 1
   \   0000013A   E060               LDI     R22, 0
   \   0000013C   E070               LDI     R23, 0
   \   0000013E   EF04               LDI     R16, 244
   \   00000140   E011               LDI     R17, 1
   \   00000142   E020               LDI     R18, 0
   \   00000144   E030               LDI     R19, 0
   \   00000146   ........           CALL    led_blinking
   \                     ??test_screen_11:
   \   0000014A   E140               LDI     R20, 16
   \   0000014C   E050               LDI     R21, 0
   \   0000014E   ....               LDI     R18, LOW(g_reception_buffer)
   \   00000150   ....               LDI     R19, (g_reception_buffer) >> 8
   \   00000152   018E               MOVW    R17:R16, R29:R28
   \   00000154   5E0B               SUBI    R16, 235
   \   00000156   4F1F               SBCI    R17, 255
   \   00000158   ........           CALL    strncpy
   \   0000015C   E048               LDI     R20, 8
   \   0000015E   E050               LDI     R21, 0
   \   00000160   ....               LDI     R18, LOW(g_short_buffer)
   \   00000162   ....               LDI     R19, (g_short_buffer) >> 8
   \   00000164   018E               MOVW    R17:R16, R29:R28
   \   00000166   5F04               SUBI    R16, 244
   \   00000168   4F1F               SBCI    R17, 255
   \   0000016A   ........           CALL    strncpy
   \   0000016E   019E               MOVW    R19:R18, R29:R28
   \   00000170   5E2B               SUBI    R18, 235
   \   00000172   4F3F               SBCI    R19, 255
   \   00000174   018E               MOVW    R17:R16, R29:R28
   \   00000176   5D0A               SUBI    R16, 218
   \   00000178   4F1F               SBCI    R17, 255
   \   0000017A   ........           CALL    strcmp
   \   0000017E   2B01               OR      R16, R17
   \   00000180   F081               BREQ    ??test_screen_12
   \   00000182   E040               LDI     R20, 0
   \   00000184   E234               LDI     R19, 36
   \   00000186   E124               LDI     R18, 20
   \   00000188   018E               MOVW    R17:R16, R29:R28
   \   0000018A   5D0A               SUBI    R16, 218
   \   0000018C   4F1F               SBCI    R17, 255
   \   0000018E   ........           CALL    LCD_distring
   \   00000192   E140               LDI     R20, 16
   \   00000194   E050               LDI     R21, 0
   \   00000196   019E               MOVW    R19:R18, R29:R28
   \   00000198   5E2B               SUBI    R18, 235
   \   0000019A   4F3F               SBCI    R19, 255
   \   0000019C   018E               MOVW    R17:R16, R29:R28
   \   0000019E   5D0A               SUBI    R16, 218
   \   000001A0   C020               RJMP    ??test_screen_13
   \                     ??test_screen_12:
   \   000001A2   019E               MOVW    R19:R18, R29:R28
   \   000001A4   5F24               SUBI    R18, 244
   \   000001A6   4F3F               SBCI    R19, 255
   \   000001A8   018E               MOVW    R17:R16, R29:R28
   \   000001AA   5F0D               SUBI    R16, 253
   \   000001AC   4F1F               SBCI    R17, 255
   \   000001AE   ........           CALL    strcmp
   \   000001B2   2B01               OR      R16, R17
   \   000001B4   F0C9               BREQ    ??test_screen_14
   \   000001B6   E040               LDI     R20, 0
   \   000001B8   E234               LDI     R19, 36
   \   000001BA   E124               LDI     R18, 20
   \   000001BC   018E               MOVW    R17:R16, R29:R28
   \   000001BE   5F0D               SUBI    R16, 253
   \   000001C0   4F1F               SBCI    R17, 255
   \   000001C2   ........           CALL    LCD_distring
   \   000001C6   E040               LDI     R20, 0
   \   000001C8   E234               LDI     R19, 36
   \   000001CA   E224               LDI     R18, 36
   \   000001CC   ....               LDI     R16, LOW((`?<Constant "0">` + 396))
   \   000001CE   ....               LDI     R17, HIGH((`?<Constant "0">` + 396))
   \   000001D0   ........           CALL    LCD_distring
   \   000001D4   E048               LDI     R20, 8
   \   000001D6   E050               LDI     R21, 0
   \   000001D8   019E               MOVW    R19:R18, R29:R28
   \   000001DA   5F24               SUBI    R18, 244
   \   000001DC   4F3F               SBCI    R19, 255
   \   000001DE   018E               MOVW    R17:R16, R29:R28
   \   000001E0   5F0D               SUBI    R16, 253
   \                     ??test_screen_13:
   \   000001E2   4F1F               SBCI    R17, 255
   \   000001E4   ........           CALL    strncpy
   \                     ??test_screen_14:
   \   000001E8   9100....           LDS     R16, (state + 2)
   \   000001EC   9110....           LDS     R17, (state + 3)
   \   000001F0   ....               LDI     R30, LOW(`?<Jumptable for test_screen>_0`)
   \   000001F2   ....               LDI     R31, (`?<Jumptable for test_screen>_0`) >> 8
   \   000001F4   ........           JMP     ?SV_SWITCH_L06
   \                     ??test_screen_15:
   \   000001F8   9100....           LDS     R16, (Time_delay + 157)
   \   000001FC   2300               TST     R16
   \   000001FE   F589               BRNE    ??test_screen_16
   \   00000200   9100....           LDS     R16, g_asc_reception_buffer
   \   00000204   3D00               CPI     R16, 208
   \   00000206   F009               BREQ    $+2+2
   \   00000208   C09B               RJMP    ??test_screen_17
   \   0000020A   9100....           LDS     R16, (g_reception_buffer + 7)
   \   0000020E   3304               CPI     R16, 52
   \   00000210   F009               BREQ    $+2+2
   \   00000212   C096               RJMP    ??test_screen_17
   \   00000214   E141               LDI     R20, 17
   \   00000216   E050               LDI     R21, 0
   \   00000218   ....               LDI     R18, LOW((`?<Constant "0">` + 405))
   \   0000021A   ....               LDI     R19, HIGH((`?<Constant "0">` + 405))
   \   0000021C   018E               MOVW    R17:R16, R29:R28
   \   0000021E   5E0B               SUBI    R16, 235
   \   00000220   4F1F               SBCI    R17, 255
   \   00000222   ........           CALL    strncpy
   \   00000226   E048               LDI     R20, 8
   \   00000228   E050               LDI     R21, 0
   \   0000022A   ....               LDI     R18, LOW((g_reception_buffer + 8))
   \   0000022C   ....               LDI     R19, HIGH((g_reception_buffer + 8))
   \   0000022E   018E               MOVW    R17:R16, R29:R28
   \   00000230   5E03               SUBI    R16, 227
   \   00000232   4F1F               SBCI    R17, 255
   \   00000234   ........           CALL    strncpy
   \   00000238   E322               LDI     R18, 50
   \   0000023A   E030               LDI     R19, 0
   \   0000023C   018E               MOVW    R17:R16, R29:R28
   \   0000023E   5E0B               SUBI    R16, 235
   \   00000240   4F1F               SBCI    R17, 255
   \   00000242   ........           CALL    send_frame_pp_ext_broad
   \   00000246   EA00               LDI     R16, 160
   \   00000248   E01F               LDI     R17, 15
   \   0000024A   E020               LDI     R18, 0
   \   0000024C   E030               LDI     R19, 0
   \   0000024E   ........           CALL    timer_flex_initial
   \   00000252   E408               LDI     R16, 72
   \   00000254   E910               LDI     R17, 144
   \   00000256   9300....           STS     (state + 2), R16
   \   0000025A   9310....           STS     (state + 3), R17
   \   0000025E   0000               nop
   \   00000260   C06F               RJMP    ??test_screen_17
   \                     ??test_screen_16:
   \   00000262   ....               LDI     R16, LOW((`?<Constant "0">` + 422))
   \   00000264   ....               LDI     R17, HIGH((`?<Constant "0">` + 422))
   \   00000266   ........           CALL    id_setting
   \   0000026A   E322               LDI     R18, 50
   \   0000026C   E030               LDI     R19, 0
   \   0000026E   ....               LDI     R16, LOW((`?<Constant "0">` + 431))
   \   00000270   ....               LDI     R17, HIGH((`?<Constant "0">` + 431))
   \   00000272   ........           CALL    send_frame_pp_ext_broad
   \   00000276   EE08               LDI     R16, 232
   \   00000278   E013               LDI     R17, 3
   \   0000027A   E020               LDI     R18, 0
   \   0000027C   E030               LDI     R19, 0
   \   0000027E   ........           CALL    timer_flex_initial
   \   00000282   E407               LDI     R16, 71
   \                     ??test_screen_18:
   \   00000284   E910               LDI     R17, 144
   \   00000286   9300....           STS     (state + 2), R16
   \   0000028A   9310....           STS     (state + 3), R17
   \   0000028E   C058               RJMP    ??test_screen_17
   \                     ??test_screen_19:
   \   00000290   9100....           LDS     R16, (Time_delay + 157)
   \   00000294   2300               TST     R16
   \   00000296   F009               BREQ    $+2+2
   \   00000298   C053               RJMP    ??test_screen_17
   \   0000029A   ....               LDI     R30, LOW(g_asc_reception_buffer)
   \   0000029C   ....               LDI     R31, (g_asc_reception_buffer) >> 8
   \   0000029E   8103               LDD     R16, Z+3
   \   000002A0   3304               CPI     R16, 52
   \   000002A2   F009               BREQ    $+2+2
   \   000002A4   C04D               RJMP    ??test_screen_17
   \   000002A6   8104               LDD     R16, Z+4
   \   000002A8   3800               CPI     R16, 128
   \   000002AA   F009               BREQ    $+2+2
   \   000002AC   C049               RJMP    ??test_screen_17
   \   000002AE   8047               LDD     R4, Z+7
   \   000002B0   E409               LDI     R16, 73
   \   000002B2   CFE8               RJMP    ??test_screen_18
   \                     ??test_screen_20:
   \   000002B4   9100....           LDS     R16, (Time_delay + 157)
   \   000002B8   2300               TST     R16
   \   000002BA   F499               BRNE    ??test_screen_21
   \   000002BC   ....               LDI     R30, LOW(g_asc_reception_buffer)
   \   000002BE   ....               LDI     R31, (g_asc_reception_buffer) >> 8
   \   000002C0   8103               LDD     R16, Z+3
   \   000002C2   3304               CPI     R16, 52
   \   000002C4   F5E9               BRNE    ??test_screen_17
   \   000002C6   8104               LDD     R16, Z+4
   \   000002C8   380B               CPI     R16, 139
   \   000002CA   F5D1               BRNE    ??test_screen_17
   \   000002CC   8105               LDD     R16, Z+5
   \   000002CE   3002               CPI     R16, 2
   \   000002D0   F5B9               BRNE    ??test_screen_17
   \   000002D2   8106               LDD     R16, Z+6
   \   000002D4   3003               CPI     R16, 3
   \   000002D6   F5A1               BRNE    ??test_screen_17
   \   000002D8   8107               LDD     R16, Z+7
   \   000002DA   3801               CPI     R16, 129
   \   000002DC   F589               BRNE    ??test_screen_17
   \   000002DE   E40A               LDI     R16, 74
   \   000002E0   CFD1               RJMP    ??test_screen_18
   \                     ??test_screen_21:
   \   000002E2   9100....           LDS     R16, (Time_delay + 157)
   \   000002E6   3001               CPI     R16, 1
   \   000002E8   F559               BRNE    ??test_screen_17
   \   000002EA   E322               LDI     R18, 50
   \   000002EC   E030               LDI     R19, 0
   \   000002EE   ....               LDI     R16, LOW((`?<Constant "0">` + 448))
   \   000002F0   ....               LDI     R17, HIGH((`?<Constant "0">` + 448))
   \   000002F2   ........           CALL    send_frame_pp_ext_broad
   \   000002F6   E000               LDI     R16, 0
   \   000002F8   9300....           STS     (state + 2), R16
   \   000002FC   9300....           STS     (state + 3), R16
   \   00000300   C01F               RJMP    ??test_screen_17
   \                     ??test_screen_22:
   \   00000302   ....               LDI     R30, LOW(g_asc_reception_buffer)
   \   00000304   ....               LDI     R31, (g_asc_reception_buffer) >> 8
   \   00000306   8103               LDD     R16, Z+3
   \   00000308   3304               CPI     R16, 52
   \   0000030A   F431               BRNE    ??test_screen_23
   \   0000030C   8104               LDD     R16, Z+4
   \   0000030E   380C               CPI     R16, 140
   \   00000310   F419               BRNE    ??test_screen_23
   \   00000312   8107               LDD     R16, Z+7
   \   00000314   3A0A               CPI     R16, 170
   \   00000316   F021               BREQ    ??test_screen_24
   \                     ??test_screen_23:
   \   00000318   9100....           LDS     R16, (Time_delay + 157)
   \   0000031C   2300               TST     R16
   \   0000031E   F081               BREQ    ??test_screen_17
   \                     ??test_screen_24:
   \   00000320   2D04               MOV     R16, R4
   \   00000322   5200               SUBI    R16, 32
   \   00000324   5007               SUBI    R16, 7
   \   00000326   F020               BRCS    ??test_screen_25
   \   00000328   5002               SUBI    R16, 2
   \   0000032A   F011               BREQ    ??test_screen_25
   \   0000032C   950A               DEC     R16
   \   0000032E   F439               BRNE    ??test_screen_26
   \                     ??test_screen_25:
   \   00000330   ....               RCALL   PnG_048820
   \   00000332   E40B               LDI     R16, 75
   \   00000334   E910               LDI     R17, 144
   \   00000336   9300....           STS     (state + 2), R16
   \   0000033A   9310....           STS     (state + 3), R17
   \                     ??test_screen_26:
   \   0000033E   0000               nop
   \                     ??test_screen_17:
   \   00000340   994D               SBIC    0x09, 0x05
   \   00000342   C08C               RJMP    ??test_screen_27
   \   00000344   ........           CALL    TOUCH_getdata
   \   00000348   ........           CALL    get_touch_key
   \   0000034C   2FA0               MOV     R26, R16
   \   0000034E   E0B0               LDI     R27, 0
   \   00000350   E624               LDI     R18, 100
   \   00000352   E030               LDI     R19, 0
   \   00000354   ........           CALL    touch_key_blink_02
   \   00000358   30AA               CPI     R26, 10
   \   0000035A   E000               LDI     R16, 0
   \   0000035C   07B0               CPC     R27, R16
   \   0000035E   F038               BRCS    ??test_screen_28
   \   00000360   31A0               CPI     R26, 16
   \   00000362   07B0               CPC     R27, R16
   \   00000364   F021               BREQ    ??test_screen_28
   \   00000366   31A1               CPI     R26, 17
   \   00000368   07B0               CPC     R27, R16
   \   0000036A   F009               BREQ    $+2+2
   \   0000036C   C077               RJMP    ??test_screen_27
   \                     ??test_screen_28:
   \   0000036E   30AA               CPI     R26, 10
   \   00000370   07B0               CPC     R27, R16
   \   00000372   F530               BRCC    ??test_screen_29
   \   00000374   3188               CPI     R24, 24
   \   00000376   F408               BRCC    $+2+2
   \   00000378   C071               RJMP    ??test_screen_27
   \   0000037A   2F28               MOV     R18, R24
   \   0000037C   E030               LDI     R19, 0
   \   0000037E   9100....           LDS     R16, ??len_1
   \   00000382   E012               LDI     R17, 2
   \   00000384   9F01               MUL     R16, R17
   \   00000386   E108               LDI     R16, 24
   \   00000388   0E00               ADD     R0, R16
   \   0000038A   1E1B               ADC     R1, R27
   \   0000038C   1520               CP      R18, R0
   \   0000038E   0531               CPC     R19, R1
   \   00000390   F00C               BRLT    $+2+2
   \   00000392   C064               RJMP    ??test_screen_27
   \   00000394   5DA0               SUBI    R26, 208
   \   00000396   83A8               ST      Y, R26
   \   00000398   83B9               STD     Y+1, R27
   \   0000039A   E040               LDI     R20, 0
   \   0000039C   E138               LDI     R19, 24
   \   0000039E   018E               MOVW    R17:R16, R29:R28
   \   000003A0   ........           CALL    LCD_distring
   \   000003A4   2F08               MOV     R16, R24
   \   000003A6   E010               LDI     R17, 0
   \   000003A8   5108               SUBI    R16, 24
   \   000003AA   4010               SBCI    R17, 0
   \   000003AC   E042               LDI     R20, 2
   \   000003AE   E050               LDI     R21, 0
   \   000003B0   ........           CALL    ?SS_DIVMOD_L02
   \   000003B4   01F3               MOVW    R31:R30, R7:R6
   \   000003B6   0FE0               ADD     R30, R16
   \   000003B8   1FFB               ADC     R31, R27
   \   000003BA   83A0               ST      Z, R26
   \   000003BC   5F8E               SUBI    R24, 254
   \   000003BE   C04E               RJMP    ??test_screen_27
   \                     ??test_screen_29:
   \   000003C0   31A0               CPI     R26, 16
   \   000003C2   07B0               CPC     R27, R16
   \   000003C4   F5F1               BRNE    ??test_screen_30
   \   000003C6   ........           CALL    led_blinking_disable
   \   000003CA   2F28               MOV     R18, R24
   \   000003CC   E030               LDI     R19, 0
   \   000003CE   9100....           LDS     R16, ??len_1
   \   000003D2   E012               LDI     R17, 2
   \   000003D4   9F01               MUL     R16, R17
   \   000003D6   E108               LDI     R16, 24
   \   000003D8   0E00               ADD     R0, R16
   \   000003DA   1E1B               ADC     R1, R27
   \   000003DC   1520               CP      R18, R0
   \   000003DE   0531               CPC     R19, R1
   \   000003E0   F5E9               BRNE    ??test_screen_27
   \   000003E2   ....               LDI     R30, LOW(g_model)
   \   000003E4   ....               LDI     R31, (g_model) >> 8
   \   000003E6   8100               LD      R16, Z
   \   000003E8   3300               CPI     R16, 48
   \   000003EA   F5C1               BRNE    ??test_screen_27
   \   000003EC   8101               LDD     R16, Z+1
   \   000003EE   3304               CPI     R16, 52
   \   000003F0   F5A9               BRNE    ??test_screen_27
   \   000003F2   8102               LDD     R16, Z+2
   \   000003F4   3308               CPI     R16, 56
   \   000003F6   F591               BRNE    ??test_screen_27
   \   000003F8   8103               LDD     R16, Z+3
   \   000003FA   3308               CPI     R16, 56
   \   000003FC   F579               BRNE    ??test_screen_27
   \   000003FE   8104               LDD     R16, Z+4
   \   00000400   8308               ST      Y, R16
   \   00000402   8105               LDD     R16, Z+5
   \   00000404   8309               STD     Y+1, R16
   \   00000406   83BA               STD     Y+2, R27
   \   00000408   018E               MOVW    R17:R16, R29:R28
   \   0000040A   ........           CALL    StrToChar
   \   0000040E   5200               SUBI    R16, 32
   \   00000410   5007               SUBI    R16, 7
   \   00000412   F020               BRCS    ??test_screen_31
   \   00000414   5002               SUBI    R16, 2
   \   00000416   F011               BREQ    ??test_screen_31
   \   00000418   5007               SUBI    R16, 7
   \   0000041A   F501               BRNE    ??test_screen_27
   \                     ??test_screen_31:
   \   0000041C   E322               LDI     R18, 50
   \   0000041E   E030               LDI     R19, 0
   \   00000420   ....               LDI     R16, LOW((`?<Constant "0">` + 431))
   \   00000422   ....               LDI     R17, HIGH((`?<Constant "0">` + 431))
   \   00000424   ........           CALL    send_frame_pp_ext_broad
   \   00000428   EE08               LDI     R16, 232
   \   0000042A   E013               LDI     R17, 3
   \   0000042C   E020               LDI     R18, 0
   \   0000042E   E030               LDI     R19, 0
   \   00000430   ........           CALL    timer_flex_initial
   \   00000434   E407               LDI     R16, 71
   \   00000436   E910               LDI     R17, 144
   \   00000438   9300....           STS     (state + 2), R16
   \   0000043C   9310....           STS     (state + 3), R17
   \   00000440   C00D               RJMP    ??test_screen_27
   \                     ??test_screen_30:
   \   00000442   31A1               CPI     R26, 17
   \   00000444   07BB               CPC     R27, R27
   \   00000446   F451               BRNE    ??test_screen_27
   \   00000448   3189               CPI     R24, 25
   \   0000044A   F040               BRCS    ??test_screen_27
   \   0000044C   E040               LDI     R20, 0
   \   0000044E   E138               LDI     R19, 24
   \   00000450   2F28               MOV     R18, R24
   \   00000452   ....               LDI     R16, LOW((`?<Constant "0">` + 194))
   \   00000454   ....               LDI     R17, HIGH((`?<Constant "0">` + 194))
   \   00000456   ........           CALL    LCD_distring
   \   0000045A   5082               SUBI    R24, 2
   \                     ??test_screen_27:
   \   0000045C   9100....           LDS     R16, (Time_delay + 212)
   \   00000460   3001               CPI     R16, 1
   \   00000462   F009               BREQ    $+2+2
   \   00000464   CE49               RJMP    ??test_screen_7
   \   00000466   9590               COM     R25
   \   00000468   EF04               LDI     R16, 244
   \   0000046A   E011               LDI     R17, 1
   \   0000046C   E020               LDI     R18, 0
   \   0000046E   E030               LDI     R19, 0
   \   00000470   ........           CALL    timer_flex2_initial
   \   00000474   2399               TST     R25
   \   00000476   E040               LDI     R20, 0
   \   00000478   E138               LDI     R19, 24
   \   0000047A   2F28               MOV     R18, R24
   \   0000047C   F409               BRNE    $+2+2
   \   0000047E   CE38               RJMP    ??test_screen_5
   \   00000480   ....               LDI     R16, LOW((`?<Constant "0">` + 196))
   \   00000482   ....               LDI     R17, HIGH((`?<Constant "0">` + 196))
   \   00000484   CE37               RJMP    ??test_screen_6
   \   00000486                      REQUIRE _A_PIND
   1660          	}
   1661          }

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     ??len_1:
   \   00000000                      DS8 1
   1662          

   \                                 In  segment CODE, align 2, keep-with-next
   1663          void PnG_048820(void)
   \                     PnG_048820:
   1664          {
   1665          	send_frame_pp_ext_broad("D20101428B00A801",TRANS_DELAY +50);
   \   00000000   E624               LDI     R18, 100
   \   00000002   E030               LDI     R19, 0
   \   00000004   ....               LDI     R16, LOW((`?<Constant "0">` + 465))
   \   00000006   ....               LDI     R17, HIGH((`?<Constant "0">` + 465))
   \   00000008   ........           CALL    send_frame_pp_ext_broad
   1666          	//send_frame_pp_ext_broad("D20101428D020101",TRANS_DELAY);
   1667          	setting_parameter(0x02,0x01);
   \   0000000C   E011               LDI     R17, 1
   \   0000000E   E002               LDI     R16, 2
   \   00000010   ....               RCALL   setting_parameter
   1668          	//send_frame_pp_ext_broad("D20101428D020501",TRANS_DELAY);
   1669          	setting_parameter(0x02,0x05);
   \   00000012   E015               LDI     R17, 5
   \   00000014   E002               LDI     R16, 2
   \   00000016   ....               RCALL   setting_parameter
   1670          	//send_frame_pp_ext_broad("D20101428D020601",TRANS_DELAY);
   1671          	setting_parameter(0x02,0x06);
   \   00000018   E016               LDI     R17, 6
   \   0000001A   E002               LDI     R16, 2
   \   0000001C   ....               RCALL   setting_parameter
   1672          	//send_frame_pp_ext_broad("D20101428D000701",TRANS_DELAY);
   1673          	setting_parameter(0x00,0x07);
   \   0000001E   E017               LDI     R17, 7
   \   00000020   E000               LDI     R16, 0
   \   00000022   ....               RCALL   setting_parameter
   1674          	//send_frame_pp_ext_broad("D20101428D000801",TRANS_DELAY);
   1675          	setting_parameter(0x00,0x08);
   \   00000024   E018               LDI     R17, 8
   \   00000026   E000               LDI     R16, 0
   \   00000028   ....               RCALL   setting_parameter
   1676          	//send_frame_pp_ext_broad("D20101428D010D01",TRANS_DELAY);
   1677          	setting_parameter(0x01,0x0D);
   \   0000002A   E01D               LDI     R17, 13
   \   0000002C   E001               LDI     R16, 1
   \   0000002E   ....               RCALL   setting_parameter
   1678          	//send_frame_pp_ext_broad("D20101428D010E01",TRANS_DELAY);
   1679          	setting_parameter(0x01,0x0E);
   \   00000030   E01E               LDI     R17, 14
   \   00000032   E001               LDI     R16, 1
   \   00000034   ....               RCALL   setting_parameter
   1680          	//send_frame_pp_ext_broad("D20101428D011C01",TRANS_DELAY);
   1681          	setting_parameter(0x01,0x1C);
   \   00000036   E11C               LDI     R17, 28
   \   00000038   E001               LDI     R16, 1
   \   0000003A   ....               RCALL   setting_parameter
   1682          	//send_frame_pp_ext_broad("D20101428D021D01",TRANS_DELAY);
   1683          	setting_parameter(0x02,0x1D);
   \   0000003C   E11D               LDI     R17, 29
   \   0000003E   E002               LDI     R16, 2
   \   00000040   ....               RCALL   setting_parameter
   1684          	send_frame_pp_ext_broad("D20101428C0000AA",TRANS_DELAY + 50);
   \   00000042   E624               LDI     R18, 100
   \   00000044   E030               LDI     R19, 0
   \   00000046   ....               LDI     R16, LOW((`?<Constant "0">` + 482))
   \   00000048   ....               LDI     R17, HIGH((`?<Constant "0">` + 482))
   \   0000004A   ........           CALL    send_frame_pp_ext_broad
   1685          	send_frame_pp_ext_broad("D20101428C0000FF",TRANS_DELAY);
   \   0000004E   E322               LDI     R18, 50
   \   00000050   E030               LDI     R19, 0
   \   00000052   ....               LDI     R16, LOW((`?<Constant "0">` + 448))
   \   00000054   ....               LDI     R17, HIGH((`?<Constant "0">` + 448))
   \   00000056   ........           CALL    send_frame_pp_ext_broad
   1686          }
   \   0000005A   9508               RET
   1687          

   \                                 In  segment CODE, align 2, keep-with-next
   1688          void setting_parameter(unsigned char value, unsigned char index)
   \                     setting_parameter:
   1689          {
   \   00000000   938A               ST      -Y, R24
   \   00000002   9764               SBIW    R29:R28, 20
   \   00000004   2F81               MOV     R24, R17
   1690          	unsigned char buffer[3];
   1691          	unsigned char buffer_tx[17];
   1692          	//CharToStr(KO_conf.PirSens,buffer);
   1693          	CharToStr(value,buffer);
   \   00000006   019E               MOVW    R19:R18, R29:R28
   \   00000008   ........           CALL    CharToStr
   1694          	strncpy(buffer_tx,"D20101428D020101",17);
   \   0000000C   E141               LDI     R20, 17
   \   0000000E   E050               LDI     R21, 0
   \   00000010   ....               LDI     R18, LOW(`?<Constant "D20101428D020101">`)
   \   00000012   ....               LDI     R19, (`?<Constant "D20101428D020101">`) >> 8
   \   00000014   018E               MOVW    R17:R16, R29:R28
   \   00000016   5F0D               SUBI    R16, 253
   \   00000018   4F1F               SBCI    R17, 255
   \   0000001A   ........           CALL    strncpy
   1695          	buffer_tx[10] = buffer[0];
   \   0000001E   8108               LD      R16, Y
   \   00000020   870D               STD     Y+13, R16
   1696          	buffer_tx[11] = buffer[1];
   \   00000022   8109               LDD     R16, Y+1
   \   00000024   870E               STD     Y+14, R16
   1697          	CharToStr(index,buffer);
   \   00000026   019E               MOVW    R19:R18, R29:R28
   \   00000028   2F08               MOV     R16, R24
   \   0000002A   ........           CALL    CharToStr
   1698          	buffer_tx[12] = buffer[0];
   \   0000002E   8108               LD      R16, Y
   \   00000030   870F               STD     Y+15, R16
   1699          	buffer_tx[13] = buffer[1];
   \   00000032   8109               LDD     R16, Y+1
   \   00000034   8B08               STD     Y+16, R16
   1700          	send_frame_pp_ext_broad(buffer_tx,TRANS_DELAY + 50);
   \   00000036   E624               LDI     R18, 100
   \   00000038   E030               LDI     R19, 0
   \   0000003A   018E               MOVW    R17:R16, R29:R28
   \   0000003C   5F0D               SUBI    R16, 253
   \   0000003E   4F1F               SBCI    R17, 255
   \   00000040   ........           CALL    send_frame_pp_ext_broad
   1701          }
   \   00000044   9664               ADIW    R29:R28, 20
   \   00000046   9189               LD      R24, Y+
   \   00000048   9508               RET
   1702          /*
   1703          void print_label(unsigned char *id,unsigned char *model, unsigned char *date, unsigned char *fireware_version, unsigned char *hardware_version)
   1704          {
   1705          	print_out("^XA~TA0~JSO^LT0^MMT^MNW^MTT^PON^PMN^LH0,0^JMA^PR2,2^MD30^JUS^LRN^CI0^XZ~DG001.GRF,00512,008,::::::::::::::::::::N020,N060,N0E0,M03B0,M0A28,J07FFC18,I0EA8A808,H01C0I01C,H0280J0A,H0601C007C,H0E2EA8AE8,018F071F,03B80BA8,03E00F,0A8008,07,0A,04,H8,,:::::::::::::::::::::::^XA^LL0120^PW296^BY32,32^FT247,54^BXN,2,200,0,0,1");
   1706          	//modle & ID
   1707          	print_out("^FH\\^FD048822 ID:00050162^FS"); 
   1708          	print_out("^FO,31^FS");
   1709          	print_out("^FT160,98^A0N,25,24^FH\\^FDID:00050162^FS");
   1710          	print_out("^BY43,44^FT43,100^BXB,2,200,0,0,1");
   1711          	print_out("^FH\\^FD048822 09W28 007 01 010000 ID:00050162^FS");
   1712          	print_out("^FO,22^FS");
   1713          	print_out("^FT124,100^A0B,18,16^FH\\^FDID:00050162^FS");
   1714          	print_out("^FT160,64^XG001.GRF,1,1^FS");
   1715          	print_out("^FO,26^FS");
   1716          	print_out("^FT160,66^A0N,21,21^FH\\^FD048822^FS");
   1717          	print_out("^FO,22^FS");
   1718          	print_out("^FT101,100^A0B,18,16^FH\\^FD01 010000^FS");
   1719          	print_out("^FO,22^FS");
   1720          	print_out("^FT59,100^A0B,18,16^FH\\^FD048822^FS");
   1721          	print_out("^FO,22^FS");
   1722          	print_out("^FT79,100^A0B,18,16^FH\\^FD09W28 007^FS");
   1723          	print_out("^PQ1,0,1,Y^XZ");
   1724          	print_out("^XA^ID000.GRF^FS^XZ");
   1725          }
   1726          */
   1727          

   \                                 In  segment CODE, align 2, keep-with-next
   1728          unsigned char write_flash(unsigned char page, struct S_sensor_info sensor)
   \                     write_flash:
   1729          {
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   1730          	unsigned int i = 0;
   \   00000004   E080               LDI     R24, 0
   \   00000006   E090               LDI     R25, 0
   1731          		
   1732          	do
   1733          	{
   1734          		Buffer_Write_Byte(1,g_dataflash_page_address,sensor.date[i]);
   \                     ??write_flash_0:
   \   00000008   01FE               MOVW    R31:R30, R29:R28
   \   0000000A   9632               ADIW    R31:R30, 2
   \   0000000C   0FE8               ADD     R30, R24
   \   0000000E   1FF9               ADC     R31, R25
   \   00000010   8110               LD      R17, Z
   \   00000012   9120....           LDS     R18, g_dataflash_page_address
   \   00000016   9130....           LDS     R19, (g_dataflash_page_address + 1)
   \   0000001A   E001               LDI     R16, 1
   \   0000001C   ........           CALL    Buffer_Write_Byte
   1735          		i++;
   \   00000020   9601               ADIW    R25:R24, 1
   1736          		g_dataflash_page_address++;
   \   00000022   ....               LDI     R30, LOW(g_dataflash_page_address)
   \   00000024   ....               LDI     R31, (g_dataflash_page_address) >> 8
   \   00000026   8100               LD      R16, Z
   \   00000028   8111               LDD     R17, Z+1
   \   0000002A   5F0F               SUBI    R16, 255
   \   0000002C   4F1F               SBCI    R17, 255
   \   0000002E   8300               ST      Z, R16
   \   00000030   8311               STD     Z+1, R17
   1737          	}while(i < STRUCT_SENSOR_LENGTH_BYTE);
   \   00000032   3286               CPI     R24, 38
   \   00000034   E000               LDI     R16, 0
   \   00000036   0790               CPC     R25, R16
   \   00000038   F338               BRCS    ??write_flash_0
   1738          	
   1739          	if(g_dataflash_page_address >= STRUCT_SENSOR_LENGTH_BYTE * 6)
   \   0000003A   9100....           LDS     R16, g_dataflash_page_address
   \   0000003E   9110....           LDS     R17, (g_dataflash_page_address + 1)
   \   00000042   3E04               CPI     R16, 228
   \   00000044   E020               LDI     R18, 0
   \   00000046   0712               CPC     R17, R18
   \   00000048   F070               BRCS    ??write_flash_1
   1740          	{
   1741          		ee_page++;
   \   0000004A   ....               LDI     R20, LOW(ee_page)
   \   0000004C   ....               LDI     R21, (ee_page) >> 8
   \   0000004E   ........           CALL    __eeget16_16
   \   00000052   5F0F               SUBI    R16, 255
   \   00000054   4F1F               SBCI    R17, 255
   \   00000056   ....               LDI     R20, LOW(ee_page)
   \   00000058   ....               LDI     R21, (ee_page) >> 8
   \   0000005A   ........           CALL    __eeput16_16
   1742          		g_dataflash_page_address = 0;
   \   0000005E   9320....           STS     g_dataflash_page_address, R18
   \   00000062   9320....           STS     (g_dataflash_page_address + 1), R18
   1743          	}
   1744          	
   1745          	ee_page_address = g_dataflash_page_address;
   \                     ??write_flash_1:
   \   00000066   9100....           LDS     R16, g_dataflash_page_address
   \   0000006A   9110....           LDS     R17, (g_dataflash_page_address + 1)
   \   0000006E   ....               LDI     R20, LOW(ee_page_address)
   \   00000070   ....               LDI     R21, (ee_page_address) >> 8
   \   00000072   ........           CALL    __eeput16_16
   1746          	/*
   1747          	while(sensor.id[i] != 0x00)
   1748          	{
   1749          		Buffer_Write_Byte(1,i,sensor.id[i]);
   1750          		++i;
   1751          	}
   1752          	*/
   1753          	
   1754          	//for(i=0;i<256;i++)
   1755          		//Buffer_Write_Byte (1,i,0xA0);
   1756          			
   1757          	Buffer_To_Page (1,ee_page);             //transfer to DataFlash
   \   00000076   ....               LDI     R20, LOW(ee_page)
   \   00000078   ....               LDI     R21, (ee_page) >> 8
   \   0000007A   ........           CALL    __eeget16_16
   \   0000007E   0198               MOVW    R19:R18, R17:R16
   \   00000080   E001               LDI     R16, 1
   \   00000082   ........           CALL    Buffer_To_Page
   1758          	Cont_Flash_Read_Enable (0,0);
   \   00000086   E020               LDI     R18, 0
   \   00000088   E030               LDI     R19, 0
   \   0000008A   E000               LDI     R16, 0
   \   0000008C   E010               LDI     R17, 0
   \   0000008E   ........           CALL    Cont_Flash_Read_Enable
   1759          	
   1760          	for (i=0;i<256;i++)
   \   00000092   E080               LDI     R24, 0
   \   00000094   E090               LDI     R25, 0
   \   00000096   C008               RJMP    ??write_flash_2
   1761          	{
   1762          		g_page_buffer[i] = DF_SPI_RW(0x00);
   \                     ??write_flash_3:
   \   00000098   E000               LDI     R16, 0
   \   0000009A   ........           CALL    DF_SPI_RW
   \   0000009E   01FC               MOVW    R31:R30, R25:R24
   \   000000A0   ....               SUBI    R30, LOW((-(g_page_buffer) & 0xFFFF))
   \   000000A2   ....               SBCI    R31, (-(g_page_buffer) & 0xFFFF) >> 8
   \   000000A4   8300               ST      Z, R16
   1763          	}
   \   000000A6   9601               ADIW    R25:R24, 1
   \                     ??write_flash_2:
   \   000000A8   3080               CPI     R24, 0
   \   000000AA   E001               LDI     R16, 1
   \   000000AC   0790               CPC     R25, R16
   \   000000AE   F3A0               BRCS    ??write_flash_3
   1764          	
   1765          	if(g_page_buffer[0] != '0')
   \   000000B0   9100....           LDS     R16, g_page_buffer
   \   000000B4   3300               CPI     R16, 48
   \   000000B6   F009               BREQ    ??write_flash_4
   1766          	{
   1767          		while(1);
   \                     ??write_flash_5:
   \   000000B8   CFFF               RJMP    ??write_flash_5
   1768          	}
   1769          	
   1770          	for(i=0;i<256;i++)
   \                     ??write_flash_4:
   \   000000BA   E080               LDI     R24, 0
   \   000000BC   E090               LDI     R25, 0
   \   000000BE   C009               RJMP    ??write_flash_6
   1771          	{
   1772          			
   1773          			if(i != DF_SPI_RW(0x00) )
   \                     ??write_flash_7:
   \   000000C0   E000               LDI     R16, 0
   \   000000C2   ........           CALL    DF_SPI_RW
   \   000000C6   E010               LDI     R17, 0
   \   000000C8   1780               CP      R24, R16
   \   000000CA   0791               CPC     R25, R17
   \   000000CC   F009               BREQ    ??write_flash_8
   1774          			{
   1775          				asm("nop");       
   \   000000CE   0000               nop
   1776          			}
   1777          	}
   \                     ??write_flash_8:
   \   000000D0   9601               ADIW    R25:R24, 1
   \                     ??write_flash_6:
   \   000000D2   3080               CPI     R24, 0
   \   000000D4   E001               LDI     R16, 1
   \   000000D6   0790               CPC     R25, R16
   \   000000D8   F398               BRCS    ??write_flash_7
   1778          	
   1779          	asm("nop");
   \   000000DA   0000               nop
   1780          	DF_CS_inactive;  
   \   000000DC   9A40               SBI     0x08, 0x00
   1781          	return 0;
   \   000000DE   E000               LDI     R16, 0
   \   000000E0   9189               LD      R24, Y+
   \   000000E2   9199               LD      R25, Y+
   \   000000E4   96A6               ADIW    R29:R28, 38
   \   000000E6   9508               RET
   \   000000E8                      REQUIRE _A_PORTC
   1782          }

   \                                 In  segment INTVEC, offset 0x1c, root
   \                     `??TOUCH_INT??INTVEC 28`:
   \   0000001C   ........           JMP     TOUCH_INT

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "^FH\\\\^FD">>`:
   \   00000000   465E5C48465E       DC8 "^FH\\^FD"
   \              0044        
   \                     `?<Initializer for <Constant "\\\\0D\\\\0AID:">>`:
   \   00000008   305C5C444130       DC8 "\\0D\\0AID:"
   \              4449003A    
   \                     `?<Initializer for <Constant "\\\\0D\\\\0A">>`:
   \   00000012   305C5C444130       DC8 "\\0D\\0A"
   \              00          
   \                     `?<Initializer for <Constant " 007\\\\0D\\\\0A">>`:
   \   00000019   30203730305C       DC8 " 007\\0D\\0A"
   \              5C44413000  

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "048820">>`:
   \   00000000   343038383032       DC8 "048820"
   \              00          
   \                     `?<Initializer for <Constant "048821">>`:
   \   00000007   343038383132       DC8 "048821"
   \              00          
   \                     `?<Initializer for <Constant "048822">>`:
   \   0000000E   343038383232       DC8 "048822"
   \              00          
   \                     `?<Initializer for <Constant "048823">>`:
   \   00000015   343038383332       DC8 "048823"
   \              00          
   \                     `?<Initializer for <Constant "048824">>`:
   \   0000001C   343038383432       DC8 "048824"
   \              00          
   \                     `?<Initializer for <Constant "048825">>`:
   \   00000023   343038383532       DC8 "048825"
   \              00          
   \                     `?<Initializer for <Constant "048826">>`:
   \   0000002A   343038383632       DC8 "048826"
   \              00          
   \                     `?<Initializer for <Constant "048829">>`:
   \   00000031   343038383932       DC8 "048829"
   \              00          
   \                     `?<Initializer for <Constant "048828">>`:
   \   00000038   343038383832       DC8 "048828"
   \              00          
   \                     `?<Initializer for <Constant "048831">>`:
   \   0000003F   343038383133       DC8 "048831"
   \              00          
   \                     `?<Initializer for <Constant "048830">>`:
   \   00000046   343038383033       DC8 "048830"
   \              00          
   \                     `?<Initializer for <Constant "BMSE3001">>`:
   \   0000004D   4D4245533033       DC8 "BMSE3001"
   \              313000      
   \                     `?<Initializer for <Constant "BMSE3002">>`:
   \   00000056   4D4245533033       DC8 "BMSE3002"
   \              323000      
   \                     `?<Initializer for <Constant "BMSE3003">>`:
   \   0000005F   4D4245533033       DC8 "BMSE3003"
   \              333000      
   \                     `?<Initializer for <Constant "BMSE2005">>`:
   \   00000068   4D4245533032       DC8 "BMSE2005"
   \              353000      
   \                     `?<Initializer for <Constant "BMSE2001">>`:
   \   00000071   4D4245533032       DC8 "BMSE2001"
   \              313000      
   \                     `?<Initializer for <Constant "BMSE2002">>`:
   \   0000007A   4D4245533032       DC8 "BMSE2002"
   \              323000      
   \                     `?<Initializer for <Constant "BMSE2003">>`:
   \   00000083   4D4245533032       DC8 "BMSE2003"
   \              333000      
   \                     `?<Initializer for <Constant "BMSE2004">>`:
   \   0000008C   4D4245533032       DC8 "BMSE2004"
   \              343000      
   \                     `?<Initializer for <Constant "BMSE3005">>`:
   \   00000095   4D4245533033       DC8 "BMSE3005"
   \              353000      
   \                     `?<Initializer for <Constant "BMSE2007">>`:
   \   0000009E   4D4245533032       DC8 "BMSE2007"
   \              373000      
   \                     `?<Initializer for <Constant "BMSE2006">>`:
   \   000000A7   4D4245533032       DC8 "BMSE2006"
   \              363000      

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "0">>`:
   \   00000000   0030               DC8 "0"
   \                     `?<Initializer for <Constant "1">>`:
   \   00000002   0031               DC8 "1"
   \                     `?<Initializer for <Constant "2">>`:
   \   00000004   0032               DC8 "2"
   \                     `?<Initializer for <Constant "3">>`:
   \   00000006   0033               DC8 "3"
   \                     `?<Initializer for <Constant "4">>`:
   \   00000008   0034               DC8 "4"
   \                     `?<Initializer for <Constant "5">>`:
   \   0000000A   0035               DC8 "5"
   \                     `?<Initializer for <Constant "6">>`:
   \   0000000C   0036               DC8 "6"
   \                     `?<Initializer for <Constant "7">>`:
   \   0000000E   0037               DC8 "7"
   \                     `?<Initializer for <Constant "8">>`:
   \   00000010   0038               DC8 "8"
   \                     `?<Initializer for <Constant "9">>`:
   \   00000012   0039               DC8 "9"
   \                     `?<Initializer for <Constant "A">>`:
   \   00000014   0041               DC8 "A"
   \                     `?<Initializer for <Constant "B">>`:
   \   00000016   0042               DC8 "B"
   \                     `?<Initializer for <Constant "C">>`:
   \   00000018   0043               DC8 "C"
   \                     `?<Initializer for <Constant "D">>`:
   \   0000001A   0044               DC8 "D"
   \                     `?<Initializer for <Constant "E">>`:
   \   0000001C   0045               DC8 "E"
   \                     `?<Initializer for <Constant "F">>`:
   \   0000001E   0046               DC8 "F"
   \                     `?<Initializer for <Constant "Confirm">>`:
   \   00000020   6F43666E7269       DC8 "Confirm"
   \              006D        
   \                     `?<Initializer for <Constant "Delete">>`:
   \   00000028   6544656C6574       DC8 "Delete"
   \              00          
   \                     `?<Initializer for <Constant "Next">>`:
   \   0000002F   654E747800         DC8 "Next"
   \                     `?<Initializer for <Constant "  PnG ">>`:
   \   00000034   20206E502047       DC8 "  PnG "
   \              00          
   \                     `?<Initializer for <Constant "     Lux:">>`:
   \   0000003B   202020204C20       DC8 "     Lux:"
   \              7875003A    
   \                     `?<Initializer for <Constant "1    2    3     "`:
   \   00000045   203120203220       DC8 "1    2    3     "
   \              202020202033
   \              2020202000  
   \                     `?<Initializer for <Constant "4    5    6     "`:
   \   00000056   203420203520       DC8 "4    5    6     "
   \              202020202036
   \              2020202000  
   \                     `?<Initializer for <Constant "7    8    9     "`:
   \   00000067   203720203820       DC8 "7    8    9     "
   \              202020202039
   \              2020202000  
   \                     `?<Initializer for <Constant "     0          "`:
   \   00000078   202020203020       DC8 "     0          "
   \              202020202020
   \              2020202000  
   \                     `?<Initializer for <Constant "D200014214000001"`:
   \   00000089   324430303130       DC8 "D200014214000001"
   \              323434313030
   \              3030313000  
   \                     `?<Initializer for <Constant "D200014210000000"`:
   \   0000009A   324430303130       DC8 "D200014210000000"
   \              323430313030
   \              3030303000  
   \                     `?<Initializer for <Constant "D2000142140000FF"`:
   \   000000AB   324430303130       DC8 "D2000142140000FF"
   \              323434313030
   \              3030464600  
   \                     `?<Initializer for <Constant "     ">>`:
   \   000000BC   202020200020       DC8 "     "
   \                     `?<Initializer for <Constant " ">>`:
   \   000000C2   0020               DC8 " "
   \                     `?<Initializer for <Constant "_">>`:
   \   000000C4   005F               DC8 "_"
   \                     `?<Initializer for <Constant "Delivery Station"`:
   \   000000C6   6544696C6576       DC8 "Delivery Station"
   \              797253206174
   \              69746E6F00  
   \                     `?<Initializer for <Constant "Input ID:">>`:
   \   000000D7   6E4975702074       DC8 "Input ID:"
   \              4449003A    
   \                     `?<Initializer for <Constant "   Infor:">>`:
   \   000000E1   20204920666E       DC8 "   Infor:"
   \              726F003A    
   \                     `?<Initializer for <Constant "1    2    3    A"`:
   \   000000EB   203120203220       DC8 "1    2    3    A"
   \              202020202033
   \              2020412000  
   \                     `?<Initializer for <Constant "4    5    6    B"`:
   \   000000FC   203420203520       DC8 "4    5    6    B"
   \              202020202036
   \              2020422000  
   \                     `?<Initializer for <Constant "7    8    9    C"`:
   \   0000010D   203720203820       DC8 "7    8    9    C"
   \              202020202039
   \              2020432000  
   \                     `?<Initializer for <Constant "E    0    F    D"`:
   \   0000011E   204520203020       DC8 "E    0    F    D"
   \              202020202046
   \              2020442000  
   \                     `?<Initializer for <Constant "D200014280000000"`:
   \   0000012F   324430303130       DC8 "D200014280000000"
   \              323430383030
   \              3030303000  
   \                     `?<Initializer for <Constant "D200014282000000"`:
   \   00000140   324430303130       DC8 "D200014282000000"
   \              323432383030
   \              3030303000  
   \                     `?<Initializer for <Constant "ID Programmed">>`:
   \   00000151   444950206F72       DC8 "ID Programmed"
   \              72676D61656D
   \              0064        
   \                     `?<Initializer for <Constant "             ">>`:
   \   0000015F   202020202020       DC8 "             "
   \              202020202020
   \              0020        
   \                     `?<Initializer for <Constant "   Input:">>`:
   \   0000016D   20204920706E       DC8 "   Input:"
   \              7475003A    
   \                     `?<Initializer for <Constant "          ">>`:
   \   00000177   202020202020       DC8 "          "
   \              2020202000  
   \                     `?<Initializer for <Constant "   Frame:">>`:
   \   00000182   202046206172       DC8 "   Frame:"
   \              656D003A    
   \                     `?<Initializer for <Constant "        ">>`:
   \   0000018C   202020202020       DC8 "        "
   \              202000      
   \                     `?<Initializer for <Constant "D000010600000000"`:
   \   00000195   304430303130       DC8 "D000010600000000"
   \              363030303030
   \              3030303000  
   \                     `?<Initializer for <Constant "FFFFFFFF">>`:
   \   000001A6   464646464646       DC8 "FFFFFFFF"
   \              464600      
   \                     `?<Initializer for <Constant "D000010300000000"`:
   \   000001AF   304430303130       DC8 "D000010300000000"
   \              333030303030
   \              3030303000  
   \                     `?<Initializer for <Constant "D20101428C0000FF"`:
   \   000001C0   324431303130       DC8 "D20101428C0000FF"
   \              323443383030
   \              3030464600  
   \                     `?<Initializer for <Constant "D20101428B00A801"`:
   \   000001D1   324431303130       DC8 "D20101428B00A801"
   \              323442383030
   \              3841313000  
   \                     `?<Initializer for <Constant "D20101428C0000AA"`:
   \   000001E2   324431303130       DC8 "D20101428C0000AA"
   \              323443383030
   \              3030414100  

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "Dec 11 2009">>`:
   \   00000000   654420633131       DC8 "Dec 11 2009"
   \              322030300039
   \                     `?<Initializer for <Constant "23:24:26">>`:
   \   0000000C   3332323A3A34       DC8 "23:24:26"
   \              363200      

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "D20101428D020101"`:
   \   00000000   324431303130       DC8 "D20101428D020101"
   \              323444383230
   \              3130313000  

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for key_initial>`:
   \   00000000   003C00000078       DD 60, 120, 0, 0, 30, 48, 0, 0, 60, 48, 0, 0, 90, 48, 0, 0, 30, 72, 0
   \              000000000000
   \              00000000001E
   \              000000300000
   \              000000000000
   \              0000003C0000
   \              003000000000
   \              000000000000
   \              005A00000030
   \              000000000000
   \              00000000001E
   \              000000480000
   \              00000000    
   \   0000004C   00000000003C       DD 0, 60, 72, 0, 0, 90, 72, 0, 0, 30, 96, 0, 0, 60, 96, 0, 0, 90, 96, 0
   \              000000480000
   \              000000000000
   \              0000005A0000
   \              004800000000
   \              000000000000
   \              001E00000060
   \              000000000000
   \              00000000003C
   \              000000600000
   \              000000000000
   \              0000005A0000
   \              006000000000
   \              0000        
   \   0000009C   000000000078       DD 0, 120, 48, 0, 0, 120, 72, 0, 0, 120, 96, 0, 0, 120, 120, 0, 0, 30
   \              000000300000
   \              000000000000
   \              000000780000
   \              004800000000
   \              000000000000
   \              007800000060
   \              000000000000
   \              000000000078
   \              000000780000
   \              000000000000
   \              0000001E0000
   \   000000E4   007800000000       DD 120, 0, 0, 90, 120, 0, 0
   \              000000000000
   \              005A00000078
   \              000000000000
   \              00000000    
   \                     `?<Initializer for weigth>`:
   \   00000100   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for height>`:
   \   00000104   00000000           DC8 0, 0, 0, 0

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for base>`:
   \   00000000   00960000           DD 150
   \                     `?<Initializer for top>`:
   \   00000004   07580000           DD 1880
   \                     `?<Initializer for cur_x>`:
   \   00000008   0000               DC8 0, 0
   \                     `?<Initializer for cur_y>`:
   \   0000000A   0000               DC8 0, 0

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for g_buffer_tx>`:
   \   00000000   304430303130       DC8 "D000010200000000"
   \              323030303030
   \              3030303000  

   \                                 In  segment SWITCH, align 2, keep-with-next
   \                     `?<Jumptable for touch_key_blink>_0`:
   \   00000000   00                 DB      0
   \   00000001   00                 DB      0
   \   00000002   ....               DW      (??touch_key_blink_20) /2
   \   00000004   0014               DW      20
   \   00000006   ....               DW      (??touch_key_blink_0) /2
   \   00000008   ....               DW      (??touch_key_blink_2) /2
   \   0000000A   ....               DW      (??touch_key_blink_3) /2
   \   0000000C   ....               DW      (??touch_key_blink_4) /2
   \   0000000E   ....               DW      (??touch_key_blink_5) /2
   \   00000010   ....               DW      (??touch_key_blink_6) /2
   \   00000012   ....               DW      (??touch_key_blink_7) /2
   \   00000014   ....               DW      (??touch_key_blink_8) /2
   \   00000016   ....               DW      (??touch_key_blink_9) /2
   \   00000018   ....               DW      (??touch_key_blink_10) /2
   \   0000001A   ....               DW      (??touch_key_blink_11) /2
   \   0000001C   ....               DW      (??touch_key_blink_12) /2
   \   0000001E   ....               DW      (??touch_key_blink_13) /2
   \   00000020   ....               DW      (??touch_key_blink_14) /2
   \   00000022   ....               DW      (??touch_key_blink_15) /2
   \   00000024   ....               DW      (??touch_key_blink_16) /2
   \   00000026   ....               DW      (??touch_key_blink_17) /2
   \   00000028   ....               DW      (??touch_key_blink_18) /2
   \   0000002A   ....               DW      (??touch_key_blink_20) /2
   \   0000002C   ....               DW      (??touch_key_blink_19) /2

   \                                 In  segment SWITCH, align 2, keep-with-next
   \                     `?<Jumptable for touch_key_blink_01>_0`:
   \   00000000   00                 DB      0
   \   00000001   01                 DB      1
   \   00000002   ....               DW      (??touch_key_blink_01_14) /2
   \   00000004   ....               DW      (??touch_key_blink_01_0) /2
   \   00000006   01                 DB      0x1
   \   00000007   ....               DW      (??touch_key_blink_01_2) /2
   \   00000009   01                 DB      0x1
   \   0000000A   ....               DW      (??touch_key_blink_01_3) /2
   \   0000000C   01                 DB      0x1
   \   0000000D   ....               DW      (??touch_key_blink_01_4) /2
   \   0000000F   01                 DB      0x1
   \   00000010   ....               DW      (??touch_key_blink_01_5) /2
   \   00000012   01                 DB      0x1
   \   00000013   ....               DW      (??touch_key_blink_01_6) /2
   \   00000015   01                 DB      0x1
   \   00000016   ....               DW      (??touch_key_blink_01_7) /2
   \   00000018   01                 DB      0x1
   \   00000019   ....               DW      (??touch_key_blink_01_8) /2
   \   0000001B   01                 DB      0x1
   \   0000001C   ....               DW      (??touch_key_blink_01_9) /2
   \   0000001E   01                 DB      0x1
   \   0000001F   ....               DW      (??touch_key_blink_01_10) /2
   \   00000021   07                 DB      0x7
   \   00000022   ....               DW      (??touch_key_blink_01_11) /2
   \   00000024   01                 DB      0x1
   \   00000025   ....               DW      (??touch_key_blink_01_12) /2
   \   00000027   02                 DB      0x2
   \   00000028   ....               DW      (??touch_key_blink_01_13) /2
   \   0000002A   FB                 DB      251
   \   0000002B   00                 DB      0

   \                                 In  segment SWITCH, align 2, keep-with-next
   \                     `?<Jumptable for touch_key_blink_02>_0`:
   \   00000000   00                 DB      0
   \   00000001   01                 DB      1
   \   00000002   ....               DW      (??touch_key_blink_02_14) /2
   \   00000004   ....               DW      (??touch_key_blink_02_0) /2
   \   00000006   01                 DB      0x1
   \   00000007   ....               DW      (??touch_key_blink_02_2) /2
   \   00000009   01                 DB      0x1
   \   0000000A   ....               DW      (??touch_key_blink_02_3) /2
   \   0000000C   01                 DB      0x1
   \   0000000D   ....               DW      (??touch_key_blink_02_4) /2
   \   0000000F   01                 DB      0x1
   \   00000010   ....               DW      (??touch_key_blink_02_5) /2
   \   00000012   01                 DB      0x1
   \   00000013   ....               DW      (??touch_key_blink_02_6) /2
   \   00000015   01                 DB      0x1
   \   00000016   ....               DW      (??touch_key_blink_02_7) /2
   \   00000018   01                 DB      0x1
   \   00000019   ....               DW      (??touch_key_blink_02_8) /2
   \   0000001B   01                 DB      0x1
   \   0000001C   ....               DW      (??touch_key_blink_02_9) /2
   \   0000001E   01                 DB      0x1
   \   0000001F   ....               DW      (??touch_key_blink_02_10) /2
   \   00000021   07                 DB      0x7
   \   00000022   ....               DW      (??touch_key_blink_02_11) /2
   \   00000024   01                 DB      0x1
   \   00000025   ....               DW      (??touch_key_blink_02_12) /2
   \   00000027   02                 DB      0x2
   \   00000028   ....               DW      (??touch_key_blink_02_13) /2
   \   0000002A   FB                 DB      251
   \   0000002B   00                 DB      0

   \                                 In  segment SWITCH, align 2, keep-with-next
   \                     `?<Jumptable for menu_02>_0`:
   \   00000000   4E90               DW      20112
   \   00000002   00                 DB      0
   \   00000003   ....               DW      (??menu_02_8) /2
   \   00000005   0007               DW      7
   \   00000007   ....               DW      (??menu_02_6) /2
   \   00000009   ....               DW      (??menu_02_9) /2
   \   0000000B   ....               DW      (??menu_02_10) /2
   \   0000000D   ....               DW      (??menu_02_12) /2
   \   0000000F   ....               DW      (??menu_02_15) /2
   \   00000011   ....               DW      (??menu_02_16) /2
   \   00000013   ....               DW      (??menu_02_17) /2
   \   00000015   00                 DB      0

   \                                 In  segment SWITCH, align 2, keep-with-next
   \                     `?<Jumptable for test_screen>_0`:
   \   00000000   4790               DW      18320
   \   00000002   00                 DB      0
   \   00000003   ....               DW      (??test_screen_17) /2
   \   00000005   0004               DW      4
   \   00000007   ....               DW      (??test_screen_15) /2
   \   00000009   ....               DW      (??test_screen_19) /2
   \   0000000B   ....               DW      (??test_screen_20) /2
   \   0000000D   ....               DW      (??test_screen_22) /2
   \   0000000F   00                 DB      0

   \                                 In  segment NEAR_F, align 1, keep-with-next
   \                     `?<Constant "00W00">`:
   \   00000000   303030570030       DC8 "00W00"

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "^FH\\\\^FD">`:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for <Constant "^FH\\\\^FD">>`
   \   00000008                      DS8 10
   \   00000012                      REQUIRE `?<Initializer for <Constant "\\\\0D\\\\0AID:">>`
   \   00000012                      DS8 7
   \   00000019                      REQUIRE `?<Initializer for <Constant "\\\\0D\\\\0A">>`
   \   00000019                      DS8 11
   \   00000024                      REQUIRE `?<Initializer for <Constant " 007\\\\0D\\\\0A">>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "048820">`:
   \   00000000                      DS8 7
   \   00000007                      REQUIRE `?<Initializer for <Constant "048820">>`
   \   00000007                      DS8 7
   \   0000000E                      REQUIRE `?<Initializer for <Constant "048821">>`
   \   0000000E                      DS8 7
   \   00000015                      REQUIRE `?<Initializer for <Constant "048822">>`
   \   00000015                      DS8 7
   \   0000001C                      REQUIRE `?<Initializer for <Constant "048823">>`
   \   0000001C                      DS8 7
   \   00000023                      REQUIRE `?<Initializer for <Constant "048824">>`
   \   00000023                      DS8 7
   \   0000002A                      REQUIRE `?<Initializer for <Constant "048825">>`
   \   0000002A                      DS8 7
   \   00000031                      REQUIRE `?<Initializer for <Constant "048826">>`
   \   00000031                      DS8 7
   \   00000038                      REQUIRE `?<Initializer for <Constant "048829">>`
   \   00000038                      DS8 7
   \   0000003F                      REQUIRE `?<Initializer for <Constant "048828">>`
   \   0000003F                      DS8 7
   \   00000046                      REQUIRE `?<Initializer for <Constant "048831">>`
   \   00000046                      DS8 7
   \   0000004D                      REQUIRE `?<Initializer for <Constant "048830">>`
   \   0000004D                      DS8 9
   \   00000056                      REQUIRE `?<Initializer for <Constant "BMSE3001">>`
   \   00000056                      DS8 9
   \   0000005F                      REQUIRE `?<Initializer for <Constant "BMSE3002">>`
   \   0000005F                      DS8 9
   \   00000068                      REQUIRE `?<Initializer for <Constant "BMSE3003">>`
   \   00000068                      DS8 9
   \   00000071                      REQUIRE `?<Initializer for <Constant "BMSE2005">>`
   \   00000071                      DS8 9
   \   0000007A                      REQUIRE `?<Initializer for <Constant "BMSE2001">>`
   \   0000007A                      DS8 9
   \   00000083                      REQUIRE `?<Initializer for <Constant "BMSE2002">>`
   \   00000083                      DS8 9
   \   0000008C                      REQUIRE `?<Initializer for <Constant "BMSE2003">>`
   \   0000008C                      DS8 9
   \   00000095                      REQUIRE `?<Initializer for <Constant "BMSE2004">>`
   \   00000095                      DS8 9
   \   0000009E                      REQUIRE `?<Initializer for <Constant "BMSE3005">>`
   \   0000009E                      DS8 9
   \   000000A7                      REQUIRE `?<Initializer for <Constant "BMSE2007">>`
   \   000000A7                      DS8 9
   \   000000B0                      REQUIRE `?<Initializer for <Constant "BMSE2006">>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "0">`:
   \   00000000                      DS8 2
   \   00000002                      REQUIRE `?<Initializer for <Constant "0">>`
   \   00000002                      DS8 2
   \   00000004                      REQUIRE `?<Initializer for <Constant "1">>`
   \   00000004                      DS8 2
   \   00000006                      REQUIRE `?<Initializer for <Constant "2">>`
   \   00000006                      DS8 2
   \   00000008                      REQUIRE `?<Initializer for <Constant "3">>`
   \   00000008                      DS8 2
   \   0000000A                      REQUIRE `?<Initializer for <Constant "4">>`
   \   0000000A                      DS8 2
   \   0000000C                      REQUIRE `?<Initializer for <Constant "5">>`
   \   0000000C                      DS8 2
   \   0000000E                      REQUIRE `?<Initializer for <Constant "6">>`
   \   0000000E                      DS8 2
   \   00000010                      REQUIRE `?<Initializer for <Constant "7">>`
   \   00000010                      DS8 2
   \   00000012                      REQUIRE `?<Initializer for <Constant "8">>`
   \   00000012                      DS8 2
   \   00000014                      REQUIRE `?<Initializer for <Constant "9">>`
   \   00000014                      DS8 2
   \   00000016                      REQUIRE `?<Initializer for <Constant "A">>`
   \   00000016                      DS8 2
   \   00000018                      REQUIRE `?<Initializer for <Constant "B">>`
   \   00000018                      DS8 2
   \   0000001A                      REQUIRE `?<Initializer for <Constant "C">>`
   \   0000001A                      DS8 2
   \   0000001C                      REQUIRE `?<Initializer for <Constant "D">>`
   \   0000001C                      DS8 2
   \   0000001E                      REQUIRE `?<Initializer for <Constant "E">>`
   \   0000001E                      DS8 2
   \   00000020                      REQUIRE `?<Initializer for <Constant "F">>`
   \   00000020                      DS8 8
   \   00000028                      REQUIRE `?<Initializer for <Constant "Confirm">>`
   \   00000028                      DS8 7
   \   0000002F                      REQUIRE `?<Initializer for <Constant "Delete">>`
   \   0000002F                      DS8 5
   \   00000034                      REQUIRE `?<Initializer for <Constant "Next">>`
   \   00000034                      DS8 7
   \   0000003B                      REQUIRE `?<Initializer for <Constant "  PnG ">>`
   \   0000003B                      DS8 10
   \   00000045                      REQUIRE `?<Initializer for <Constant "     Lux:">>`
   \   00000045                      DS8 17
   \   00000056                      REQUIRE `?<Initializer for <Constant "1    2    3     "`
   \   00000056                      DS8 17
   \   00000067                      REQUIRE `?<Initializer for <Constant "4    5    6     "`
   \   00000067                      DS8 17
   \   00000078                      REQUIRE `?<Initializer for <Constant "7    8    9     "`
   \   00000078                      DS8 17
   \   00000089                      REQUIRE `?<Initializer for <Constant "     0          "`
   \   00000089                      DS8 17
   \   0000009A                      REQUIRE `?<Initializer for <Constant "D200014214000001"`
   \   0000009A                      DS8 17
   \   000000AB                      REQUIRE `?<Initializer for <Constant "D200014210000000"`
   \   000000AB                      DS8 17
   \   000000BC                      REQUIRE `?<Initializer for <Constant "D2000142140000FF"`
   \   000000BC                      DS8 6
   \   000000C2                      REQUIRE `?<Initializer for <Constant "     ">>`
   \   000000C2                      DS8 2
   \   000000C4                      REQUIRE `?<Initializer for <Constant " ">>`
   \   000000C4                      DS8 2
   \   000000C6                      REQUIRE `?<Initializer for <Constant "_">>`
   \   000000C6                      DS8 17
   \   000000D7                      REQUIRE `?<Initializer for <Constant "Delivery Station"`
   \   000000D7                      DS8 10
   \   000000E1                      REQUIRE `?<Initializer for <Constant "Input ID:">>`
   \   000000E1                      DS8 10
   \   000000EB                      REQUIRE `?<Initializer for <Constant "   Infor:">>`
   \   000000EB                      DS8 17
   \   000000FC                      REQUIRE `?<Initializer for <Constant "1    2    3    A"`
   \   000000FC                      DS8 17
   \   0000010D                      REQUIRE `?<Initializer for <Constant "4    5    6    B"`
   \   0000010D                      DS8 17
   \   0000011E                      REQUIRE `?<Initializer for <Constant "7    8    9    C"`
   \   0000011E                      DS8 17
   \   0000012F                      REQUIRE `?<Initializer for <Constant "E    0    F    D"`
   \   0000012F                      DS8 17
   \   00000140                      REQUIRE `?<Initializer for <Constant "D200014280000000"`
   \   00000140                      DS8 17
   \   00000151                      REQUIRE `?<Initializer for <Constant "D200014282000000"`
   \   00000151                      DS8 14
   \   0000015F                      REQUIRE `?<Initializer for <Constant "ID Programmed">>`
   \   0000015F                      DS8 14
   \   0000016D                      REQUIRE `?<Initializer for <Constant "             ">>`
   \   0000016D                      DS8 10
   \   00000177                      REQUIRE `?<Initializer for <Constant "   Input:">>`
   \   00000177                      DS8 11
   \   00000182                      REQUIRE `?<Initializer for <Constant "          ">>`
   \   00000182                      DS8 10
   \   0000018C                      REQUIRE `?<Initializer for <Constant "   Frame:">>`
   \   0000018C                      DS8 9
   \   00000195                      REQUIRE `?<Initializer for <Constant "        ">>`
   \   00000195                      DS8 17
   \   000001A6                      REQUIRE `?<Initializer for <Constant "D000010600000000"`
   \   000001A6                      DS8 9
   \   000001AF                      REQUIRE `?<Initializer for <Constant "FFFFFFFF">>`
   \   000001AF                      DS8 17
   \   000001C0                      REQUIRE `?<Initializer for <Constant "D000010300000000"`
   \   000001C0                      DS8 17
   \   000001D1                      REQUIRE `?<Initializer for <Constant "D20101428C0000FF"`
   \   000001D1                      DS8 17
   \   000001E2                      REQUIRE `?<Initializer for <Constant "D20101428B00A801"`
   \   000001E2                      DS8 17
   \   000001F3                      REQUIRE `?<Initializer for <Constant "D20101428C0000AA"`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "Dec 11 2009">`:
   \   00000000                      DS8 12
   \   0000000C                      REQUIRE `?<Initializer for <Constant "Dec 11 2009">>`
   \   0000000C                      DS8 9
   \   00000015                      REQUIRE `?<Initializer for <Constant "23:24:26">>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "D20101428D020101">`:
   \   00000000                      DS8 17
   \   00000011                      REQUIRE `?<Initializer for <Constant "D20101428D020101"`

   Maximum stack usage in bytes:

     Function                       CSTACK RSTACK
     --------                       ------ ------
     PnG_048820                         0      2
       -> send_frame_pp_ext_broad       0      2
       -> setting_parameter             0      2
       -> setting_parameter             0      2
       -> setting_parameter             0      2
       -> setting_parameter             0      2
       -> setting_parameter             0      2
       -> setting_parameter             0      2
       -> setting_parameter             0      2
       -> setting_parameter             0      2
       -> setting_parameter             0      2
       -> send_frame_pp_ext_broad       0      2
       -> send_frame_pp_ext_broad       0      2
     TOUCH_INT                          2      2
     external_interrupt_initial         0      2
     get_touch_key                      8      4
     get_touch_menu_00                  0      2
     id_setting                         0      2
       -> strncpy                       0      2
       -> send_frame_pp_ext_broad       0      2
       -> send_frame_pp_ext_broad       0      2
     id_setting_ee                      0      2
       -> strncpy                       0      2
       -> send_frame_pp_ext_broad       0      2
       -> send_frame_pp_ext_broad       0      2
     input_screen                      10      4
       -> strlen                       10      2
       -> LCD_Clr                      10      2
       -> LCD_distring                 10      2
       -> LCD_distring                 10      2
       -> LCD_distring                 10      2
       -> LCD_distring                 10      2
       -> LCD_distring                 10      2
       -> LCD_distring                 10      2
       -> LCD_distring                 10      2
       -> LCD_distring                 10      2
       -> timer_flex2_initial          10      2
       -> LCD_distring_ee              10      2
       -> LCD_distring_ee              10      2
       -> LCD_distring_ee              10      2
       -> LCD_distring_ee              10      2
       -> LCD_distring_ee              10      2
       -> LCD_distring                 10      2
       -> light_adj                    10      2
       -> TOUCH_getdata                10      2
       -> get_touch_key                10      2
       -> touch_key_blink_01           10      2
       -> LCD_distring                 10      2
       -> LCD_distring                 10      2
       -> LCD_distring                 10      2
       -> timer_flex2_initial          10      2
       -> LCD_distring                 10      2
     key_parameter_initial             17      4
     menu_00                            0      2
       -> LCD_distring                  0      2
       -> LCD_distring                  0      2
       -> LCD_distring_V2               0      2
       -> LCD_distring_V2               0      2
       -> LCD_distring_V2               0      2
     menu_01                           24      4
       -> LCD_distring_V2              24      2
       -> LCD_distring                 24      2
       -> LCD_distring                 24      2
       -> LCD_distring                 24      2
       -> LCD_distring                 24      2
       -> LCD_distring                 24      2
       -> LCD_distring                 24      2
       -> LCD_distring                 24      2
       -> timer_flex2_initial          24      2
       -> LCD_distring                 24      2
       -> light_adj                    24      2
       -> TOUCH_getdata                24      2
       -> get_touch_key                24      2
       -> touch_key_blink_01           24      2
       -> LCD_distring                 24      2
       -> send_frame_pp_ext_broad      24      2
       -> strncpy                      24      2
       -> CharToStr                    24      2
       -> CharToStr                    24      2
       -> send_frame_pp_ext_broad      24      2
       -> send_frame_pp_ext_broad      24      2
       -> LCD_distring                 24      2
       -> LCD_distring                 24      2
       -> timer_flex2_initial          24      2
       -> LCD_distring                 24      2
     menu_02                           51      4
       -> LCD_distring                 49      2
       -> LCD_distring                 49      2
       -> LCD_distring                 49      2
       -> LCD_distring                 49      2
       -> LCD_distring                 49      2
       -> LCD_distring                 49      2
       -> LCD_distring                 49      2
       -> LCD_distring                 49      2
       -> LCD_distring                 49      2
       -> LCD_distring                 49      2
       -> timer_flex2_initial          49      2
       -> LCD_distring_ee              49      2
       -> LCD_distring                 49      2
       -> all_reception_buffer_clear
                                       49      2
       -> light_adj                    49      2
       -> decode_SCS                   49      2
       -> id_setting                   49      2
       -> strncpy                      49      2
       -> strcmp                       49      2
       -> delay_ms                     49      2
       -> strncpy                      49      2
       -> strncpy                      49      2
       -> send_frame_pp_ext_broad      49      2
       -> delay_ms                     49      2
       -> strncpy                      49      2
       -> send_frame_pp_ext_broad      49      2
       -> print_label                  51      2
       -> LCD_distring                 49      2
       -> LCD_distring                 49      2
       -> led_blinking                 49      2
       -> LCD_distring_V2              49      2
       -> TOUCH_getdata                49      2
       -> get_touch_key                49      2
       -> touch_key_blink              49      2
       -> LCD_distring                 49      2
       -> LCD_distring                 49      2
       -> LCD_distring                 49      2
       -> LCD_distring                 49      2
       -> led_blinking_disable         49      2
       -> timer_flex_initial           49      2
       -> LCD_distring                 49      2
       -> StrToChar                    49      2
       -> StrToChar                    49      2
       -> StrToChar                    49      2
       -> StrToChar                    49      2
       -> CharToStr                    49      2
       -> CharToStr                    49      2
       -> CharToStr                    49      2
       -> CharToStr                    49      2
       -> timer_flex2_initial          49      2
       -> LCD_distring                 49      2
     print_initial                      0      2
     print_label                       25      2
       -> StrToChar                    25      2
       -> print_out_flash              25      2
       -> print_out                    25      2
       -> print_model                  25      2
       -> print_out                    25      2
       -> print_out                    25      2
       -> print_out_flash              25      2
       -> print_model                  25      2
       -> print_out_flash              25      2
       -> print_out                    25      2
       -> print_out_flash              25      2
       -> print_model                  25      2
       -> print_out                    25      2
       -> print_out                    25      2
       -> print_out                    25      2
       -> print_out                    25      2
       -> print_out                    25      2
       -> print_out                    25      2
       -> print_out_flash              25      2
       -> print_out                    25      2
       -> print_out_flash              25      2
       -> print_out                    25      2
       -> print_out_flash              25      2
       -> print_model                  25      2
       -> print_out_flash              25      2
       -> print_out                    25      2
       -> print_out_flash              25      2
     print_model                        0      2
       -> print_out                     0      2
       -> print_out                     0      2
       -> print_out                     0      2
       -> print_out                     0      2
       -> print_out                     0      2
       -> print_out                     0      2
       -> print_out                     0      2
       -> print_out                     0      2
       -> print_out                     0      2
       -> print_out                     0      2
       -> print_out                     0      2
       -> print_out                     0      2
       -> print_out                     0      2
       -> print_out                     0      2
       -> print_out                     0      2
       -> print_out                     0      2
       -> print_out                     0      2
       -> print_out                     0      2
       -> print_out                     0      2
       -> print_out                     0      2
       -> print_out                     0      2
       -> print_out                     0      2
     print_out                          0      2
     print_out_flash                    0      2
     setting_parameter                 21      2
       -> CharToStr                    21      2
       -> strncpy                      21      2
       -> CharToStr                    21      2
       -> send_frame_pp_ext_broad      21      2
     test_screen                       63      4
       -> strlen                       63      2
       -> LCD_Clr                      63      2
       -> LCD_distring                 63      2
       -> LCD_distring                 63      2
       -> LCD_distring                 63      2
       -> LCD_distring                 63      2
       -> LCD_distring                 63      2
       -> LCD_distring                 63      2
       -> LCD_distring                 63      2
       -> LCD_distring                 63      2
       -> LCD_distring                 63      2
       -> timer_flex2_initial          63      2
       -> led_blinking_disable         63      2
       -> LCD_distring                 63      2
       -> light_adj                    63      2
       -> all_reception_buffer_clear
                                       63      2
       -> decode_SCS                   63      2
       -> led_blinking_disable         63      2
       -> led_blinking_disable         63      2
       -> led_blinking                 63      2
       -> strncpy                      63      2
       -> strncpy                      63      2
       -> strcmp                       63      2
       -> LCD_distring                 63      2
       -> strncpy                      63      2
       -> strcmp                       63      2
       -> LCD_distring                 63      2
       -> LCD_distring                 63      2
       -> strncpy                      63      2
       -> strncpy                      63      2
       -> strncpy                      63      2
       -> send_frame_pp_ext_broad      63      2
       -> timer_flex_initial           63      2
       -> id_setting                   63      2
       -> send_frame_pp_ext_broad      63      2
       -> timer_flex_initial           63      2
       -> send_frame_pp_ext_broad      63      2
       -> PnG_048820                   63      2
       -> TOUCH_getdata                63      2
       -> get_touch_key                63      2
       -> touch_key_blink_02           63      2
       -> LCD_distring                 63      2
       -> led_blinking_disable         63      2
       -> StrToChar                    63      2
       -> send_frame_pp_ext_broad      63      2
       -> timer_flex_initial           63      2
       -> LCD_distring                 63      2
       -> timer_flex2_initial          63      2
       -> LCD_distring                 63      2
     touch_key_blink                    2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
     touch_key_blink_01                 2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
     touch_key_blink_02                 2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
       -> LCD_distring                  2      2
       -> delay_ms                      2      2
       -> LCD_distring                  2      2
     write_flash                       40      4
       -> Buffer_Write_Byte            40      2
       -> Buffer_To_Page               40      2
       -> Cont_Flash_Read_Enable       40      2
       -> DF_SPI_RW                    40      2
       -> DF_SPI_RW                    40      2


   Segment part sizes:

     Function/Label                                 Bytes
     --------------                                 -----
     _A_UDR1                                           1
     _A_UBRR1                                          2
     _A_UCSR1C                                         1
     _A_UCSR1B                                         1
     _A_UCSR1A                                         1
     _A_PCMSK3                                         1
     _A_EICRA                                          1
     _A_PCICR                                          1
     _A_EIMSK                                          1
     _A_PCIFR                                          1
     _A_PIND                                           1
     _A_PORTC                                          1
     g_touched                                         1
     TOUCH_INT                                        12
     print_initial                                    32
     print_out                                        32
     print_out_flash                                  32
     label_1                                         758
     label_2
     label_3
     label_4
     label_5
     label_6
     label_7
     label_8
     label_9
     print_label                                     232
     print_model                                     250
     external_interrupt_initial                       24
     key                                             256
     key_parameter_initial                           376
     key_initial                                     264
     weigth
     height
     base                                             12
     top
     cur_x
     cur_y
     get_touch_key                                   496
     get_touch_menu_00                               188
     g_buffer_tx                                      17
     id_setting                                       52
     id_setting_ee                                    52
     touch_key_blink                                 630
     touch_key_blink_01                              438
     touch_key_blink_02                              438
     calibration                                      73
     Delivery
     Test
     menu_00                                          72
     menu_01                                         598
     ui_lux                                            4
     lux_high
     lux_low
     menu_02                                        1494
     input_screen                                    876
     len                                               1
     test_screen                                    1158
     len                                               1
     PnG_048820                                       92
     setting_parameter                                74
     write_flash                                     232
     ??TOUCH_INT??INTVEC 28                            4
     ?<Initializer for <Constant "^FH\\^FD">>         36
     ?<Initializer for <Constant "048820">>          176
     ?<Initializer for <Constant "0">>               499
     ?<Initializer for <Constant "Dec 11 2009">>      21
     ?<Initializer for <Constant "D20101428D020101"   17
     ?<Initializer for key_initial>                  264
     ?<Initializer for base>                          12
     ?<Initializer for g_buffer_tx>                   17
     ?<Jumptable for touch_key_blink>_0               46
     ?<Jumptable for touch_key_blink_01>_0            44
     ?<Jumptable for touch_key_blink_02>_0            44
     ?<Jumptable for menu_02>_0                       22
     ?<Jumptable for test_screen>_0                   16
     ?<Constant "00W00">                               6
     ?<Constant "^FH\\^FD">                           36
     ?<Constant "048820">                            176
     ?<Constant "0">                                 499
     ?<Constant "Dec 11 2009">                        21
     ?<Constant "D20101428D020101">                   17
      Others                                          12

 
    13 bytes in segment ABSOLUTE
 7 880 bytes in segment CODE
    12 bytes in segment INITTAB
     4 bytes in segment INTVEC
   837 bytes in segment NEAR_F
 1 042 bytes in segment NEAR_I
 1 042 bytes in segment NEAR_ID
   263 bytes in segment NEAR_Z
   172 bytes in segment SWITCH
 
 9 931 bytes of CODE memory (+ 16 bytes shared)
 1 305 bytes of DATA memory (+ 13 bytes shared)

Errors: none
Warnings: none
