################################################################################
#                                                                              #
#      IAR Universal Linker V4.61B/386                                         #
#                                                                              #
#           Link time     =  01/Jul/2009  08:27:32                             #
#           Target CPU    =  A90                                               #
#           List file     =  D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\List\LM057_SMT.map                     #
#           Output file 1 =  D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Exe\LM057_SMT.hex                      #
#                            Format: intel-extended, variant: -y(CODE)         #
#           Output file 2 =  D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Exe\LM057_SMT.eep                      #
#                            Format: intel-extended, variant: -y(XDATA)        #
#           Command line  =  -y(CODE)                                          #
#                            -Ointel-extended,(XDATA)=D:\avr\Uart_Interrupt\LM #
#                            _Universal\LM_IAR_V5.0\Alan\Release\Exe\LM057_SMT #
#                            .eep                                              #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Obj\IR.r90                             #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Obj\PIR.r90                            #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Obj\US.r90                             #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Obj\application.r90                    #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Obj\board.r90                          #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Obj\configuration.r90                  #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Obj\decode_scs.r90                     #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Obj\decode_scs_next.r90                #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Obj\function_modality.r90              #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Obj\function_service.r90               #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Obj\global_variable.r90                #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Obj\main.r90                           #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Obj\usart.r90                          #
#                            -o                                                #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\Exe\LM057_SMT.hex                      #
#                            -Fintel-extended -B -z -l                         #
#                            D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Al #
#                            an\Release\List\LM057_SMT.map                     #
#                            -xmsnio                                           #
#                            "-IC:\Program Files\IAR Systems\Embedded Workbenc #
#                            h 5.0 Evaluation\avr\LIB\"                        #
#                            -f                                                #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            5.0 Evaluation\avr\config\lnkm644ps.xcl"          #
#                            (-D_..X_INTVEC_SIZE=7C -D_..X_FLASH_TEND=FF       #
#                            -D_..X_FLASH_NEND=FFFF -D_..X_FLASH_END=FFFF      #
#                            -D_..X_SRAM_BASE=100 -D_..X_SRAM_TEND=100         #
#                            -D_..X_SRAM_END=10FF -D_..X_EEPROM_END=7FF        #
#                            -D_..X_CSTACK_SIZE=100 -D_..X_RSTACK_SIZE=40      #
#                            -D_..X_HEAP_SIZE=80 -D_..X_NEAR_HEAP_SIZE=80      #
#                            -ca90 -Z(CODE)INTVEC=0-(_..X_INTVEC_SIZE-1)       #
#                            -H1895 -h(CODE)0-_..X_INTVEC_SIZE                 #
#                            -Z(CODE)TINY_F=_..X_INTVEC_SIZE-_..X_FLASH_TEND   #
#                            -Z(CODE)NEAR_F,SWITCH,INITTAB,DIFUNCT=_..X_INTVEC #
#                            _SIZE-_..X_FLASH_END                              #
#                            -Z(CODE)CODE=_..X_INTVEC_SIZE-_..X_FLASH_END      #
#                            -Z(CODE)TINY_ID,NEAR_ID=_..X_INTVEC_SIZE-_..X_FLA #
#                            SH_END                                            #
#                            -Z(CODE)CHECKSUM#_..X_FLASH_END                   #
#                            -Z(DATA)TINY_I,TINY_Z,TINY_N=_..X_SRAM_BASE-_..X_ #
#                            SRAM_TEND                                         #
#                            -Z(DATA)NEAR_I,NEAR_Z,NEAR_N=_..X_SRAM_BASE-_..X_ #
#                            SRAM_END                                          #
#                            -Z(DATA)RSTACK+_..X_RSTACK_SIZE=_..X_SRAM_BASE-_. #
#                            .X_SRAM_END                                       #
#                            -Z(DATA)CSTACK+_..X_CSTACK_SIZE=_..X_SRAM_BASE-_. #
#                            .X_SRAM_END                                       #
#                            -Z(DATA)HEAP+_..X_HEAP_SIZE=_..X_SRAM_BASE-_..X_S #
#                            RAM_END                                           #
#                            -Z(DATA)IOSTREAM_N#_..X_SRAM_BASE-_..X_SRAM_END   #
#                            -Z(DATA)NEAR_HEAP+_..X_NEAR_HEAP_SIZE=_..X_SRAM_B #
#                            ASE-_..X_SRAM_END                                 #
#                            -Z(XDATA)EEPROM_I,EEPROM_N=0-_..X_EEPROM_END      #
#                            -e_PrintfSmall=_Printf                            #
#                            -e_small_write=_formatted_write                   #
#                            -e_small_write_P=_formatted_write_P               #
#                            -e_ScanfSmall=_Scanf                              #
#                            -e_medium_read=_formatted_read                    #
#                            -e_medium_read_P=_formatted_read_P -w29) -s       #
#                            __program_start                                   #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            5.0 Evaluation\avr\LIB\CLIB\cl3s-ec_mul-sf.r90"   #
#                                                                              #
#                        Copyright 1987-2008 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      00000000  Relocatable, from module : ?RESET




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  EEPROM_SIZE     = 2
  R10             = REG
  R11             = REG
  R4              = REG
  R5              = REG
  R6              = REG
  R7              = REG
  R8              = REG
  R9              = REG
  __64bit_doubles = disabled
  __cpu           = 3
  __cpu_name      = ATmega644P
  __enhanced_core = enabled
  __has_elpm      = false
  __memory_model  = 2
  __rt_version    = 3



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _..X_NEAR_HEAP_SIZE     00000080 
           _..X_HEAP_SIZE          00000080 
           _..X_RSTACK_SIZE        00000040 
           _..X_CSTACK_SIZE        00000100 
           _..X_EEPROM_END         000007FF 
           _..X_SRAM_END           000010FF 
           _..X_SRAM_TEND          00000100 
           _..X_SRAM_BASE          00000100 
           _..X_FLASH_END          0000FFFF 
           _..X_FLASH_NEND         0000FFFF 
           _..X_FLASH_TEND         000000FF 
           _..X_INTVEC_SIZE        0000007C 
    *************************************************************************

  FILE NAME : D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Alan\Release\Obj\IR.r90
  PROGRAM MODULE, NAME : IR

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 000000CE - 000000CE (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   put_c1
                                                   usart1_rx_ser
                                                   usart_tx_ser
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UDR1                 000000CE 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000CC - 000000CD (0x2 bytes), align: 0
  Segment part 2.             Intra module refs:   init_USART1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UBRR1                000000CC 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000CA - 000000CA (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   init_USART1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSR1C               000000CA 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000C9 - 000000C9 (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   init_USART1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSR1B               000000C9 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000C8 - 000000C8 (0x1 bytes), align: 0
  Segment part 5.             Intra module refs:   init_USART1
                                                   put_c1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSR1A               000000C8 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000008A - 0000008B (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   IR_36kHz
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_OCR1B                0000008A 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000088 - 00000089 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   IR_36kHz
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_OCR1A                00000088 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000086 - 00000087 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   IR_36kHz
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_ICR1                 00000086 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000081 - 00000081 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   PWM_output_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR1B               00000081 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000080 - 00000080 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   PWM_output_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR1A               00000080 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000004D0 - 0000059B (0xcc bytes), align: 1
  Segment part 24.            Intra module refs:   usart1_rx_ser::??INTVEC 112
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usart1_rx_ser           000004D0 
               interrupt function
               stack 1 = 00000000 ( 00000007 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000059C - 000005EB (0x50 bytes), align: 1
  Segment part 25.            Intra module refs:   usart_tx_ser::??INTVEC 120
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usart_tx_ser            0000059C 
               interrupt function
               stack 1 = 00000000 ( 00000005 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000005EC - 0000063B (0x50 bytes), align: 1
  Segment part 26.            Intra module refs:   put_s1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           put_c1                  000005EC 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000063C - 0000069B (0x60 bytes), align: 1
  Segment part 27.            Intra module refs:   decode_IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           put_s1                  0000063C 
               calls direct
               stack 1 = 00000000 ( 00000005 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000069C - 000006BB (0x20 bytes), align: 1
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           init_USART1             0000069C        main (main)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000006BC - 000006DB (0x20 bytes), align: 1
  Segment part 29.            Intra module refs:   decode_IR
                                                   put_s1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _calculate_crc          000006BC 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000006DC - 000006E9 (0xe bytes), align: 1
  Segment part 30.            Intra module refs:   IR_36kHz
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PWM_output_init         000006DC 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000006EA - 0000070B (0x22 bytes), align: 1
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IR_36kHz                000006EA        main (main)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           close_IR_36kHz          
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000070C - 00000735 (0x2a bytes), align: 1
  Segment part 33.            Intra module refs:   decode_IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer_IR_initial        0000070C 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000736 - 000012C9 (0xb94 bytes), align: 1
  Segment part 34.            Intra module refs:   Segment part 40
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           decode_IR               00000736        main (main)
               calls direct
               stack 1 = 00000000 ( 00000041 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000012CA - 000012F3 (0x2a bytes), align: 1
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ir_buffer_clear         000012CA        all_reception_buffer_clear (application)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000012F4 - 000018E3 (0x5f0 bytes), align: 1
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ir_pnl                  000012F4        service_main (application)
               calls direct
               stack 1 = 00000000 ( 00000018 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000003B1 - 000003B2 (0x2 bytes), align: 0
  Segment part 22.            Intra module refs:   ir_pnl
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           temp_ns                 000003B1 
    -------------------------------------------------------------------------
CODE
  Segment part 37. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           setting_diagnostic_ir   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 38. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_current_scenario_number
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000018E4 - 0000191B (0x38 bytes), align: 1
  Segment part 39.            Intra module refs:   decode_IR
                                                   ir_pnl
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           is_scenario_full        000018E4 
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001F, align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 0000001F        Segment part 0 (?EEPROM_16)
                                                   Segment part 1 (?EEPROM_16)
                                                   Segment part 8 (?EEPROM_16)
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000020, align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 00000020        __eeget16_16 (?EEPROM_16)
                                                   __eeget8_16 (?EEPROM_16)
                                                   __eeput16_16 (?EEPROM_16)
                                                   __eeput8_16 (?EEPROM_16)
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000021, align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                00000021        Segment part 1 (?EEPROM_16)
                                                   Segment part 8 (?EEPROM_16)
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000022, align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                00000022        Segment part 1 (?EEPROM_16)
                                                   Segment part 8 (?EEPROM_16)
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000073 (0x74 bytes), align: 1
  Segment part 15. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usart1_rx_ser::??INTVEC 112
                                   00000070 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000007B (0x7c bytes), align: 1
  Segment part 16. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usart_tx_ser::??INTVEC 120
                                   00000078 
    -------------------------------------------------------------------------
CSTACK
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000B23E - 0000B32D (0xf0 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 19
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE 000004C4 - 000004C9 (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 10 (decode_scs)
                                                   Segment part 11 (decode_scs_next)
                                                   Segment part 14 (decode_scs_next)
                                                   Segment part 16 (decode_scs_next)
                                                   Segment part 18 (decode_scs_next)
                                                   Segment part 19
                                                   Segment part 22 (application)
                                                   Segment part 26 (application)
                                                   Segment part 28 (application)
                                                   Segment part 30 (decode_scs_next)
                                                   Segment part 33 (decode_scs_next)
                                                   Segment part 7 (decode_scs)
                                                   Segment part 7 (decode_scs_next)
                                                   flash_KO (global_variable)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_I>
                                   000004C4 
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE 000004CA - 000004CF (0x6 bytes), align: 0
  Segment part 23.            Intra module refs:   Configurators (global_variable)
                                                   DLL (global_variable)
                                                   Delay_Time_set (global_variable)
                                                   First_detection_enable (global_variable)
                                                   KO (global_variable)
                                                   KO_conf (global_variable)
                                                   M2_timer (global_variable)
                                                   M2_timer_count (global_variable)
                                                   M2_type (global_variable)
                                                   PIR_detection_en (global_variable)
                                                   SCS_received (global_variable)
                                                   Segment part 13 (global_variable)
                                                   Segment part 20 (usart)
                                                   Segment part 31 (application)
                                                   Segment part 33 (application)
                                                   Segment part 7 (PIR)
                                                   Time_delay (global_variable)
                                                   US_detection_en (global_variable)
                                                   Usonic (US)
                                                   Walk_Through_flag (global_variable)
                                                   errno (?errno)
                                                   g_asc_reception_buffer (global_variable)
                                                   g_asc_short_buffer (global_variable)
                                                   g_ir_reception (global_variable)
                                                   g_reception_buffer (global_variable)
                                                   g_short_buffer (global_variable)
                                                   g_temp (global_variable)
                                                   modality0_delay_ms (global_variable)
                                                   motion_resutl (global_variable)
                                                   motion_total (global_variable)
                                                   pir (global_variable)
                                                   product_information (global_variable)
                                                   scs_frame (global_variable)
                                                   set_point (global_variable)
                                                   temp_ns
                                                   temp_product_information (global_variable)
                                                   temp_variable (global_variable)
                                                   tx1_buffer (global_variable)
                                                   tx1_counter (global_variable)
                                                   tx1_rd_index (global_variable)
                                                   tx1_wr_index (global_variable)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   000004CA 
    -------------------------------------------------------------------------
SWITCH
  Relative segment, address: CODE 000002BA - 000002EB (0x32 bytes), align: 1
  Segment part 40.            Intra module refs:   decode_IR
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 00000100 - 000001EF (0xf0 bytes), align: 0
  Segment part 19.            Intra module refs:   decode_IR
                                                   ir_pnl

    *************************************************************************

  FILE NAME : D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Alan\Release\Obj\PIR.r90
  PROGRAM MODULE, NAME : PIR

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000191C - 00001941 (0x26 bytes), align: 1
  Segment part 9.             Intra module refs:   PIR_detect
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PIR_SENSE_SET           0000191C 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001942 - 00001B0B (0x1ca bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PIR_detect              00001942        motion_detect (application)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000003B3 - 000003C2 (0x10 bytes), align: 0
  Segment part 7.             Intra module refs:   PIR_detect
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 1. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 8. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   

    *************************************************************************

  FILE NAME : D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Alan\Release\Obj\US.r90
  PROGRAM MODULE, NAME : US

  SEGMENTS IN THE MODULE
  ======================
NEAR_Z
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DTFLAG_STATUS           
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           INDSAMPLE_CNT           
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000003C3 - 000003F5 (0x33 bytes), align: 0
  Segment part 10.            Intra module refs:   US_SENSE_SET
                                                   Ultrasonic_detection
                                                   ultWarmUpEvents
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Usonic                  000003C3 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001B0C - 00001B31 (0x26 bytes), align: 1
  Segment part 11.            Intra module refs:   us_detection
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           US_SENSE_SET            00001B0C 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001B32 - 00001BA9 (0x78 bytes), align: 1
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ultWarmUpEvents         00001B32        function_service_init (function_service)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001BAA - 00001CED (0x144 bytes), align: 1
  Segment part 13.            Intra module refs:   us_detection
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Ultrasonic_detection    00001BAA 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001CEE - 00001CF3 (0x6 bytes), align: 1
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           us_detection            00001CEE        get_us (application)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 1. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 8. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   

    *************************************************************************

  FILE NAME : D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Alan\Release\Obj\application.r90
  PROGRAM MODULE, NAME : application

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 000000B6 - 000000B6 (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   timer2_enable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_ASSR                 000000B6 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000B4 - 000000B4 (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   timer2_enable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_OCR2B                000000B4 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000B3 - 000000B3 (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   timer2_enable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_OCR2A                000000B3 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000B2 - 000000B2 (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   timer2_enable
                                                   timer2_ovf_ser (board)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCNT2                000000B2 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000B1 - 000000B1 (0x1 bytes), align: 0
  Segment part 5.             Intra module refs:   timer2_enable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR2B               000000B1 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000B0 - 000000B0 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   timer2_enable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR2A               000000B0 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000070 - 00000070 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   timer2_enable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TIMSK2               00000070 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000006E - 0000006E (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   timer0_enable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TIMSK0               0000006E 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000047 - 00000047 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   timer0_enable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_OCR0A                00000047 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000045 - 00000045 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   timer0_enable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR0B               00000045 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000044 - 00000044 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   timer0_enable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR0A               00000044 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000035 - 00000035 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   timer0_enable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TIFR0                00000035 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000028 - 00000028 (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   Dled_light_on_ms
                                                   IO_Initial (board)
                                                   led_blinking_disable
                                                   motion_detect
                                                   scs_pnl_none_confed_master
                                                   start_conf
                                                   timer2_ovf_ser (board)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTC                00000028 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001CF4 - 00001DDF (0xec bytes), align: 1
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Mode_frame_GR           00001CF4        Check_SCS_received (function_service)
                                                   Check_frame_received (function_service)
                                                   GS_presence_send (function_service)
                                                   ON_takeline (function_service)
                                                   _Initial_state (function_service)
                                                   _Maintain_state (function_service)
                                                   _ReTrigger_State (function_service)
                                                   _Standby_state (function_service)
                                                   frame_OFF_send (function_service)
                                                   frame_ON_send (function_service)
               calls direct
               stack 1 = 00000000 ( 0000000B )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001DE0 - 00001ED1 (0xf2 bytes), align: 1
  Segment part 35.            Intra module refs:   Actuator_regulation
                                                   Dimmer_regulation
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Mode_frame_P2P          00001DE0 
               calls direct
               stack 1 = 00000000 ( 00000019 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001ED2 - 00001F9D (0xcc bytes), align: 1
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           frame_M2_answer         00001ED2        Check_SCS_received (function_service)
                                                   Function_KO128 (function_service)
                                                   decode_SCS (decode_scs)
               calls direct
               stack 1 = 00000000 ( 00000018 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001F9E - 00002017 (0x7a bytes), align: 1
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DLL_setpoint            00001F9E        Check_SCS_received (function_service)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002018 - 00002189 (0x172 bytes), align: 1
  Segment part 38.            Intra module refs:   Dimmer_regulation
                                                   daylight_set_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           factor_divcalc          00002018 
               stack 1 = 00000000 ( 00000006 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000003F6 - 000003FD (0x8 bytes), align: 0
  Segment part 31.            Intra module refs:   factor_divcalc
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           factor_mulcalc          
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000218A - 00002283 (0xfa bytes), align: 1
  Segment part 40.            Intra module refs:   Light_regulation
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Actuator_regulation     0000218A 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002284 - 000024B5 (0x232 bytes), align: 1
  Segment part 41.            Intra module refs:   Light_regulation
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Dimmer_regulation       00002284 
               calls direct
               stack 1 = 00000000 ( 00000006 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 42. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Dimmer_dec              
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000024B6 - 000024D3 (0x1e bytes), align: 1
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Light_regulation        000024B6        Function_KO168 (function_service)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000024D4 - 00002525 (0x52 bytes), align: 1
  Segment part 44.            Intra module refs:   DLL_setpoint
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           daylight_set_init       000024D4        function_service_init (function_service)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002526 - 0000259F (0x7a bytes), align: 1
  Segment part 45.            Intra module refs:   daylight_service
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PofL_calc               00002526 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000025A0 - 000027C1 (0x222 bytes), align: 1
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           daylight_service        000025A0        Function_KO128 (function_service)
                                                   Function_KO166 (function_service)
                                                   Function_KO168 (function_service)
               calls direct
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000027C2 - 00002841 (0x80 bytes), align: 1
  Segment part 47.            Intra module refs:   DLL_setpoint
                                                   daylight_service
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_dl_level            000027C2 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002842 - 0000298D (0x14c bytes), align: 1
  Segment part 48.            Intra module refs:   get_dl_level
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           real_daylight_calc      00002842 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000298E - 000029A3 (0x16 bytes), align: 1
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer0_enable           0000298E        function_service_init (function_service)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000029A4 - 000029CF (0x2c bytes), align: 1
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer2_enable           000029A4        main (main)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000029D0 - 00002A37 (0x68 bytes), align: 1
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           motion_detect           000029D0        occupancy_detect (function_service)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002A38 - 00002A6F (0x38 bytes), align: 1
  Segment part 52.            Intra module refs:   motion_detect
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_us                  00002A38 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 53. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           load_update             
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002A70 - 00002AF3 (0x84 bytes), align: 1
  Segment part 54.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           button_press_detect     00002A70        main (main)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 55. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           button_release_detect   
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002AF4 - 00003083 (0x590 bytes), align: 1
  Segment part 56.            Intra module refs:   service_main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           scs_pnl_advance_master
                                   00002AF4 
               calls direct
               stack 1 = 00000000 ( 00000014 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000003FE - 00000402 (0x5 bytes), align: 0
  Segment part 33.            Intra module refs:   scs_pnl_advance_master
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00003084 - 000033C7 (0x344 bytes), align: 1
  Segment part 57.            Intra module refs:   service_main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           scs_pnl_none_confed_master
                                   00003084 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000033C8 - 000037C7 (0x400 bytes), align: 1
  Segment part 58.            Intra module refs:   service_main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           scs_pnl_advance_slave   000033C8 
               calls direct
               stack 1 = 00000000 ( 00000014 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 59. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           scs_advance_from_none_confed
                                   
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000037C8 - 000039EB (0x224 bytes), align: 1
  Segment part 60.            Intra module refs:   service_main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           scs_pnl_none_confed_slave
                                   000037C8 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 61. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           scs_pnl_group_sensor_detector
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000039EC - 000039FF (0x14 bytes), align: 1
  Segment part 62.            Intra module refs:   button_press_detect
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           key_time_clear          000039EC 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00003A00 - 00003A41 (0x42 bytes), align: 1
  Segment part 63.            Intra module refs:   led_blinking_ms
                                                   led_blinking_normal
                                                   scs_pnl_advance_master
                                                   scs_pnl_advance_slave
                                                   scs_pnl_none_confed_master
                                                   scs_pnl_none_confed_slave
                                                   service_main
                                                   start_conf
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led_blinking            00003A00        decode_IR (IR)
                                                   ir_pnl (IR)
                                                   scs_calibration (decode_scs)
                                                   timer2_ovf_ser (board)
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00003A42 - 00003A79 (0x38 bytes), align: 1
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led_blinking_ms         00003A42        configuration_procedure (decode_scs_next)
               calls direct
               stack 1 = 00000000 ( 00000008 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00003A7A - 00003AA1 (0x28 bytes), align: 1
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Dled_light_on_ms        00003A7A        occupancy_detect (function_service)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00003AA2 - 00003ABB (0x1a bytes), align: 1
  Segment part 66.            Intra module refs:   PnL_ad_end
                                                   led_blinking_normal
                                                   scs_pnl_advance_master
                                                   scs_pnl_advance_slave
                                                   scs_pnl_none_confed_master
                                                   service_main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led_blinking_disable    00003AA2        ir_pnl (IR)
                                                   scs_calibration (decode_scs)
                                                   timer2_ovf_ser (board)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00003ABC - 00003AE5 (0x2a bytes), align: 1
  Segment part 67.            Intra module refs:   scs_pnl_advance_master
                                                   scs_pnl_advance_slave
                                                   scs_pnl_none_confed_master
                                                   scs_pnl_none_confed_slave
                                                   service_main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer_flex_initial      00003ABC        configuration_procedure (decode_scs_next)
                                                   decode_IR (IR)
                                                   id_frame (decode_scs_next)
                                                   ir_pnl (IR)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00003AE6 - 00003B0F (0x2a bytes), align: 1
  Segment part 68.            Intra module refs:   scs_pnl_advance_slave
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer_flex2_initial     00003AE6 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00003B10 - 00003B49 (0x3a bytes), align: 1
  Segment part 69.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           all_reception_buffer_clear
                                   00003B10        main (main)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00003B4A - 00003B71 (0x28 bytes), align: 1
  Segment part 70.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           manual_reception_buffer_clear
                                   00003B4A        KO_answer_frame (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   parameter_all_answer (decode_scs_next)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00003B72 - 00003E91 (0x320 bytes), align: 1
  Segment part 71.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           start_conf              00003B72        main (main)
               calls direct
               stack 1 = 00000000 ( 0000000D )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00003E92 - 00003FDB (0x14a bytes), align: 1
  Segment part 72.            Intra module refs:   scs_pnl_advance_master
                                                   scs_pnl_none_confed_master
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           factory_default         00003E92        configuration_procedure (decode_scs_next)
                                                   decode_IR (IR)
               calls direct
               stack 1 = 00000000 ( 00000035 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00003FDC - 0000412B (0x150 bytes), align: 1
  Segment part 73.            Intra module refs:   Segment part 88
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           configurator_to_KO      00003FDC        load_parameter (configuration)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000412C - 000042E7 (0x1bc bytes), align: 1
  Segment part 74.            Intra module refs:   Segment part 89
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           service_main            0000412C        main (main)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 75. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led_status_recover      
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000042E8 - 000042F5 (0xe bytes), align: 1
  Segment part 76.            Intra module refs:   scs_pnl_none_confed_master
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           frame_send_disable_automatic_control
                                   000042E8 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000042F6 - 00004303 (0xe bytes), align: 1
  Segment part 77.            Intra module refs:   PnL_NONE_end
                                                   scs_pnl_none_confed_master
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           frame_send_enable_automatic_control
                                   000042F6 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004304 - 00004311 (0xe bytes), align: 1
  Segment part 78.            Intra module refs:   scs_pnl_none_confed_master
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           frame_send_start_pnl_none_group_confed
                                   00004304 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004312 - 0000434B (0x3a bytes), align: 1
  Segment part 79.            Intra module refs:   scs_pnl_none_confed_master
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           frame_send_start_pnl_group_confed
                                   00004312 
               calls direct
               stack 1 = 00000000 ( 00000014 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000434C - 00004359 (0xe bytes), align: 1
  Segment part 80.            Intra module refs:   PnL_NONE_end
                                                   scs_pnl_none_confed_master
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           frame_send_end_pnl      0000434C 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000435A - 00004367 (0xe bytes), align: 1
  Segment part 81.            Intra module refs:   scs_pnl_none_confed_master
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           frame_send_group_request
                                   0000435A 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004368 - 000043E9 (0x82 bytes), align: 1
  Segment part 82.            Intra module refs:   PnL_NONE_end
                                                   scs_pnl_advance_slave
                                                   scs_pnl_none_confed_master
                                                   scs_pnl_none_confed_slave
                                                   service_main
                                                   start_conf
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led_blinking_normal     00004368        configuration_procedure (decode_scs_next)
                                                   configuration_receive_answer_frame (decode_scs_next)
                                                   decode_IR (IR)
               calls direct
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000043EA - 00004461 (0x78 bytes), align: 1
  Segment part 83.            Intra module refs:   scs_pnl_none_confed_master
                                                   scs_pnl_none_confed_slave
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           load_default_advance_parameter
                                   000043EA 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004462 - 0000448B (0x2a bytes), align: 1
  Segment part 84.            Intra module refs:   scs_pnl_advance_master
                                                   scs_pnl_none_confed_master
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led_blinking_stage2_initial
                                   00004462 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000448C - 000044F1 (0x66 bytes), align: 1
  Segment part 85.            Intra module refs:   scs_pnl_advance_master
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PnL_ad_end              0000448C        timer2_ovf_ser (board)
               calls direct
               stack 1 = 00000000 ( 00000014 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000044F2 - 00004507 (0x16 bytes), align: 1
  Segment part 86.            Intra module refs:   scs_pnl_none_confed_master
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PnL_NONE_end            000044F2        timer2_ovf_ser (board)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004508 - 00004533 (0x2c bytes), align: 1
  Segment part 87.            Intra module refs:   Actuator_regulation
                                                   Dimmer_regulation
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           regulation_timer_initial
                                   00004508        Check_SCS_received (function_service)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 14. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 15. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 16. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 17. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000B32E - 0000B38C (0x5f bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 22
    -------------------------------------------------------------------------
INITTAB
  Segment part 24. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_I>
                                   
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000B38D - 0000B3A3 (0x17 bytes), align: 0
  Segment part 27.            Intra module refs:   Segment part 26
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000B3A4 - 0000B3C5 (0x22 bytes), align: 0
  Segment part 29.            Intra module refs:   Segment part 28
    -------------------------------------------------------------------------
INITTAB
  Segment part 32. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   
    -------------------------------------------------------------------------
SWITCH
  Relative segment, address: CODE 000002EC - 00000305 (0x1a bytes), align: 1
  Segment part 88.            Intra module refs:   configurator_to_KO
    -------------------------------------------------------------------------
SWITCH
  Relative segment, address: CODE 00000306 - 0000031F (0x1a bytes), align: 1
  Segment part 89.            Intra module refs:   service_main
    -------------------------------------------------------------------------
NEAR_F
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 000001F0 - 0000024E (0x5f bytes), align: 0
  Segment part 22.            Intra module refs:   PnL_ad_end
                                                   frame_send_disable_automatic_control
                                                   frame_send_enable_automatic_control
                                                   frame_send_end_pnl
                                                   frame_send_group_request
                                                   frame_send_start_pnl_none_group_confed
                                                   scs_pnl_advance_master
                                                   scs_pnl_advance_slave
                                                   scs_pnl_none_confed_master
                                                   scs_pnl_none_confed_slave
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 0000024F - 00000265 (0x17 bytes), align: 0
  Segment part 26.            Intra module refs:   start_conf
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 00000266 - 00000287 (0x22 bytes), align: 0
  Segment part 28.            Intra module refs:   service_main
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000007C - 0000008C (0x11 bytes), align: 0
  Segment part 21.            Intra module refs:   scs_pnl_advance_master
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000008D - 0000009D (0x11 bytes), align: 0
  Segment part 25.            Intra module refs:   scs_pnl_advance_slave
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000009E - 000000AE (0x11 bytes), align: 0
  Segment part 30.            Intra module refs:   frame_send_start_pnl_group_confed

    *************************************************************************

  FILE NAME : D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Alan\Release\Obj\board.r90
  PROGRAM MODULE, NAME : board

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Segment part 1. TENTATIVE. Used definition from application
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCNT2                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_OCR1B                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_OCR1A                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_ICR1                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCNT1                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 6. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR1B               
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 7. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR1A               
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000007E - 0000007E (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   adc_initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DIDR0                0000007E 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000007C - 0000007C (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   adc_initial
                                                   read_adc10bit
                                                   read_adc8bit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_ADMUX                0000007C 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000007A - 0000007A (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   adc_initial
                                                   read_adc10bit
                                                   read_adc8bit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_ADCSRA               0000007A 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000078 - 00000079 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   read_adc10bit
                                                   read_adc8bit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_ADC                  00000078 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PRR                  
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000060 - 00000060 (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   WDT_off
                                                   system_reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_WDTCSR               00000060 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000054 - 00000054 (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   WDT_off
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_MCUSR                00000054 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000002B - 0000002B (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   IO_Initial
                                                   timer2_ovf_ser
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTD                0000002B 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000002A - 0000002A (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   IO_Initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRD                 0000002A 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 17. TENTATIVE. Used definition from application
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTC                
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000027 - 00000027 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   IO_Initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRC                 00000027 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000025 - 00000025 (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   IO_Initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTB                00000025 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000024 - 00000024 (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   IO_Initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRB                 00000024 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000023 - 00000023 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   get_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PINB                 00000023 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000022 - 00000022 (0x1 bytes), align: 0
  Segment part 22.            Intra module refs:   IO_Initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTA                00000022 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000021 - 00000021 (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   IO_Initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRA                 00000021 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004534 - 0000453F (0xc bytes), align: 1
  Segment part 33.            Intra module refs:   timer0_ovf_ser::??INTVEC 64
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer0_ovf_ser          00004534 
               interrupt function
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004540 - 00004D45 (0x806 bytes), align: 1
  Segment part 34.            Intra module refs:   timer2_ovf_ser::??INTVEC 44
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer2_ovf_ser          00004540 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 00000012 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004D46 - 00004D79 (0x34 bytes), align: 1
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IO_Initial              00004D46        main (main)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004D7A - 00004D9B (0x22 bytes), align: 1
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           delay_ms                00004D7A        DLL_setpoint (application)
                                                   org_ext_broad (decode_scs_next)
                                                   put_s1 (IR)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_advance_slave (application)
                                                   scs_pnl_none_confed_slave (application)
                                                   send_frame_pp (decode_scs_next)
                                                   send_frame_pp_broad (decode_scs_next)
                                                   send_frame_pp_ext_broad (decode_scs_next)
                                                   start_conf (application)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004D9C - 00004DBB (0x20 bytes), align: 1
  Segment part 37.            Intra module refs:   read_adc10bit
                                                   read_adc8bit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           delay_us                00004D9C        get_us (application)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 38. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           delay_ms_1              
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           buzzer                  
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004DBC - 00004DDD (0x22 bytes), align: 1
  Segment part 40.            Intra module refs:   timer2_ovf_ser
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           not_bit                 00004DBC 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004DDE - 00004E2B (0x4e bytes), align: 1
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           StrToChar               00004DDE        configuration_answer_frame (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   decode_IR (IR)
                                                   decode_SCS (decode_scs)
                                                   decode_id (decode_scs)
                                                   function_service (function_service)
                                                   is_gateway_busy (decode_scs)
                                                   load_parameter (configuration)
                                                   scs_pnl_advance_master (application)
                                                   start_conf (application)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004E2C - 00004E6B (0x40 bytes), align: 1
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CharToStr               00004E2C        Dimmer_regulation (application)
                                                   KO_answer_frame (decode_scs_next)
                                                   KO_setting_error_frame (decode_scs_next)
                                                   Mode_frame_GR (application)
                                                   Mode_frame_P2P (application)
                                                   PnL_ad_end (application)
                                                   address_setting_error_frame (decode_scs_next)
                                                   configuration_answer_frame (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   decode_IR (IR)
                                                   frame_M2_answer (application)
                                                   frame_on_off (function_service)
                                                   frame_presence (function_service)
                                                   frame_send_start_pnl_group_confed (application)
                                                   ir_pnl (IR)
                                                   not_allowed_response (decode_scs_next)
                                                   parameter_all_answer (decode_scs_next)
                                                   parameter_setting_error_answer (decode_scs_next)
                                                   parameter_specified_index_answer (decode_scs_next)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_advance_slave (application)
                                                   send_aux_frame (decode_scs_next)
                                                   send_frame_pp_ext_broad (decode_scs_next)
                                                   send_group_frame (decode_scs_next)
                                                   send_group_pnl_frame (decode_scs_next)
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004E6C - 00004E95 (0x2a bytes), align: 1
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           buzzer_ms               00004E6C        DLL_setpoint (application)
                                                   Delay_Alert (function_service)
                                                   decode_IR (IR)
                                                   main (main)
                                                   scs_calibration (decode_scs)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004E96 - 00004EA1 (0xc bytes), align: 1
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_key                 00004E96        button_press_detect (application)
                                                   service_main (application)
                                                   start_conf (application)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004EA2 - 00004EA3 (0x2 bytes), align: 1
  Segment part 45.            Intra module refs:   timer1_ovf_ser::??INTVEC 60
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer1_ovf_ser          00004EA2 
               interrupt function
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 46. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_PIR_trigger         
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 47. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_US_trigger          
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 48. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer1_initial          
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004EA4 - 00004EC1 (0x1e bytes), align: 1
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           adc_initial             00004EA4        main (main)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004EC2 - 00004EFD (0x3c bytes), align: 1
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           read_adc10bit           00004EC2        get_dl_level (application)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004EFE - 00004F2D (0x30 bytes), align: 1
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           read_adc8bit            00004EFE        PIR_detect (PIR)
                                                   Ultrasonic_detection (US)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004F2E - 00004F3B (0xe bytes), align: 1
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           system_reset            00004F2E        configuration_procedure (decode_scs_next)
                                                   decode_IR (IR)
                                                   id_frame (decode_scs_next)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_none_confed_master (application)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004F3C - 00004F53 (0x18 bytes), align: 1
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WDT_off                 00004F3C        main (main)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 24. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 25. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 26. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 27. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000002F (0x30 bytes), align: 1
  Segment part 28. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer2_ovf_ser::??INTVEC 44
                                   0000002C 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000003F (0x40 bytes), align: 1
  Segment part 29. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer1_ovf_ser::??INTVEC 60
                                   0000003C 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000043 (0x44 bytes), align: 1
  Segment part 30. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer0_ovf_ser::??INTVEC 64
                                   00000040 
    -------------------------------------------------------------------------
CSTACK
  Segment part 31. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 32. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Alan\Release\Obj\configuration.r90
  PROGRAM MODULE, NAME : configuration

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           configuration_read      
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           power_up_configuration
                                   
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           load_default_parameter
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004F54 - 00004FF7 (0xa4 bytes), align: 1
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           remember_parameter      00004F54        configuration_procedure (decode_scs_next)
               calls direct
               stack 1 = 00000000 ( 0000003A )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004FF8 - 00005177 (0x180 bytes), align: 1
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           load_parameter          00004FF8        main (main)
               calls direct
               stack 1 = 00000000 ( 00000005 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005178 - 0000519B (0x24 bytes), align: 1
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ID_setting              00005178        id_frame (decode_scs_next)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000519C - 00005277 (0xdc bytes), align: 1
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           configuration_checking
                                   0000519C        configuration_setting_frame (decode_scs_next)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005278 - 0000555F (0x2e8 bytes), align: 1
  Segment part 18.            Intra module refs:   Segment part 25
                                                   Segment part 26
                                                   remember_parameter
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           write_KO                00005278        configuration_setting_frame (decode_scs_next)
                                                   decode_IR (IR)
                                                   scs_calibration (decode_scs)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005560 - 0000580F (0x2b0 bytes), align: 1
  Segment part 19.            Intra module refs:   Segment part 27
                                                   Segment part 28
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           write_ee_KO             00005560        decode_IR (IR)
                                                   scs_calibration (decode_scs)
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005810 - 000059D9 (0x1ca bytes), align: 1
  Segment part 20.            Intra module refs:   Segment part 29
                                                   Segment part 30
                                                   remember_parameter
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           read_KO                 00005810        decode_IR (IR)
                                                   parameter_all_answer (decode_scs_next)
                                                   parameter_specified_index_answer (decode_scs_next)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000059DA - 00005ADF (0x106 bytes), align: 1
  Segment part 21.            Intra module refs:   load_parameter
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KO_parameter_initial    000059DA        configuration_procedure (decode_scs_next)
                                                   load_default_advance_parameter (application)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005AE0 - 00005C0F (0x130 bytes), align: 1
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KO_parameter_initial_temp
                                   00005AE0        KO_setting_procedure (decode_scs_next)
                                                   factory_default (application)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005C10 - 00005CAD (0x9e bytes), align: 1
  Segment part 23.            Intra module refs:   KO_parameter_initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           write_moudle_parameter
                                   00005C10 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005CAE - 00005D0B (0x5e bytes), align: 1
  Segment part 24.            Intra module refs:   KO_parameter_initial_temp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           write_moudle_parameter_temp
                                   00005CAE 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 1. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_ID
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 9. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_I>
                                   
    -------------------------------------------------------------------------
SWITCH
  Relative segment, address: CODE 00000320 - 00000369 (0x4a bytes), align: 1
  Segment part 25.            Intra module refs:   write_KO
    -------------------------------------------------------------------------
SWITCH
  Relative segment, address: CODE 0000036A - 000003A3 (0x3a bytes), align: 1
  Segment part 26.            Intra module refs:   write_KO
    -------------------------------------------------------------------------
SWITCH
  Relative segment, address: CODE 000003A4 - 000003ED (0x4a bytes), align: 1
  Segment part 27.            Intra module refs:   write_ee_KO
    -------------------------------------------------------------------------
SWITCH
  Relative segment, address: CODE 000003EE - 00000427 (0x3a bytes), align: 1
  Segment part 28.            Intra module refs:   write_ee_KO
    -------------------------------------------------------------------------
SWITCH
  Relative segment, address: CODE 00000428 - 00000471 (0x4a bytes), align: 1
  Segment part 29.            Intra module refs:   read_KO
    -------------------------------------------------------------------------
SWITCH
  Relative segment, address: CODE 00000472 - 000004AB (0x3a bytes), align: 1
  Segment part 30.            Intra module refs:   read_KO
    -------------------------------------------------------------------------
NEAR_I
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_F
  Segment part 10. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Alan\Release\Obj\decode_scs.r90
  PROGRAM MODULE, NAME : decode_scs

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00005D0C - 00005D65 (0x5a bytes), align: 1
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reception_buffer_clear
                                   00005D0C        all_reception_buffer_clear (application)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005D66 - 00005EB7 (0x152 bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           decode_id               00005D66        main (main)
               calls direct
               stack 1 = 00000000 ( 00000008 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005EB8 - 00006585 (0x6ce bytes), align: 1
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           decode_SCS              00005EB8        main (main)
               calls direct
               stack 1 = 00000000 ( 00000019 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00006586 - 00006607 (0x82 bytes), align: 1
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           is_gateway_busy         00006586        org_ext_broad (decode_scs_next)
                                                   send_frame_pp (decode_scs_next)
                                                   send_frame_pp_broad (decode_scs_next)
                                                   send_frame_pp_ext_broad (decode_scs_next)
                                                   start_conf (application)
               calls direct
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00006608 - 00006895 (0x28e bytes), align: 1
  Segment part 16.            Intra module refs:   Segment part 19
                                                   decode_SCS
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sensor_GR_decode        00006608 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           calibration_decode      
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00006896 - 000069E7 (0x152 bytes), align: 1
  Segment part 18.            Intra module refs:   decode_SCS
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           scs_calibration         00006896 
               calls direct
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 1. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000B3C6 - 0000B3D6 (0x11 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
INITTAB
  Segment part 9. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_I>
                                   
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000B3D7 - 0000B3F8 (0x22 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 10
    -------------------------------------------------------------------------
SWITCH
  Relative segment, address: CODE 000004AC - 000004C3 (0x18 bytes), align: 1
  Segment part 19.            Intra module refs:   sensor_GR_decode
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 00000288 - 00000298 (0x11 bytes), align: 0
  Segment part 7.             Intra module refs:   decode_id
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 00000299 - 000002BA (0x22 bytes), align: 0
  Segment part 10.            Intra module refs:   decode_SCS

    *************************************************************************

  FILE NAME : D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Alan\Release\Obj\decode_scs_next.r90
  PROGRAM MODULE, NAME : decode_scs_next

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 000069E8 - 00006A53 (0x6c bytes), align: 1
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           send_frame_pp           000069E8        frame_on_off (function_service)
               calls direct
               stack 1 = 00000000 ( 00000011 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00006A54 - 00006ABF (0x6c bytes), align: 1
  Segment part 36.            Intra module refs:   send_aux_frame
                                                   send_group_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           send_frame_pp_broad     00006A54        Mode_frame_GR (application)
                                                   PnL_ad_end (application)
                                                   decode_IR (IR)
                                                   frame_presence (function_service)
                                                   frame_send_disable_automatic_control (application)
                                                   frame_send_enable_automatic_control (application)
                                                   ir_pnl (IR)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_advance_slave (application)
                                                   scs_pnl_none_confed_master (application)
                                                   scs_pnl_none_confed_slave (application)
               calls direct
               stack 1 = 00000000 ( 00000011 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 37. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           send_frame_pp_ext       
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00006AC0 - 00006B8F (0xd0 bytes), align: 1
  Segment part 38.            Intra module refs:   KO_answer_frame
                                                   KO_setting_error_frame
                                                   address_answer_frame
                                                   address_setting_error_frame
                                                   configuration_answer_frame
                                                   configuration_procedure
                                                   configuration_receive_answer_frame
                                                   configuration_setting_frame
                                                   diagnostic_frame
                                                   id_frame
                                                   not_allowed_response
                                                   parameter_all_answer
                                                   parameter_request_error_frame
                                                   parameter_setting_error_answer
                                                   parameter_specified_index_answer
                                                   send_group_frame
                                                   send_group_pnl_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           send_frame_pp_ext_broad
                                   00006AC0        PnL_ad_end (application)
                                                   decode_IR (IR)
                                                   decode_SCS (decode_scs)
                                                   decode_id (decode_scs)
                                                   frame_M2_answer (application)
                                                   frame_send_end_pnl (application)
                                                   frame_send_group_request (application)
                                                   frame_send_start_pnl_group_confed (application)
                                                   frame_send_start_pnl_none_group_confed (application)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_advance_slave (application)
                                                   service_main (application)
               calls direct
               stack 1 = 00000000 ( 0000001C )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00006B90 - 00006BF7 (0x68 bytes), align: 1
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           org_ext_broad           00006B90        Mode_frame_P2P (application)
               calls direct
               stack 1 = 00000000 ( 00000019 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00006BF8 - 00007019 (0x422 bytes), align: 1
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           id_frame                00006BF8        decode_SCS (decode_scs)
                                                   decode_id (decode_scs)
               calls direct
               stack 1 = 00000000 ( 00000011 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 000002BB - 000002D4 (0x1a bytes), align: 0
  Segment part 7.             Intra module refs:   id_frame
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 000002D5 - 00000307 (0x33 bytes), align: 0
  Segment part 11.            Intra module refs:   configuration_setting_frame
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 00000308 - 00000318 (0x11 bytes), align: 0
  Segment part 14.            Intra module refs:   configuration_answer_frame
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 00000319 - 0000033A (0x22 bytes), align: 0
  Segment part 16.            Intra module refs:   configuration_receive_answer_frame
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 0000033B - 00000370 (0x36 bytes), align: 0
  Segment part 18.            Intra module refs:   KO_answer_frame
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 00000371 - 000003A3 (0x33 bytes), align: 0
  Segment part 30.            Intra module refs:   configuration_procedure
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 000003A4 - 000003AC (0x9 bytes), align: 0
  Segment part 33.            Intra module refs:   id_frame
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           parameter_set           
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000701A - 00007091 (0x78 bytes), align: 1
  Segment part 42.            Intra module refs:   id_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           diagnostic_frame        0000701A        service_main (application)
               calls direct
               stack 1 = 00000000 ( 00000011 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00007092 - 00007319 (0x288 bytes), align: 1
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           configuration_setting_frame
                                   00007092        decode_SCS (decode_scs)
               calls direct
               stack 1 = 00000000 ( 00000013 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000731A - 00007593 (0x27a bytes), align: 1
  Segment part 44.            Intra module refs:   configuration_setting_frame
                                                   diagnostic_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           configuration_answer_frame
                                   0000731A        decode_SCS (decode_scs)
               calls direct
               stack 1 = 00000000 ( 00000020 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00007594 - 000075DD (0x4a bytes), align: 1
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           configuration_receive_answer_frame
                                   00007594        decode_SCS (decode_scs)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000075DE - 000077AF (0x1d2 bytes), align: 1
  Segment part 46.            Intra module refs:   address_answer_frame
                                                   address_setting_error_frame
                                                   configuration_answer_frame
                                                   configuration_setting_frame
                                                   ko_answer_all
                                                   parameter_specified_index_answer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KO_answer_frame         000075DE 
               calls direct
               stack 1 = 00000000 ( 00000018 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000077B0 - 000077FF (0x50 bytes), align: 1
  Segment part 47.            Intra module refs:   configuration_answer_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           parameter_answer_frame
                                   000077B0 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00007800 - 0000783B (0x3c bytes), align: 1
  Segment part 48.            Intra module refs:   address_answer_frame
                                                   address_setting_error_frame
                                                   diagnostic_frame
                                                   parameter_all_answer
                                                   parameter_specified_index_answer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           frame_buffer_clear      00007800 
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000783C - 00007877 (0x3c bytes), align: 1
  Segment part 49.            Intra module refs:   parameter_specified_index_answer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           parameter_request_error_frame
                                   0000783C 
               calls direct
               stack 1 = 00000000 ( 00000011 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00007878 - 000078F1 (0x7a bytes), align: 1
  Segment part 50.            Intra module refs:   parameter_all_answer
                                                   parameter_specified_index_answer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           not_allowed_response    00007878 
               calls direct
               stack 1 = 00000000 ( 00000014 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000078F2 - 00007C91 (0x3a0 bytes), align: 1
  Segment part 51.            Intra module refs:   parameter_answer_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           parameter_all_answer    000078F2 
               calls direct
               stack 1 = 00000000 ( 00000018 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00007C92 - 000080CB (0x43a bytes), align: 1
  Segment part 52.            Intra module refs:   parameter_answer_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           parameter_specified_index_answer
                                   00007C92 
               calls direct
               stack 1 = 00000000 ( 00000018 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000080CC - 000081D9 (0x10e bytes), align: 1
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           send_aux_frame          000080CC        decode_IR (IR)
               calls direct
               stack 1 = 00000000 ( 00000011 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000081DA - 0000823F (0x66 bytes), align: 1
  Segment part 54.            Intra module refs:   configuration_procedure
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           send_group_pnl_frame    000081DA        PnL_ad_end (application)
                                                   decode_IR (IR)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_advance_slave (application)
                                                   scs_pnl_none_confed_master (application)
                                                   scs_pnl_none_confed_slave (application)
               calls direct
               stack 1 = 00000000 ( 00000018 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00008240 - 00008255 (0x16 bytes), align: 1
  Segment part 55.            Intra module refs:   address_answer_frame
                                                   address_setting_error_frame
                                                   diagnostic_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ko_answer_all           00008240 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00008256 - 00008353 (0xfe bytes), align: 1
  Segment part 56.            Intra module refs:   configuration_answer_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           address_answer_frame    00008256 
               calls direct
               stack 1 = 00000000 ( 00000013 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00008354 - 00008455 (0x102 bytes), align: 1
  Segment part 57.            Intra module refs:   configuration_setting_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           address_setting_error_frame
                                   00008354 
               calls direct
               stack 1 = 00000000 ( 00000016 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00008456 - 00008495 (0x40 bytes), align: 1
  Segment part 58.            Intra module refs:   send_aux_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dimmer_convert          00008456 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00008496 - 0000853F (0xaa bytes), align: 1
  Segment part 59.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           send_group_frame        00008496        decode_IR (IR)
               calls direct
               stack 1 = 00000000 ( 0000001E )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00008540 - 0000860B (0xcc bytes), align: 1
  Segment part 60.            Intra module refs:   configuration_setting_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           write_parameter_scenario
                                   00008540 
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000860C - 00008711 (0x106 bytes), align: 1
  Segment part 61.            Intra module refs:   configuration_setting_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           parameter_setting_error_answer
                                   0000860C 
               calls direct
               stack 1 = 00000000 ( 00000018 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00008712 - 000088BB (0x1aa bytes), align: 1
  Segment part 62.            Intra module refs:   configuration_setting_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KO_setting_procedure    00008712 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000088BC - 00009053 (0x798 bytes), align: 1
  Segment part 63.            Intra module refs:   configuration_setting_frame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           configuration_procedure
                                   000088BC 
               calls direct
               stack 1 = 00000000 ( 0000004E )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009054 - 000090AF (0x5c bytes), align: 1
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aux_procedure           00009054        decode_SCS (decode_scs)
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000090B0 - 0000910F (0x60 bytes), align: 1
  Segment part 65.            Intra module refs:   aux_procedure
                                                   configuration_procedure
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           scenario_remove         000090B0 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009110 - 000091A7 (0x98 bytes), align: 1
  Segment part 66.            Intra module refs:   KO_setting_procedure
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KO_setting_error_frame
                                   00009110 
               calls direct
               stack 1 = 00000000 ( 00000016 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 1. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000B3F9 - 0000B412 (0x1a bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
INITTAB
  Segment part 9. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_I>
                                   
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000B413 - 0000B445 (0x33 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 11
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000B446 - 0000B456 (0x11 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000B457 - 0000B478 (0x22 bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 16
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000B479 - 0000B4AE (0x36 bytes), align: 0
  Segment part 19.            Intra module refs:   Segment part 18
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000B4AF - 0000B4E1 (0x33 bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 30
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000B4E2 - 0000B4EA (0x9 bytes), align: 0
  Segment part 34.            Intra module refs:   Segment part 33
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000000AF - 000000BF (0x11 bytes), align: 0
  Segment part 10.            Intra module refs:   diagnostic_frame
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000000C0 - 000000D0 (0x11 bytes), align: 0
  Segment part 13.            Intra module refs:   configuration_answer_frame
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000000D1 - 000000E1 (0x11 bytes), align: 0
  Segment part 20.            Intra module refs:   parameter_request_error_frame
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000000E2 - 000000F2 (0x11 bytes), align: 0
  Segment part 21.            Intra module refs:   not_allowed_response
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000000F3 - 00000103 (0x11 bytes), align: 0
  Segment part 22.            Intra module refs:   parameter_all_answer
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000104 - 00000114 (0x11 bytes), align: 0
  Segment part 23.            Intra module refs:   parameter_specified_index_answer
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000115 - 0000011D (0x9 bytes), align: 0
  Segment part 24.            Intra module refs:   send_aux_frame
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000011E - 0000012E (0x11 bytes), align: 0
  Segment part 25.            Intra module refs:   send_group_pnl_frame
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000012F - 0000013F (0x11 bytes), align: 0
  Segment part 26.            Intra module refs:   address_answer_frame
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000140 - 00000150 (0x11 bytes), align: 0
  Segment part 27.            Intra module refs:   address_setting_error_frame
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000151 - 0000016A (0x1a bytes), align: 0
  Segment part 28.            Intra module refs:   send_group_frame
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000016B - 0000017B (0x11 bytes), align: 0
  Segment part 29.            Intra module refs:   parameter_setting_error_answer
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000017C - 0000018C (0x11 bytes), align: 0
  Segment part 32.            Intra module refs:   KO_setting_error_frame

    *************************************************************************

  FILE NAME : D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Alan\Release\Obj\function_modality.r90
  PROGRAM MODULE, NAME : function_modality

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           modality_service        
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           modality_0_initial      
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           modality_0              
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           modality_1              
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           modality_2              
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           modality_3              
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           modality_4              
               not allocated function
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 1. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 6. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Alan\Release\Obj\function_service.r90
  PROGRAM MODULE, NAME : function_service

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 000091A8 - 000091DD (0x36 bytes), align: 1
  Segment part 7.             Intra module refs:   Function_KO128
                                                   Function_KO166
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           check_modality_frame    000091A8 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000091DE - 00009219 (0x3c bytes), align: 1
  Segment part 8.             Intra module refs:   Function_KO128
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           frame_presence          000091DE 
               calls direct
               stack 1 = 00000000 ( 0000000B )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000921A - 000092C1 (0xa8 bytes), align: 1
  Segment part 9.             Intra module refs:   Check_frame_received
                                                   check_modality_frame
                                                   frame_OFF_send
                                                   frame_ON_send
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           frame_on_off            0000921A 
               calls direct
               stack 1 = 00000000 ( 0000000B )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000092C2 - 000092F5 (0x34 bytes), align: 1
  Segment part 10.            Intra module refs:   Call_detect_delay
                                                   Check_SCS_received
                                                   Check_frame_received
                                                   Function_KO128
                                                   WT_20s_detect
                                                   _Initial_state
                                                   _Maintain_state
                                                   _ReTrigger_State
                                                   _Standby_state
                                                   function_service_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Start_Time_Delay        000092C2 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000092F6 - 0000930D (0x18 bytes), align: 1
  Segment part 11.            Intra module refs:   Check_SCS_received
                                                   Check_frame_received
                                                   _Maintain_state
                                                   _ReTrigger_State
                                                   _Standby_state
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Stop_allTimer           000092F6 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000930E - 0000935F (0x52 bytes), align: 1
  Segment part 12.            Intra module refs:   Check_SCS_received
                                                   Check_frame_received
                                                   ON_takeline
                                                   _Initial_state
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Call_detect_delay       0000930E 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009360 - 00009411 (0xb2 bytes), align: 1
  Segment part 13.            Intra module refs:   Check_SCS_received
                                                   _Maintain_state
                                                   _Standby_state
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WT_20s_detect           00009360 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009412 - 0000943F (0x2e bytes), align: 1
  Segment part 14.            Intra module refs:   _Initial_state
                                                   _Maintain_state
                                                   _ReTrigger_State
                                                   _Standby_state
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GS_presence_send        00009412 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009440 - 00009471 (0x32 bytes), align: 1
  Segment part 15.            Intra module refs:   Check_SCS_received
                                                   Check_frame_received
                                                   ON_takeline
                                                   _Initial_state
                                                   _ReTrigger_State
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           frame_ON_send           00009440 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009472 - 000094AD (0x3c bytes), align: 1
  Segment part 16.            Intra module refs:   OFF_takeline
                                                   _Initial_state
                                                   _Maintain_state
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           frame_OFF_send          00009472 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000094AE - 0000951F (0x72 bytes), align: 1
  Segment part 17.            Intra module refs:   Function_KO119
                                                   _Maintain_state
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Delay_Alert             000094AE 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009520 - 00009569 (0x4a bytes), align: 1
  Segment part 18.            Intra module refs:   _Initial_state
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ON_takeline             00009520 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000956A - 00009591 (0x28 bytes), align: 1
  Segment part 19.            Intra module refs:   _Initial_state
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OFF_takeline            0000956A 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009592 - 00009707 (0x176 bytes), align: 1
  Segment part 20.            Intra module refs:   Function_LM_GR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Check_frame_received    00009592 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009708 - 00009BB5 (0x4ae bytes), align: 1
  Segment part 21.            Intra module refs:   Check_frame_received
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Check_SCS_received      00009708 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009BB6 - 00009C6B (0xb6 bytes), align: 1
  Segment part 22.            Intra module refs:   Function_KO119
                                                   Function_KO128
                                                   Function_KO168
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           occupancy_detect        00009BB6 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009C6C - 00009DA7 (0x13c bytes), align: 1
  Segment part 23.            Intra module refs:   Function_LM_GR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Initial_state          00009C6C 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009DA8 - 00009ED7 (0x130 bytes), align: 1
  Segment part 24.            Intra module refs:   Function_LM_GR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Maintain_state         00009DA8 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009ED8 - 00009F49 (0x72 bytes), align: 1
  Segment part 25.            Intra module refs:   Function_LM_GR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ReTrigger_State        00009ED8 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009F4A - 00009FD5 (0x8c bytes), align: 1
  Segment part 26.            Intra module refs:   Function_LM_GR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Standby_state          00009F4A 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00009FD6 - 0000A069 (0x94 bytes), align: 1
  Segment part 27.            Intra module refs:   Function_KO119
                                                   Function_KO168
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Function_LM_GR          00009FD6 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A06A - 0000A089 (0x20 bytes), align: 1
  Segment part 28.            Intra module refs:   function_service
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Function_KO119          0000A06A 
               calls direct
               stack 1 = 00000000 ( 00000001 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A08A - 0000A163 (0xda bytes), align: 1
  Segment part 29.            Intra module refs:   function_service
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Function_KO128          0000A08A 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A164 - 0000A1AB (0x48 bytes), align: 1
  Segment part 30.            Intra module refs:   function_service
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Function_KO166          0000A164 
               calls direct
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A1AC - 0000A1C1 (0x16 bytes), align: 1
  Segment part 31.            Intra module refs:   function_service
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Function_KO168          0000A1AC 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A1C2 - 0000A313 (0x152 bytes), align: 1
  Segment part 32.            Intra module refs:   function_service
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           function_service_init   0000A1C2 
               calls direct
               stack 1 = 00000000 ( 00000008 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A314 - 0000A3BD (0xaa bytes), align: 1
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           function_service        0000A314        service_main (application)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 1. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 6. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Alan\Release\Obj\global_variable.r90
  PROGRAM MODULE, NAME : global_variable

  SEGMENTS IN THE MODULE
  ======================
NEAR_Z
  Relative segment, address: DATA 00000403 - 00000403 (0x1 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           g_temp                  00000403        read_adc10bit (board)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000404 - 000004F3 (0xf0 bytes), align: 0
  Segment part 9.             Intra module refs:   global_variable_initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           scs_frame               00000404        all_reception_buffer_clear (application)
                                                   decode_SCS (decode_scs)
                                                   decode_id (decode_scs)
                                                   frame_buffer_clear (decode_scs_next)
                                                   is_gateway_busy (decode_scs)
                                                   manual_reception_buffer_clear (application)
                                                   usart0_rx_ser (usart)
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           g_configurator          
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000004F4 - 000004F9 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Configurators           000004F4        configuration_answer_frame (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   configurator_to_KO (application)
                                                   remember_parameter (configuration)
                                                   start_conf (application)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000004FA - 0000052B (0x32 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KO_conf                 000004FA        Call_detect_delay (function_service)
                                                   Check_SCS_received (function_service)
                                                   Check_frame_received (function_service)
                                                   Delay_Alert (function_service)
                                                   Dimmer_regulation (application)
                                                   Function_KO119 (function_service)
                                                   Function_KO128 (function_service)
                                                   Function_KO168 (function_service)
                                                   Function_LM_GR (function_service)
                                                   GS_presence_send (function_service)
                                                   KO_parameter_initial_temp (configuration)
                                                   Light_regulation (application)
                                                   Mode_frame_GR (application)
                                                   Mode_frame_P2P (application)
                                                   ON_takeline (function_service)
                                                   PIR_SENSE_SET (PIR)
                                                   PnL_ad_end (application)
                                                   PofL_calc (application)
                                                   US_SENSE_SET (US)
                                                   _Initial_state (function_service)
                                                   _Maintain_state (function_service)
                                                   _ReTrigger_State (function_service)
                                                   _Standby_state (function_service)
                                                   configuration_procedure (decode_scs_next)
                                                   daylight_service (application)
                                                   decode_IR (IR)
                                                   decode_SCS (decode_scs)
                                                   factory_default (application)
                                                   frame_M2_answer (application)
                                                   frame_OFF_send (function_service)
                                                   frame_ON_send (function_service)
                                                   frame_on_off (function_service)
                                                   frame_presence (function_service)
                                                   frame_send_start_pnl_group_confed (application)
                                                   function_service (function_service)
                                                   function_service_init (function_service)
                                                   get_dl_level (application)
                                                   load_default_advance_parameter (application)
                                                   load_parameter (configuration)
                                                   main (main)
                                                   occupancy_detect (function_service)
                                                   read_KO (configuration)
                                                   real_daylight_calc (application)
                                                   remember_parameter (configuration)
                                                   scs_calibration (decode_scs)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_advance_slave (application)
                                                   scs_pnl_none_confed_master (application)
                                                   scs_pnl_none_confed_slave (application)
                                                   send_group_frame (decode_scs_next)
                                                   sensor_GR_decode (decode_scs)
                                                   service_main (application)
                                                   start_conf (application)
                                                   write_KO (configuration)
                                                   write_moudle_parameter_temp (configuration)
    -------------------------------------------------------------------------
NEAR_I
  Segment part 31. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           daylight_motion         
    -------------------------------------------------------------------------
NEAR_I
  Segment part 34. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           daylight                
    -------------------------------------------------------------------------
NEAR_I
  Segment part 36. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           motion                  
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 00000000 - 00000000 (0x1 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           g_ns_index              00000000        decode_IR (IR)
                                                   factory_default (application)
                                                   ir_pnl (IR)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 00000001 - 00000002 (0x2 bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ee_flags                00000001        configuration_procedure (decode_scs_next)
                                                   decode_IR (IR)
                                                   factory_default (application)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_none_confed_master (application)
                                                   start_conf (application)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 00000003 - 00000004 (0x2 bytes), align: 0
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ee_variable             00000003        configuration_procedure (decode_scs_next)
                                                   decode_IR (IR)
                                                   scs_pnl_advance_master (application)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 00000005 - 00000008 (0x4 bytes), align: 0
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ee_KO_last              00000005        configuration_procedure (decode_scs_next)
                                                   load_default_advance_parameter (application)
                                                   load_parameter (configuration)
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 000003AD - 000003B0 (0x4 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           flash_KO                000003AD        configuration_procedure (decode_scs_next)
                                                   factory_default (application)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 00000009 - 0000000C (0x4 bytes), align: 0
  Segment part 54.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ee_KO                   00000009        configuration_procedure (decode_scs_next)
                                                   factory_default (application)
                                                   load_default_advance_parameter (application)
                                                   load_parameter (configuration)
                                                   remember_parameter (configuration)
                                                   start_conf (application)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 0000000D - 0000001E (0x12 bytes), align: 0
  Segment part 55.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ee_parameter            0000000D        configuration_answer_frame (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000018D - 000001BE (0x32 bytes), align: 0
  Segment part 56.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           flash_KO_168            0000018D        KO_parameter_initial (configuration)
                                                   KO_parameter_initial_temp (configuration)
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000001BF - 000001F0 (0x32 bytes), align: 0
  Segment part 57.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           flash_KO_166            000001BF        KO_parameter_initial (configuration)
                                                   KO_parameter_initial_temp (configuration)
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000001F1 - 00000222 (0x32 bytes), align: 0
  Segment part 58.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           flash_KO_119            000001F1        KO_parameter_initial (configuration)
                                                   KO_parameter_initial_temp (configuration)
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000223 - 00000254 (0x32 bytes), align: 0
  Segment part 59.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           flash_KO_128            00000223        KO_parameter_initial (configuration)
                                                   KO_parameter_initial_temp (configuration)
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000255 - 00000286 (0x32 bytes), align: 0
  Segment part 60.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           flash_KO_165            00000255        KO_parameter_initial (configuration)
                                                   KO_parameter_initial_temp (configuration)
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000287 - 000002B8 (0x32 bytes), align: 0
  Segment part 61.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           flash_KO_515            00000287        KO_parameter_initial_temp (configuration)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 0000001F - 00000024 (0x6 bytes), align: 0
  Segment part 62.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ee_configurators        0000001F        configuration_procedure (decode_scs_next)
                                                   configurator_to_KO (application)
                                                   factory_default (application)
                                                   load_parameter (configuration)
                                                   remember_parameter (configuration)
                                                   start_conf (application)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 00000025 - 00000056 (0x32 bytes), align: 0
  Segment part 63.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ee_KO_conf              00000025        KO_parameter_initial (configuration)
                                                   configuration_procedure (decode_scs_next)
                                                   configurator_to_KO (application)
                                                   decode_IR (IR)
                                                   factory_default (application)
                                                   load_default_advance_parameter (application)
                                                   load_parameter (configuration)
                                                   remember_parameter (configuration)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_advance_slave (application)
                                                   scs_pnl_none_confed_master (application)
                                                   scs_pnl_none_confed_slave (application)
                                                   send_frame_pp_ext_broad (decode_scs_next)
                                                   start_conf (application)
                                                   write_ee_KO (configuration)
                                                   write_moudle_parameter (configuration)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 00000057 - 0000005F (0x9 bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ee_ID                   00000057        ID_setting (configuration)
                                                   decode_IR (IR)
                                                   diagnostic_frame (decode_scs_next)
                                                   id_frame (decode_scs_next)
                                                   start_conf (application)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 00000060 - 00000066 (0x7 bytes), align: 0
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ee_product_information
                                   00000060        configuration_procedure (decode_scs_next)
                                                   factory_default (application)
                                                   id_frame (decode_scs_next)
                                                   load_parameter (configuration)
                                                   main (main)
                                                   remember_parameter (configuration)
                                                   scs_pnl_none_confed_master (application)
                                                   scs_pnl_none_confed_slave (application)
                                                   start_conf (application)
                                                   test_ID_assigned (main)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 00000067 - 00000067 (0x1 bytes), align: 0
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ee_scenario_index       00000067        factory_default (application)
                                                   scenario_remove (decode_scs_next)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 00000068 - 000000D7 (0x70 bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ee_scenario             00000068        KO_answer_frame (decode_scs_next)
                                                   address_answer_frame (decode_scs_next)
                                                   address_setting_error_frame (decode_scs_next)
                                                   aux_procedure (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   decode_IR (IR)
                                                   factory_default (application)
                                                   ir_pnl (IR)
                                                   is_scenario_full (IR)
                                                   led_blinking_normal (application)
                                                   parameter_all_answer (decode_scs_next)
                                                   parameter_setting_error_answer (decode_scs_next)
                                                   parameter_specified_index_answer (decode_scs_next)
                                                   scenario_remove (decode_scs_next)
                                                   send_aux_frame (decode_scs_next)
                                                   start_conf (application)
                                                   timer2_ovf_ser (board)
                                                   write_parameter_scenario (decode_scs_next)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 000000D8 - 000000DF (0x8 bytes), align: 0
  Segment part 68.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           eep_setpoint            000000D8        DLL_setpoint (application)
                                                   daylight_set_init (application)
    -------------------------------------------------------------------------
EEPROM_I
  Segment part 69. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           eep_factor              
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 000000E0 - 000000E0 (0x1 bytes), align: 0
  Segment part 70.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           eep_M2_hour             000000E0        decode_SCS (decode_scs)
                                                   frame_M2_answer (application)
                                                   function_service_init (function_service)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 000000E1 - 000000E1 (0x1 bytes), align: 0
  Segment part 71.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           eep_M2_min              000000E1        decode_SCS (decode_scs)
                                                   frame_M2_answer (application)
                                                   function_service_init (function_service)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 000000E2 - 000000E2 (0x1 bytes), align: 0
  Segment part 72.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           eep_M2_sec              000000E2        decode_SCS (decode_scs)
                                                   frame_M2_answer (application)
                                                   function_service_init (function_service)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 000000E3 - 000000E3 (0x1 bytes), align: 0
  Segment part 73.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           eep_M2_sens             000000E3        decode_SCS (decode_scs)
                                                   frame_M2_answer (application)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 0000052C - 0000055A (0x2f bytes), align: 0
  Segment part 13.            Intra module refs:   global_variable_initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IR_reception            0000052C        decode_IR (IR)
                                                   ir_buffer_clear (IR)
                                                   send_aux_frame (decode_scs_next)
                                                   send_group_frame (decode_scs_next)
                                                   usart1_rx_ser (IR)
           Sensor_mode             0000053E        Actuator_regulation (application)
                                                   Check_SCS_received (function_service)
                                                   Check_frame_received (function_service)
                                                   Function_KO128 (function_service)
                                                   Function_KO166 (function_service)
                                                   Function_LM_GR (function_service)
                                                   Mode_frame_GR (application)
                                                   Mode_frame_P2P (application)
                                                   OFF_takeline (function_service)
                                                   ON_takeline (function_service)
                                                   _Initial_state (function_service)
                                                   _Maintain_state (function_service)
                                                   _ReTrigger_State (function_service)
                                                   _Standby_state (function_service)
                                                   check_modality_frame (function_service)
                                                   daylight_service (application)
                                                   decode_SCS (decode_scs)
                                                   frame_on_off (function_service)
                                                   function_service (function_service)
                                                   function_service_init (function_service)
                                                   occupancy_detect (function_service)
                                                   real_daylight_calc (application)
                                                   sensor_GR_decode (decode_scs)
                                                   timer2_ovf_ser (board)
           flags                   0000054F        KO_setting_procedure (decode_scs_next)
                                                   address_setting_error_frame (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   decode_IR (IR)
                                                   decode_SCS (decode_scs)
                                                   diagnostic_frame (decode_scs_next)
                                                   id_frame (decode_scs_next)
                                                   ir_pnl (IR)
                                                   led_blinking_normal (application)
                                                   load_parameter (configuration)
                                                   main (main)
                                                   parameter_setting_error_answer (decode_scs_next)
                                                   put_s1 (IR)
                                                   scs_pnl_advance_slave (application)
                                                   scs_pnl_none_confed_master (application)
                                                   scs_pnl_none_confed_slave (application)
                                                   service_main (application)
                                                   start_conf (application)
                                                   test_ID_assigned (main)
                                                   timer2_ovf_ser (board)
           flags_muti_step         0000055A        KO_setting_procedure (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
           frame_extended_type     00000555 
           key_result              00000557        button_press_detect (application)
                                                   configuration_procedure (decode_scs_next)
                                                   decode_IR (IR)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_advance_slave (application)
                                                   scs_pnl_none_confed_master (application)
                                                   scs_pnl_none_confed_slave (application)
                                                   service_main (application)
           state                   00000548        PnL_NONE_end (application)
                                                   PnL_ad_end (application)
                                                   configuration_answer_frame (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   configuration_receive_answer_frame (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   decode_IR (IR)
                                                   decode_SCS (decode_scs)
                                                   decode_id (decode_scs)
                                                   id_frame (decode_scs_next)
                                                   ir_pnl (IR)
                                                   led_blinking_normal (application)
                                                   main (main)
                                                   parameter_answer_frame (decode_scs_next)
                                                   scs_calibration (decode_scs)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_advance_slave (application)
                                                   scs_pnl_none_confed_master (application)
                                                   scs_pnl_none_confed_slave (application)
                                                   service_main (application)
                                                   timer2_ovf_ser (board)
           us_result               00000559        Ultrasonic_detection (US)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 0000055B - 0000056B (0x11 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           g_reception_buffer      0000055B        KO_setting_procedure (decode_scs_next)
                                                   address_answer_frame (decode_scs_next)
                                                   address_setting_error_frame (decode_scs_next)
                                                   aux_procedure (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   decode_SCS (decode_scs)
                                                   decode_id (decode_scs)
                                                   id_frame (decode_scs_next)
                                                   parameter_request_error_frame (decode_scs_next)
                                                   parameter_setting_error_answer (decode_scs_next)
                                                   parameter_specified_index_answer (decode_scs_next)
                                                   reception_buffer_clear (decode_scs)
                                                   send_frame_pp_ext_broad (decode_scs_next)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 0000056C - 00000573 (0x8 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           g_asc_reception_buffer
                                   0000056C        KO_answer_frame (decode_scs_next)
                                                   KO_setting_procedure (decode_scs_next)
                                                   address_answer_frame (decode_scs_next)
                                                   address_setting_error_frame (decode_scs_next)
                                                   aux_procedure (decode_scs_next)
                                                   configuration_answer_frame (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   configuration_receive_answer_frame (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   decode_SCS (decode_scs)
                                                   decode_id (decode_scs)
                                                   ir_pnl (IR)
                                                   ko_answer_all (decode_scs_next)
                                                   parameter_all_answer (decode_scs_next)
                                                   parameter_answer_frame (decode_scs_next)
                                                   parameter_setting_error_answer (decode_scs_next)
                                                   parameter_specified_index_answer (decode_scs_next)
                                                   reception_buffer_clear (decode_scs)
                                                   scs_calibration (decode_scs)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_advance_slave (application)
                                                   scs_pnl_none_confed_master (application)
                                                   scs_pnl_none_confed_slave (application)
                                                   sensor_GR_decode (decode_scs)
                                                   write_parameter_scenario (decode_scs_next)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000574 - 0000057B (0x8 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           g_short_buffer          00000574        decode_SCS (decode_scs)
                                                   reception_buffer_clear (decode_scs)
                                                   scs_pnl_advance_master (application)
                                                   sensor_GR_decode (decode_scs)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 0000057C - 0000057F (0x4 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           g_asc_short_buffer      0000057C        decode_SCS (decode_scs)
                                                   reception_buffer_clear (decode_scs)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_none_confed_master (application)
                                                   sensor_GR_decode (decode_scs)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000580 - 0000058D (0xe bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           g_ir_reception          00000580        decode_IR (IR)
                                                   ir_pnl (IR)
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           product_info            
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           flag_timer              
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 0000058E - 000005D1 (0x44 bytes), align: 0
  Segment part 21.            Intra module refs:   global_variable_initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DLL                     0000058E        Actuator_regulation (application)
                                                   Check_SCS_received (function_service)
                                                   DLL_setpoint (application)
                                                   Dimmer_regulation (application)
                                                   Function_KO128 (function_service)
                                                   PofL_calc (application)
                                                   _Initial_state (function_service)
                                                   daylight_service (application)
                                                   daylight_set_init (application)
                                                   decode_IR (IR)
                                                   decode_SCS (decode_scs)
                                                   frame_M2_answer (application)
                                                   get_dl_level (application)
                                                   load_parameter (configuration)
                                                   real_daylight_calc (application)
                                                   scs_calibration (decode_scs)
                                                   sensor_GR_decode (decode_scs)
                                                   timer2_ovf_ser (board)
                                                   write_KO (configuration)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000005D2 - 000006C8 (0xf7 bytes), align: 0
  Segment part 22.            Intra module refs:   global_variable_initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Time_delay              000005D2        Actuator_regulation (application)
                                                   Call_detect_delay (function_service)
                                                   Check_SCS_received (function_service)
                                                   Check_frame_received (function_service)
                                                   Delay_Alert (function_service)
                                                   Dimmer_regulation (application)
                                                   Dled_light_on_ms (application)
                                                   Function_KO128 (function_service)
                                                   Mode_frame_GR (application)
                                                   OFF_takeline (function_service)
                                                   ON_takeline (function_service)
                                                   Start_Time_Delay (function_service)
                                                   Stop_allTimer (function_service)
                                                   WT_20s_detect (function_service)
                                                   _Initial_state (function_service)
                                                   _Maintain_state (function_service)
                                                   _ReTrigger_State (function_service)
                                                   _Standby_state (function_service)
                                                   button_press_detect (application)
                                                   buzzer_ms (board)
                                                   decode_SCS (decode_scs)
                                                   decode_id (decode_scs)
                                                   frame_on_off (function_service)
                                                   function_service_init (function_service)
                                                   get_us (application)
                                                   ir_pnl (IR)
                                                   key_time_clear (application)
                                                   led_blinking (application)
                                                   led_blinking_disable (application)
                                                   led_blinking_ms (application)
                                                   led_blinking_stage2_initial (application)
                                                   occupancy_detect (function_service)
                                                   regulation_timer_initial (application)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_advance_slave (application)
                                                   scs_pnl_none_confed_master (application)
                                                   scs_pnl_none_confed_slave (application)
                                                   sensor_GR_decode (decode_scs)
                                                   service_main (application)
                                                   start_conf (application)
                                                   timer0_ovf_ser (board)
                                                   timer2_ovf_ser (board)
                                                   timer_IR_initial (IR)
                                                   timer_flex2_initial (application)
                                                   timer_flex_initial (application)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000006C9 - 000006CC (0x4 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pir                     000006C9        PIR_SENSE_SET (PIR)
                                                   PIR_detect (PIR)
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 24. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pir_total               
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 25. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           us_total                
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000006CD - 000006CE (0x2 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           motion_total            000006CD        occupancy_detect (function_service)
                                                   timer2_ovf_ser (board)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000006CF - 000006CF (0x1 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           US_detection_en         000006CF        Ultrasonic_detection (US)
                                                   get_us (application)
                                                   motion_detect (application)
                                                   occupancy_detect (function_service)
                                                   timer2_ovf_ser (board)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000006D0 - 000006D3 (0x4 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           modality0_delay_ms      000006D0        timer2_ovf_ser (board)
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           g_key_value             
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           g_virtual_basci_configuration_flag
                                   
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000006D4 - 000006D4 (0x1 bytes), align: 0
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PIR_detection_en        000006D4        PIR_detect (PIR)
                                                   occupancy_detect (function_service)
                                                   timer2_ovf_ser (board)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000006D5 - 000006E2 (0xe bytes), align: 0
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tx1_buffer              000006D5        put_c1 (IR)
                                                   usart_tx_ser (IR)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000006E3 - 000006E3 (0x1 bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tx1_wr_index            000006E3        put_c1 (IR)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000006E4 - 000006E4 (0x1 bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tx1_rd_index            000006E4        usart_tx_ser (IR)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000006E5 - 000006E5 (0x1 bytes), align: 0
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tx1_counter             000006E5        put_c1 (IR)
                                                   usart_tx_ser (IR)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000006E6 - 000006EC (0x7 bytes), align: 0
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           product_information     000006E6        KO_answer_frame (decode_scs_next)
                                                   KO_setting_procedure (decode_scs_next)
                                                   Mode_frame_P2P (application)
                                                   address_answer_frame (decode_scs_next)
                                                   address_setting_error_frame (decode_scs_next)
                                                   configuration_answer_frame (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   decode_IR (IR)
                                                   id_frame (decode_scs_next)
                                                   led_blinking_normal (application)
                                                   load_parameter (configuration)
                                                   main (main)
                                                   parameter_all_answer (decode_scs_next)
                                                   parameter_setting_error_answer (decode_scs_next)
                                                   parameter_specified_index_answer (decode_scs_next)
                                                   remember_parameter (configuration)
                                                   scs_pnl_none_confed_master (application)
                                                   scs_pnl_none_confed_slave (application)
                                                   send_frame_pp_ext_broad (decode_scs_next)
                                                   service_main (application)
                                                   test_ID_assigned (main)
                                                   timer2_ovf_ser (board)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000006ED - 000006F3 (0x7 bytes), align: 0
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           temp_product_information
                                   000006ED        configuration_procedure (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000006F4 - 000006F7 (0x4 bytes), align: 0
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KO                      000006F4        KO_answer_frame (decode_scs_next)
                                                   KO_parameter_initial (configuration)
                                                   KO_parameter_initial_temp (configuration)
                                                   KO_setting_procedure (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   factory_default (application)
                                                   function_service (function_service)
                                                   load_default_advance_parameter (application)
                                                   load_parameter (configuration)
                                                   main (main)
                                                   not_allowed_response (decode_scs_next)
                                                   parameter_specified_index_answer (decode_scs_next)
                                                   read_KO (configuration)
                                                   remember_parameter (configuration)
                                                   write_KO (configuration)
                                                   write_ee_KO (configuration)
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 48. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           parameters              
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000006F8 - 0000070B (0x14 bytes), align: 0
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           temp_variable           000006F8        KO_setting_procedure (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   decode_IR (IR)
                                                   scs_pnl_advance_slave (application)
                                                   scs_pnl_none_confed_master (application)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 0000070C - 0000070F (0x4 bytes), align: 0
  Segment part 74.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           M2_timer                0000070C        Function_KO128 (function_service)
                                                   decode_SCS (decode_scs)
                                                   function_service_init (function_service)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000710 - 00000713 (0x4 bytes), align: 0
  Segment part 75.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           M2_timer_count          00000710        Function_KO128 (function_service)
                                                   timer2_ovf_ser (board)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000714 - 00000714 (0x1 bytes), align: 0
  Segment part 76.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           M2_type                 00000714        Function_KO128 (function_service)
                                                   decode_SCS (decode_scs)
                                                   frame_M2_answer (application)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000715 - 00000715 (0x1 bytes), align: 0
  Segment part 77.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           motion_resutl           00000715        occupancy_detect (function_service)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000716 - 00000717 (0x2 bytes), align: 0
  Segment part 78.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           set_point               00000716        Actuator_regulation (application)
                                                   Check_SCS_received (function_service)
                                                   Dimmer_regulation (application)
                                                   _Initial_state (function_service)
                                                   daylight_service (application)
                                                   decode_IR (IR)
                                                   function_service_init (function_service)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000718 - 0000071B (0x4 bytes), align: 0
  Segment part 79.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Delay_Time_set          00000718        Call_detect_delay (function_service)
                                                   Check_SCS_received (function_service)
                                                   Function_KO128 (function_service)
                                                   Start_Time_Delay (function_service)
                                                   WT_20s_detect (function_service)
                                                   decode_IR (IR)
                                                   function_service_init (function_service)
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 80. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           during_on_cnt           
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 81. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           during_off_cnt          
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 0000071C - 0000071C (0x1 bytes), align: 0
  Segment part 82.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Walk_Through_flag       0000071C        Call_detect_delay (function_service)
                                                   Check_SCS_received (function_service)
                                                   Check_frame_received (function_service)
                                                   Function_LM_GR (function_service)
                                                   WT_20s_detect (function_service)
                                                   _Maintain_state (function_service)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 0000071D - 0000071D (0x1 bytes), align: 0
  Segment part 83.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           First_detection_enable
                                   0000071D        Call_detect_delay (function_service)
                                                   Check_SCS_received (function_service)
                                                   _Maintain_state (function_service)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 0000071E - 00000722 (0x5 bytes), align: 0
  Segment part 84.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SCS_received            0000071E        Check_SCS_received (function_service)
                                                   Check_frame_received (function_service)
                                                   Dimmer_regulation (application)
                                                   Function_KO128 (function_service)
                                                   Function_KO166 (function_service)
                                                   Light_regulation (application)
                                                   Mode_frame_P2P (application)
                                                   _Initial_state (function_service)
                                                   _Maintain_state (function_service)
                                                   _ReTrigger_State (function_service)
                                                   _Standby_state (function_service)
                                                   check_modality_frame (function_service)
                                                   decode_IR (IR)
                                                   decode_SCS (decode_scs)
                                                   function_service (function_service)
                                                   occupancy_detect (function_service)
                                                   scs_calibration (decode_scs)
                                                   sensor_GR_decode (decode_scs)
                                                   timer2_ovf_ser (board)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A3BE - 0000A575 (0x1b8 bytes), align: 1
  Segment part 85.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           global_variable_initial
                                   0000A3BE        main (main)
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 1. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 8. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   
    -------------------------------------------------------------------------
NEAR_ID
  Segment part 32. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 33. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_I>
                                   
    -------------------------------------------------------------------------
NEAR_ID
  Segment part 35. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_ID
  Segment part 37. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000B4EB - 0000B4EE (0x4 bytes), align: 0
  Segment part 53.            Intra module refs:   flash_KO

    *************************************************************************

  FILE NAME : D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Alan\Release\Obj\main.r90
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000A576 - 0000A5A5 (0x30 bytes), align: 1
  Segment part 7.             Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           test_ID_assigned        0000A576 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A5A6 - 0000A66B (0xc6 bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    0000A5A6        ?cstartup_call_main (?C_STARTUP)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 1. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 6. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\avr\Uart_Interrupt\LM_Universal\LM_IAR_V5.0\Alan\Release\Obj\usart.r90
  PROGRAM MODULE, NAME : usart

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 000000C6 - 000000C6 (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   put_c
                                                   usart0_rx_ser
                                                   usart0_tx_ser
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UDR0                 000000C6 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000C4 - 000000C5 (0x2 bytes), align: 0
  Segment part 2.             Intra module refs:   init_USART0
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UBRR0                000000C4 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000C2 - 000000C2 (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   init_USART0
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSR0C               000000C2 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000C1 - 000000C1 (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   init_USART0
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSR0B               000000C1 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000C0 - 000000C0 (0x1 bytes), align: 0
  Segment part 5.             Intra module refs:   init_USART0
                                                   put_c
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSR0A               000000C0 
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rx_buffer               
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rx_wr_index             
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rx_rd_index             
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rx_counter              
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rx_buffer_overflow      
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000723 - 00000735 (0x13 bytes), align: 0
  Segment part 20.            Intra module refs:   put_c
                                                   usart0_tx_ser
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tx_buffer               00000723 
           tx_counter              00000735 
           tx_rd_index             00000734 
           tx_wr_index             00000733 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A66C - 0000A7E1 (0x176 bytes), align: 1
  Segment part 21.            Intra module refs:   usart0_rx_ser::??INTVEC 80
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usart0_rx_ser           0000A66C 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 00000015 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A7E2 - 0000A835 (0x54 bytes), align: 1
  Segment part 22.            Intra module refs:   usart0_tx_ser::??INTVEC 88
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usart0_tx_ser           0000A7E2 
               interrupt function
               stack 1 = 00000000 ( 00000005 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A836 - 0000A885 (0x50 bytes), align: 1
  Segment part 23.            Intra module refs:   put_s
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           put_c                   0000A836 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A886 - 0000A89D (0x18 bytes), align: 1
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           put_s                   0000A886        configuration_answer_frame (decode_scs_next)
                                                   org_ext_broad (decode_scs_next)
                                                   send_frame_pp (decode_scs_next)
                                                   send_frame_pp_broad (decode_scs_next)
                                                   send_frame_pp_ext_broad (decode_scs_next)
                                                   start_conf (application)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A89E - 0000A8BD (0x20 bytes), align: 1
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           init_USART0             0000A89E        main (main)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 6. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 7. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 8. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 9. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000053 (0x54 bytes), align: 1
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usart0_rx_ser::??INTVEC 80
                                   00000050 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000005B (0x5c bytes), align: 1
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usart0_tx_ser::??INTVEC 88
                                   00000058 
    -------------------------------------------------------------------------
CSTACK
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 15. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   

    *************************************************************************

  FILE NAME : C:\Program Files\IAR Systems\Embedded Workbench 5.0 Evaluation\avr\LIB\CLIB\cl3s-ec_mul-sf.r90
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000A8BE - 0000A8C3 (0x6 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  0000A8C0 
           ?C_EXIT                 0000A8C0 
           ?C_FUNCALL              0000A8BE 
           _exit                   0000A8BE        ?cstartup_call_main (?C_STARTUP)
           exit                    0000A8BE        ?cstartup_call_main (?C_STARTUP)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?RESET

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00000000 - 00000003 (0x4 bytes), align: 1
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         00000000        Absolute parts (?ABS_ENTRY_MOD)
           ?RESET                  00000000        Segment part 2 (?C_STARTUP)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?C_STARTUP

  SEGMENTS IN THE MODULE
  ======================
CSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A8C4, align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?C_STARTUP              0000A8C4        Segment part 0 (?RESET)
           __RESTART               0000A8C4 
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __RSTACK_in_external_ram
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __RSTACK_in_external_ram_new_way
                                   
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A8C4 - 0000A8CF (0xc bytes), align: 1
  Segment part 5.             Intra module refs:   Segment part 2
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?zero_reg_initialization
                                   
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A8D0 - 0000A8D3 (0x4 bytes), align: 1
  Segment part 7.             Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_low_level_init    0000A8D0 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A8D4 - 0000A8DB (0x8 bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?need_segment_init      0000A8D4        ?<Segment init: NEAR_I> (IR)
                                                   ?<Segment init: NEAR_Z> (IR)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A8DC - 0000A8E7 (0xc bytes), align: 1
  Segment part 9.             Intra module refs:   ?call_low_level_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstartup_call_main     0000A8DC 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?EEPROM_16

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000A8E8 - 0000A8ED (0x6 bytes), align: 1
  Segment part 0.             Intra module refs:   Segment part 1
                                                   __eeput16_16
                                                   __eeput8_16
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A8EE - 0000A8FB (0xe bytes), align: 1
  Segment part 1.             Intra module refs:   __eeget16_16
                                                   __eeget8_16
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A8FC - 0000A901 (0x6 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeget8_16             0000A8FC        ?ML_EEPROM_SRAM_16_16_L07 (?MOVLONG_EEPROM_16_P07)
                                                   KO_answer_frame (decode_scs_next)
                                                   address_answer_frame (decode_scs_next)
                                                   address_setting_error_frame (decode_scs_next)
                                                   aux_procedure (decode_scs_next)
                                                   configuration_answer_frame (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   configurator_to_KO (application)
                                                   decode_IR (IR)
                                                   diagnostic_frame (decode_scs_next)
                                                   frame_M2_answer (application)
                                                   function_service_init (function_service)
                                                   id_frame (decode_scs_next)
                                                   ir_pnl (IR)
                                                   is_scenario_full (IR)
                                                   led_blinking_normal (application)
                                                   load_parameter (configuration)
                                                   parameter_all_answer (decode_scs_next)
                                                   parameter_setting_error_answer (decode_scs_next)
                                                   parameter_specified_index_answer (decode_scs_next)
                                                   scs_pnl_advance_master (application)
                                                   send_aux_frame (decode_scs_next)
                                                   send_frame_pp_ext_broad (decode_scs_next)
                                                   start_conf (application)
                                                   timer2_ovf_ser (board)
                                                   write_ee_KO (configuration)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A902 - 0000A90B (0xa bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeget16_16            0000A902        configuration_procedure (decode_scs_next)
                                                   daylight_set_init (application)
                                                   decode_IR (IR)
                                                   factory_default (application)
                                                   id_frame (decode_scs_next)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_none_confed_master (application)
                                                   start_conf (application)
                                                   test_ID_assigned (main)
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeget24_16            
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeget32_16            
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeget64_16            
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A90C - 0000A91D (0x12 bytes), align: 1
  Segment part 8.             Intra module refs:   __eeput16_16
                                                   __eeput8_16
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A91E - 0000A925 (0x8 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeput8_16             0000A91E        ?ML_FLASH_EEPROM_16EC_16_L07 (?MOVLONG_EEPROM_16_P07)
                                                   ?ML_SRAM_EEPROM_16_16_L07 (?MOVLONG_EEPROM_16_P07)
                                                   ID_setting (configuration)
                                                   configuration_procedure (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   configurator_to_KO (application)
                                                   decode_IR (IR)
                                                   decode_SCS (decode_scs)
                                                   factory_default (application)
                                                   id_frame (decode_scs_next)
                                                   ir_pnl (IR)
                                                   load_default_advance_parameter (application)
                                                   load_parameter (configuration)
                                                   main (main)
                                                   remember_parameter (configuration)
                                                   scenario_remove (decode_scs_next)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_advance_slave (application)
                                                   scs_pnl_none_confed_master (application)
                                                   scs_pnl_none_confed_slave (application)
                                                   start_conf (application)
                                                   test_ID_assigned (main)
                                                   write_ee_KO (configuration)
                                                   write_moudle_parameter (configuration)
                                                   write_parameter_scenario (decode_scs_next)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000A926 - 0000A933 (0xe bytes), align: 1
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeput16_16            0000A926        DLL_setpoint (application)
                                                   configuration_procedure (decode_scs_next)
                                                   factory_default (application)
                                                   id_frame (decode_scs_next)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_none_confed_master (application)
                                                   start_conf (application)
                                                   test_ID_assigned (main)
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeput24_16            
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeput32_16            
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeput64_16            

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?EEPROM_16_RF

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeget8_16_AT86RF401   
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeget16_16_AT86RF401
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeget24_16_AT86RF401
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeget32_16_AT86RF401
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeget64_16_AT86RF401
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeput8_16_AT86RF401   
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeput16_16_AT86RF401
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeput24_16_AT86RF401
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeput32_16_AT86RF401
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeput64_16_AT86RF401
                                   

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?errno

  SEGMENTS IN THE MODULE
  ======================
NEAR_Z
  Relative segment, address: DATA 00000736 - 00000737 (0x2 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           errno                   00000736        exp (?exp)
                                                   exp10 (?exp10)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 4. TENTATIVE. Used definition from IR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?exp

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000A934 - 0000AA2F (0xfc bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exp                     0000A934        exp10 (?exp10)
               stack 1 = 00000000 ( 00000006 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000AA30 - 0000AA33 (0x4 bytes), align: 1
  Segment part 4.             Intra module refs:   exp
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000AA34 - 0000AA3B (0x8 bytes), align: 1
  Segment part 5.             Intra module refs:   exp
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000AA3C - 0000AA41 (0x6 bytes), align: 1
  Segment part 6.             Intra module refs:   Segment part 9
                                                   exp
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000AA42 - 0000AA45 (0x4 bytes), align: 1
  Segment part 7.             Intra module refs:   Segment part 5
                                                   Segment part 6
                                                   exp
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000AA46 - 0000AA49 (0x4 bytes), align: 1
  Segment part 8.             Intra module refs:   Segment part 6
                                                   exp
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000AA4A - 0000AA4F (0x6 bytes), align: 1
  Segment part 9.             Intra module refs:   exp
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000AA50 - 0000AA55 (0x6 bytes), align: 1
  Segment part 10.            Intra module refs:   exp
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000AA56 - 0000AA5F (0xa bytes), align: 1
  Segment part 11.            Intra module refs:   Segment part 10
                                                   exp
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000AA60 - 0000AA79 (0x1a bytes), align: 1
  Segment part 12.            Intra module refs:   exp
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000AA7A - 0000AA7F (0x6 bytes), align: 1
  Segment part 13.            Intra module refs:   Segment part 12
                                                   exp
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 2. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?exp10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000AA80 - 0000AAD3 (0x54 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exp10                   0000AA80        real_daylight_calc (application)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 2. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_EC_MUL_L02

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000AAD4 - 0000AAE3 (0x10 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_EC_MUL_L02           0000AAD4        Dimmer_regulation (application)
                                                   KO_answer_frame (decode_scs_next)
                                                   PofL_calc (application)
                                                   _Initial_state (function_service)
                                                   address_answer_frame (decode_scs_next)
                                                   address_setting_error_frame (decode_scs_next)
                                                   all_reception_buffer_clear (application)
                                                   aux_procedure (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   daylight_service (application)
                                                   decode_IR (IR)
                                                   decode_SCS (decode_scs)
                                                   decode_id (decode_scs)
                                                   factor_divcalc (application)
                                                   factory_default (application)
                                                   frame_buffer_clear (decode_scs_next)
                                                   function_service_init (function_service)
                                                   global_variable_initial (global_variable)
                                                   ir_pnl (IR)
                                                   is_gateway_busy (decode_scs)
                                                   is_scenario_full (IR)
                                                   led_blinking_normal (application)
                                                   manual_reception_buffer_clear (application)
                                                   parameter_all_answer (decode_scs_next)
                                                   parameter_setting_error_answer (decode_scs_next)
                                                   parameter_specified_index_answer (decode_scs_next)
                                                   scenario_remove (decode_scs_next)
                                                   send_aux_frame (decode_scs_next)
                                                   start_conf (application)
                                                   timer2_ovf_ser (board)
                                                   usart0_rx_ser (usart)
                                                   write_KO (configuration)
                                                   write_parameter_scenario (decode_scs_next)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_SHL_L02

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000AAE4 - 0000AAEF (0xc bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_SHL_L02              0000AAE4        factor_divcalc (application)
                                                   not_bit (board)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SHR_L02

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000AAF0 - 0000AAFB (0xc bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SHR_L02             0000AAF0        factor_divcalc (application)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_DIVMOD_L02

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000AAFC - 0000AB23 (0x28 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_DIVMOD_L02          0000AAFC        ?SS_DIVMOD_L02 (?SS_DIVMOD_L02)
                                                   Dimmer_regulation (application)
                                                   PofL_calc (application)
                                                   decode_IR (IR)
                                                   factor_divcalc (application)
                                                   get_dl_level (application)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SS_DIVMOD_L02

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000AB24 - 0000AB53 (0x30 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SS_DIVMOD_L02          0000AB2C        daylight_service (application)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_EC_MUL_L03

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000AB54 - 0000AB93 (0x40 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_EC_MUL_L03           0000AB54        daylight_service (application)
                                                   decode_IR (IR)
                                                   decode_SCS (decode_scs)
                                                   function_service_init (function_service)
                                                   real_daylight_calc (application)
                                                   scs_calibration (decode_scs)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SHL_L03

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000AB94 - 0000ABA3 (0x10 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SHL_L03              0000AB94        decode_IR (IR)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_SHR_L03

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000ABA4 - 0000ABB3 (0x10 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_SHR_L03             0000ABA4        Segment part 9 (?FLOATS_L04)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_DIVMOD_L03

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000ABB4 - 0000ABF9 (0x46 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_DIVMOD_L03          0000ABB4        Dimmer_regulation (application)
                                                   daylight_service (application)
                                                   real_daylight_calc (application)
                                                   scs_calibration (decode_scs)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SL_DIVMOD_L03

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SL_DIVMOD_L03          
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000ABFA - 0000AC09 (0x10 bytes), align: 1
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NEG_L03              0000ABFA        ?SL2F_L04 (?FLOATS_L04)
                                                   Segment part 9 (?FLOATS_L04)
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NEG_Q_L03            

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLOATS_L04

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000AC0A - 0000AC33 (0x2a bytes), align: 1
  Segment part 0.             Intra module refs:   ?F2SL_L04
                                                   ?F_ADD_L04
                                                   ?F_DIV_L04
                                                   ?F_MUL_L04
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000AC34 - 0000AC87 (0x54 bytes), align: 1
  Segment part 1.             Intra module refs:   ?F_ADD_L04
                                                   ?F_DIV_L04
                                                   ?F_MUL_L04
                                                   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_ROUND_L04            0000AC54 
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000AC88 - 0000AC89 (0x2 bytes), align: 1
  Segment part 3.             Intra module refs:   ?F_ROUND_L04
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000AC8A - 0000AC93 (0xa bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SL2F_L04               0000AC8A        Segment part 12 (?exp)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000AC94 - 0000AC9F (0xc bytes), align: 1
  Segment part 5.             Intra module refs:   ?SL2F_L04
                                                   ?UL2F_L04
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000ACA0 - 0000ACA3 (0x4 bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL2F_L04               0000ACA0        decode_IR (IR)
                                                   real_daylight_calc (application)
                                                   scs_calibration (decode_scs)
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F2UL_L04               
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000ACA4 - 0000ACB5 (0x12 bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F2SL_L04               0000ACA4        exp (?exp)
                                                   real_daylight_calc (application)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000ACB6 - 0000ACD9 (0x24 bytes), align: 1
  Segment part 9.             Intra module refs:   ?F2SL_L04
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000ACDA - 0000AD07 (0x2e bytes), align: 1
  Segment part 10.            Intra module refs:   ?F_ADD_L04
                                                   ?F_CMP_EQ_L04
                                                   ?F_CMP_GE_L04
                                                   ?F_CMP_LT_L04
                                                   ?F_DIV_L04
                                                   ?F_MUL_L04
                                                   Segment part 11
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?TEST_P_L04             0000ACDA 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000AD08 - 0000AD27 (0x20 bytes), align: 1
  Segment part 11.            Intra module refs:   ?F_ADD_L04
                                                   ?F_CMP_EQ_L04
                                                   ?F_CMP_GE_L04
                                                   ?F_CMP_LT_L04
                                                   ?F_DIV_L04
                                                   ?F_MUL_L04
                                                   Segment part 17
                                                   Segment part 22
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000AD28 - 0000ADCF (0xa8 bytes), align: 1
  Segment part 12.            Intra module refs:   ?F_SUB_L04
                                                   Segment part 17
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_ADD_L04              0000AD48        Segment part 8 (?exp)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000ADD0 - 0000ADD5 (0x6 bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_SUB_L04              0000ADD0        Segment part 12 (?exp)
                                                   decode_IR (IR)
                                                   scs_calibration (decode_scs)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000ADD6 - 0000ADE1 (0xc bytes), align: 1
  Segment part 14.            Intra module refs:   ?F2SL_L04
                                                   ?F_DIV_L04
                                                   ?F_INFINITE_L04
                                                   ?F_MUL_L04
                                                   ?F_NAN_L04
                                                   Segment part 9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_ZERO_L04             0000ADD6 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000ADE2 - 0000ADE9 (0x8 bytes), align: 1
  Segment part 15.            Intra module refs:   ?F_DIV_L04
                                                   ?F_MUL_L04
                                                   Segment part 3
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_INFINITE_L04         0000ADE2 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000ADEA - 0000ADEF (0x6 bytes), align: 1
  Segment part 16.            Intra module refs:   ?F_ADD_L04
                                                   ?F_DIV_L04
                                                   ?F_MUL_L04
                                                   Segment part 17
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_NAN_L04              0000ADEA 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000ADF0 - 0000AE09 (0x1a bytes), align: 1
  Segment part 17.            Intra module refs:   ?F_DIV_L04
                                                   ?F_MUL_L04
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000AE0A - 0000AEDF (0xd6 bytes), align: 1
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_MUL_L04              0000AE0A        Segment part 7 (?exp)
                                                   decode_IR (IR)
                                                   exp10 (?exp10)
                                                   real_daylight_calc (application)
                                                   scs_calibration (decode_scs)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000AEE0 - 0000AFEF (0x110 bytes), align: 1
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_DIV_L04              0000AEFC        decode_IR (IR)
                                                   real_daylight_calc (application)
                                                   scs_calibration (decode_scs)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000AFF0 - 0000B00D (0x1e bytes), align: 1
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_CMP_EQ_L04           0000AFFA        Segment part 10 (?exp)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B00E - 0000B015 (0x8 bytes), align: 1
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_CMP_LT_L04           0000B00E        Segment part 4 (?exp)
                                                   exp10 (?exp10)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B016 - 0000B03D (0x28 bytes), align: 1
  Segment part 22.            Intra module refs:   ?F_CMP_GE_L04
                                                   ?F_CMP_LT_L04
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B03E - 0000B04D (0x10 bytes), align: 1
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_CMP_GE_L04           0000B03E        decode_IR (IR)
                                                   exp (?exp)
                                                   exp10 (?exp10)
                                                   scs_calibration (decode_scs)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xV_SWITCH_L06

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B04E - 0000B0E9 (0x9c bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?CV_SWITCH_L06          0000B060        configurator_to_KO (application)
                                                   decode_IR (IR)
                                                   read_KO (configuration)
                                                   sensor_GR_decode (decode_scs)
                                                   write_KO (configuration)
                                                   write_ee_KO (configuration)
           ?SV_SWITCH_L06          0000B068        service_main (application)
           ?LV_SWITCH_L06          0000B074 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG_L07

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B0EA - 0000B0FF (0x16 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_SRAM_SRAM_16_L07    0000B0EA        configuration_procedure (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   factory_default (application)
                                                   remember_parameter (configuration)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B100 - 0000B115 (0x16 bytes), align: 1
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_FLASH_SRAM_16EC_16_L07
                                   0000B100        KO_parameter_initial_temp (configuration)
                                                   KO_setting_error_frame (decode_scs_next)
                                                   address_answer_frame (decode_scs_next)
                                                   address_setting_error_frame (decode_scs_next)
                                                   configuration_answer_frame (decode_scs_next)
                                                   diagnostic_frame (decode_scs_next)
                                                   frame_send_start_pnl_group_confed (application)
                                                   not_allowed_response (decode_scs_next)
                                                   parameter_all_answer (decode_scs_next)
                                                   parameter_request_error_frame (decode_scs_next)
                                                   parameter_setting_error_answer (decode_scs_next)
                                                   parameter_specified_index_answer (decode_scs_next)
                                                   scs_pnl_advance_master (application)
                                                   scs_pnl_advance_slave (application)
                                                   send_aux_frame (decode_scs_next)
                                                   send_group_frame (decode_scs_next)
                                                   send_group_pnl_frame (decode_scs_next)
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_GENERIC24_SRAM_L07
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_SRAM_GENERIC24_L07
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_FLASH_GENERIC24_L07
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_GENERIC_GENERIC_24_L07
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_GENERIC24_FARG_L07
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?LONG_FARG_8_L07        
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?LONG_FARG_16_L07       
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?LONG_FARG_24_L07       
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLASH_FARG_8_L07       
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLASH_FARG_16_L07      
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MEMCLR_8_L07           
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MEMCLR_16_L07          

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVLONG_EEPROM_16_P07

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B116 - 0000B127 (0x12 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_EEPROM_SRAM_16_16_L07
                                   0000B116        configuration_procedure (decode_scs_next)
                                                   load_default_advance_parameter (application)
                                                   load_parameter (configuration)
                                                   start_conf (application)
    -------------------------------------------------------------------------
CODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_EEPROM_RF_SRAM_16_16_L07
                                   
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B128 - 0000B139 (0x12 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_SRAM_EEPROM_16_16_L07
                                   0000B128        configuration_procedure (decode_scs_next)
                                                   factory_default (application)
                                                   remember_parameter (configuration)
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_SRAM_EEPROM_RF_16_16_L07
                                   
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B13A - 0000B14B (0x12 bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_FLASH_EEPROM_16EC_16_L07
                                   0000B13A        KO_parameter_initial (configuration)
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_FLASH_EEPROM_RF_16EC_16_L07
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_EEPROM_EEPROM_16_16EC_L07
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_EEPROM_RF_EEPROM_RF_16_16EC_L07
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_EEPROM_GENERIC_16_24_L07
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_EEPROM_RF_GENERIC_16_24_L07
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_GENERIC_EEPROM_24_16_L07
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_GENERIC_EEPROM_RF_24_16_L07
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EEPROM_FARG_16_L07     
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EEPROM_RF_FARG_16_L07
                                   

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PROLOGUE_L09

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE16_L09         
    -------------------------------------------------------------------------
CODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE15_L09         
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE14_L09         
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE13_L09         
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B14C - 0000B14D (0x2 bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE12_L09         0000B14C        decode_IR (IR)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B14E - 0000B14F (0x2 bytes), align: 1
  Segment part 5.             Intra module refs:   ?PROLOGUE12_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE11_L09         0000B14E 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B150 - 0000B151 (0x2 bytes), align: 1
  Segment part 6.             Intra module refs:   ?PROLOGUE11_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE10_L09         0000B150 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B152 - 0000B153 (0x2 bytes), align: 1
  Segment part 7.             Intra module refs:   ?PROLOGUE10_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE9_L09          0000B152 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B154 - 0000B155 (0x2 bytes), align: 1
  Segment part 8.             Intra module refs:   ?PROLOGUE9_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE8_L09          0000B154        function_service_init (function_service)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B156 - 0000B157 (0x2 bytes), align: 1
  Segment part 9.             Intra module refs:   ?PROLOGUE8_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE7_L09          0000B156        Mode_frame_P2P (application)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B158 - 0000B159 (0x2 bytes), align: 1
  Segment part 10.            Intra module refs:   ?PROLOGUE7_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE6_L09          0000B158        exp (?exp)
                                                   factor_divcalc (application)
                                                   frame_M2_answer (application)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B15A - 0000B15B (0x2 bytes), align: 1
  Segment part 11.            Intra module refs:   ?PROLOGUE6_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE5_L09          0000B15A        put_s1 (IR)
                                                   send_aux_frame (decode_scs_next)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B15C - 0000B15D (0x2 bytes), align: 1
  Segment part 12.            Intra module refs:   ?PROLOGUE5_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE4_L09          0000B15C        Dimmer_regulation (application)
                                                   KO_answer_frame (decode_scs_next)
                                                   configuration_answer_frame (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   daylight_service (application)
                                                   decode_SCS (decode_scs)
                                                   decode_id (decode_scs)
                                                   frame_buffer_clear (decode_scs_next)
                                                   global_variable_initial (global_variable)
                                                   ir_pnl (IR)
                                                   is_gateway_busy (decode_scs)
                                                   led_blinking_ms (application)
                                                   org_ext_broad (decode_scs_next)
                                                   parameter_all_answer (decode_scs_next)
                                                   parameter_setting_error_answer (decode_scs_next)
                                                   parameter_specified_index_answer (decode_scs_next)
                                                   scs_calibration (decode_scs)
                                                   send_frame_pp (decode_scs_next)
                                                   send_frame_pp_broad (decode_scs_next)
                                                   send_frame_pp_ext_broad (decode_scs_next)
                                                   send_group_pnl_frame (decode_scs_next)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B15E - 0000B15F (0x2 bytes), align: 1
  Segment part 13.            Intra module refs:   ?PROLOGUE4_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE3_L09          0000B15E        Function_KO166 (function_service)
                                                   factory_default (application)
                                                   is_scenario_full (IR)
                                                   led_blinking_normal (application)
                                                   start_conf (application)
                                                   write_parameter_scenario (decode_scs_next)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B160 - 0000B161 (0x2 bytes), align: 1
  Segment part 14.            Intra module refs:   ?PROLOGUE3_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE2_L09          0000B160 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B162 - 0000B163 (0x2 bytes), align: 1
  Segment part 15.            Intra module refs:   ?PROLOGUE2_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE1_L09          0000B162 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B164 - 0000B165 (0x2 bytes), align: 1
  Segment part 16.            Intra module refs:   ?PROLOGUE1_L09

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?EPILOGUE_B_L09

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B16_L09       
    -------------------------------------------------------------------------
CODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B15_L09       
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B14_L09       
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B13_L09       
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B166 - 0000B167 (0x2 bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B12_L09       0000B166        decode_IR (IR)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B168 - 0000B169 (0x2 bytes), align: 1
  Segment part 5.             Intra module refs:   ?EPILOGUE_B12_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B11_L09       0000B168 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B16A - 0000B16B (0x2 bytes), align: 1
  Segment part 6.             Intra module refs:   ?EPILOGUE_B11_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B10_L09       0000B16A 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B16C - 0000B16D (0x2 bytes), align: 1
  Segment part 7.             Intra module refs:   ?EPILOGUE_B10_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B9_L09        0000B16C 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B16E - 0000B16F (0x2 bytes), align: 1
  Segment part 8.             Intra module refs:   ?EPILOGUE_B9_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B8_L09        0000B16E        function_service_init (function_service)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B170 - 0000B171 (0x2 bytes), align: 1
  Segment part 9.             Intra module refs:   ?EPILOGUE_B8_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B7_L09        0000B170        Mode_frame_P2P (application)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B172 - 0000B173 (0x2 bytes), align: 1
  Segment part 10.            Intra module refs:   ?EPILOGUE_B7_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B6_L09        0000B172        exp (?exp)
                                                   factor_divcalc (application)
                                                   frame_M2_answer (application)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B174 - 0000B175 (0x2 bytes), align: 1
  Segment part 11.            Intra module refs:   ?EPILOGUE_B6_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B5_L09        0000B174        put_s1 (IR)
                                                   send_aux_frame (decode_scs_next)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B176 - 0000B177 (0x2 bytes), align: 1
  Segment part 12.            Intra module refs:   ?EPILOGUE_B5_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B4_L09        0000B176        Dimmer_regulation (application)
                                                   KO_answer_frame (decode_scs_next)
                                                   configuration_answer_frame (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   daylight_service (application)
                                                   decode_SCS (decode_scs)
                                                   decode_id (decode_scs)
                                                   frame_buffer_clear (decode_scs_next)
                                                   global_variable_initial (global_variable)
                                                   ir_pnl (IR)
                                                   is_gateway_busy (decode_scs)
                                                   led_blinking_ms (application)
                                                   org_ext_broad (decode_scs_next)
                                                   parameter_all_answer (decode_scs_next)
                                                   parameter_setting_error_answer (decode_scs_next)
                                                   parameter_specified_index_answer (decode_scs_next)
                                                   scs_calibration (decode_scs)
                                                   send_frame_pp (decode_scs_next)
                                                   send_frame_pp_broad (decode_scs_next)
                                                   send_frame_pp_ext_broad (decode_scs_next)
                                                   send_group_pnl_frame (decode_scs_next)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B178 - 0000B179 (0x2 bytes), align: 1
  Segment part 13.            Intra module refs:   ?EPILOGUE_B4_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B3_L09        0000B178        Function_KO166 (function_service)
                                                   factory_default (application)
                                                   is_scenario_full (IR)
                                                   led_blinking_normal (application)
                                                   start_conf (application)
                                                   write_parameter_scenario (decode_scs_next)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B17A - 0000B17B (0x2 bytes), align: 1
  Segment part 14.            Intra module refs:   ?EPILOGUE_B3_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B2_L09        0000B17A 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B17C - 0000B17D (0x2 bytes), align: 1
  Segment part 15.            Intra module refs:   ?EPILOGUE_B2_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B1_L09        0000B17C 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B17E - 0000B187 (0xa bytes), align: 1
  Segment part 16.            Intra module refs:   ?EPILOGUE_B1_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B0_L09        0000B17E 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR4_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B188, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R4_is_cg_reg
                                   0000B188        Mode_frame_P2P (application)
                                                   decode_IR (IR)
                                                   exp (?exp)
                                                   factor_divcalc (application)
                                                   frame_M2_answer (application)
                                                   function_service_init (function_service)
                                                   put_s1 (IR)
                                                   send_aux_frame (decode_scs_next)
                                                   usart0_rx_ser (usart)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR5_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B188, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R5_is_cg_reg
                                   0000B188        Mode_frame_P2P (application)
                                                   decode_IR (IR)
                                                   exp (?exp)
                                                   factor_divcalc (application)
                                                   frame_M2_answer (application)
                                                   function_service_init (function_service)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR6_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B188, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R6_is_cg_reg
                                   0000B188        Mode_frame_P2P (application)
                                                   decode_IR (IR)
                                                   function_service_init (function_service)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR7_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B188, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R7_is_cg_reg
                                   0000B188        function_service_init (function_service)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR8_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B188, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R8_is_cg_reg
                                   0000B188        decode_IR (IR)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR9_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B188, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R9_is_cg_reg
                                   0000B188        decode_IR (IR)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR10_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B188, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R10_is_cg_reg
                                   0000B188        decode_IR (IR)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR11_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B188, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R11_is_cg_reg
                                   0000B188        decode_IR (IR)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?low_level_init

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B188 - 0000B18B (0x4 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        0000B188        ?call_low_level_init (?C_STARTUP)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 2. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?segment_init

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B18C - 0000B193 (0x8 bytes), align: 1
  Segment part 3.             Intra module refs:   __segment_init
           LOCAL                   ADDRESS         
           =====                   =======         
           __memclr                0000B18C 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B194 - 0000B19B (0x8 bytes), align: 1
  Segment part 4.             Intra module refs:   __segment_init
           LOCAL                   ADDRESS         
           =====                   =======         
           __flashcpy              0000B194 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B19C - 0000B1A7 (0xc bytes), align: 1
  Segment part 5.             Intra module refs:   __flashcpy
                                                   __memclr
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B1A8 - 0000B1DB (0x34 bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __segment_init          0000B1A8        ?need_segment_init (?C_STARTUP)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 7. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strcmp

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B1DC - 0000B207 (0x2c bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcmp                  0000B1DC        id_frame (decode_scs_next)
                                                   usart0_rx_ser (usart)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 2. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strncpy

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000B208 - 0000B233 (0x2c bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strncpy                 0000B208        KO_answer_frame (decode_scs_next)
                                                   PnL_ad_end (application)
                                                   configuration_answer_frame (decode_scs_next)
                                                   configuration_procedure (decode_scs_next)
                                                   configuration_setting_frame (decode_scs_next)
                                                   decode_IR (IR)
                                                   decode_SCS (decode_scs)
                                                   id_frame (decode_scs_next)
                                                   ir_pnl (IR)
                                                   scs_pnl_advance_master (application)
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000B234 - 0000B23D (0xa bytes), align: 1
  Segment part 4.             Intra module refs:   strncpy
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 2. NOT NEEDED.

    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?FILLER_BYTES

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00000000 - 0000007B (0x7c bytes), align: 0
  Segment part 0.




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module                    CODE      DATA      XDATA
------                    ----      ----      -----
                         (Rel)  (Rel)  (Abs)  (Rel)
?C_STARTUP                  36
?EEPROM_16                  76
?EPILOGUE_B_L09             34
?FILLER_BYTES
  + common                 124
?FLOATS_L04              1 092
?L_EC_MUL_L03               64
?L_SHL_L03                  16
?MOVE_LONG_L07              44
?MOVLONG_EEPROM_16_P07      54
?PROLOGUE_L09               26
?RESET
  + common                   4
?SL_DIVMOD_L03              16
?SS_DIVMOD_L02              48
?S_EC_MUL_L02               16
?S_SHL_L02                  12
?UL_DIVMOD_L03              70
?UL_SHR_L03                 16
?US_DIVMOD_L02              40
?US_SHR_L02                 12
?__exit                      6
?errno                              2
?exp                       332
?exp10                      84
?low_level_init              4
?segment_init               80
?strcmp                     44
?strncpy                    54
?xV_SWITCH_L06             156
IR                       5 486    242      6
  + shared                  12             8
  + common                 124
PIR                        496     16
US                         488     51
application             10 559    165     11
  + shared                                 2
board                    2 592            15
  + common                  68
configuration            3 908
decode_scs               3 367     51
decode_scs_next         10 640    242
function_service         4 630
global_variable            744    804           228
main                       246
usart                      594     19      6
  + common                  92
N/A (command line)                320
N/A (alignment)
----------              ------  -----     --    ---
Total:                  46 194  1 912     48    228
  + common                 124


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  00000000 00000000
  01  usart1_rx_ser
      | Stack used (prev) :  00000000 00000000
      | + function block  :  00000007 00000002
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000007 00000002


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  00000007 00000002
  01  usart_tx_ser
      | Stack used (prev) :  00000007 00000002
      | + function block  :  00000005 00000002
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  0000000C 00000004


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  0000000C 00000004
  01  timer0_ovf_ser
      | Stack used (prev) :  0000000C 00000004
      | + function block  :  00000002 00000002
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  0000000E 00000006


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  0000000E 00000006
  02    not_bit
        | Stack used (prev) :  0000000E 00000006
        | + function block  :  00000000 00000004
  04        led_blinking_disable
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000000 00000002
  04        led_blinking
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000004 00000002
  03      led_blinking_normal
          | Stack used (prev) :  00000012 00000006
          | + function block  :  00000003 00000004
  06            put_c
                | Stack used (prev) :  0000000E 00000006
                | + function block  :  00000000 00000002
  05          put_s
              | Stack used (prev) :  0000000E 00000008
              | + function block  :  00000002 00000002
  06            StrToChar
                | Stack used (prev) :  0000000E 00000006
                | + function block  :  00000000 00000002
  05          is_gateway_busy
              | Stack used (prev) :  0000000E 00000006
              | + function block  :  00000004 00000004
  05          CharToStr
              | Stack used (prev) :  0000000E 00000006
              | + function block  :  00000002 00000002
  05          delay_ms
              | Stack used (prev) :  0000000E 00000006
              | + function block  :  00000000 00000002
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  0000001C 00000002
  03      frame_send_end_pnl
          | Stack used (prev) :  0000002E 0000000C
          | + function block  :  00000000 00000002
  05          put_s
              | Stack used (prev) :  0000000E 00000008
              | + function block  :  00000002 00000002
              |  Already listed
  05          is_gateway_busy
              | Stack used (prev) :  0000000E 00000006
              | + function block  :  00000004 00000004
              |  Already listed
  05          delay_ms
              | Stack used (prev) :  0000000E 00000006
              | + function block  :  00000000 00000002
              |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  00000011 00000002
  03      frame_send_enable_automatic_control
          | Stack used (prev) :  00000023 0000000C
          | + function block  :  00000000 00000002
  02    PnL_NONE_end
        | Stack used (prev) :  0000002E 0000000E
        | + function block  :  00000000 00000002
  03      strncpy
          | Stack used (prev) :  0000000E 00000006
          | + function block  :  00000004 00000002
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  0000001C 00000002
            |  Already listed
  04        CharToStr
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000002 00000002
            |  Already listed
  03      send_group_pnl_frame
          | Stack used (prev) :  0000002E 0000000C
          | + function block  :  00000018 00000002
  03      send_frame_pp_ext_broad
          | Stack used (prev) :  00000012 0000000A
          | + function block  :  0000001C 00000002
          |  Already listed
  03      send_frame_pp_broad
          | Stack used (prev) :  00000012 0000000A
          | + function block  :  00000011 00000002
          |  Already listed
  03      CharToStr
          | Stack used (prev) :  0000000E 00000006
          | + function block  :  00000002 00000002
          |  Already listed
  03      led_blinking_disable
          | Stack used (prev) :  0000000E 00000006
          | + function block  :  00000000 00000002
          |  Already listed
  02    PnL_ad_end
        | Stack used (prev) :  00000046 0000000E
        | + function block  :  00000014 00000002
  02    led_blinking_disable
        | Stack used (prev) :  0000000E 00000006
        | + function block  :  00000000 00000002
        |  Already listed
  02    led_blinking
        | Stack used (prev) :  0000000E 00000006
        | + function block  :  00000004 00000002
        |  Already listed
  01  timer2_ovf_ser
      | Stack used (prev) :  0000005A 00000010
      | + function block  :  00000012 00000002
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  0000006C 00000012


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  0000006C 00000012
  01  timer1_ovf_ser
      | Stack used (prev) :  0000006C 00000012
      | + function block  :  00000001 00000002
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  0000006D 00000014


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  0000006D 00000014
  02    strcmp
        | Stack used (prev) :  0000006D 00000014
        | + function block  :  00000000 00000002
  01  usart0_rx_ser
      | Stack used (prev) :  0000006D 00000014
      | + function block  :  00000015 00000004
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000082 00000018


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  00000082 00000018
  01  usart0_tx_ser
      | Stack used (prev) :  00000082 00000018
      | + function block  :  00000005 00000002
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000087 0000001A


  ->Sub-tree of type: Function tree
                             CSTACK   RSTACK
    | Stack used (prev) :  00000087 0000001A
  02    init_USART0
        | Stack used (prev) :  00000087 0000001A
        | + function block  :  00000000 00000002
  02    test_ID_assigned
        | Stack used (prev) :  00000087 0000001A
        | + function block  :  00000000 00000004
  02    global_variable_initial
        | Stack used (prev) :  00000087 0000001A
        | + function block  :  00000004 00000004
  03      strncpy
          | Stack used (prev) :  0000000E 00000006
          | + function block  :  00000004 00000002
          |  Already listed
  04        scenario_remove
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000004
  03      aux_procedure
          | Stack used (prev) :  00000087 0000001E
          | + function block  :  00000001 00000002
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  0000001C 00000002
            |  Already listed
  04        led_blinking_normal
            | Stack used (prev) :  00000012 00000006
            | + function block  :  00000003 00000004
            |  Already listed
  03      configuration_receive_answer_frame
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
  04        strncpy
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000004 00000002
            |  Already listed
  04        put_s
            | Stack used (prev) :  0000000E 00000008
            | + function block  :  00000002 00000002
            |  Already listed
  07              strncpy
                  | Stack used (prev) :  0000000E 00000006
                  | + function block  :  00000004 00000002
                  |  Already listed
  07              send_frame_pp_ext_broad
                  | Stack used (prev) :  00000012 0000000A
                  | + function block  :  0000001C 00000002
                  |  Already listed
  07              send_frame_pp_ext_broad
                  | Stack used (prev) :  00000012 0000000A
                  | + function block  :  0000001C 00000002
                  |  Already listed
  07              send_frame_pp_ext_broad
                  | Stack used (prev) :  00000012 0000000A
                  | + function block  :  0000001C 00000002
                  |  Already listed
  07              send_frame_pp_ext_broad
                  | Stack used (prev) :  00000012 0000000A
                  | + function block  :  0000001C 00000002
                  |  Already listed
  07              send_frame_pp_ext_broad
                  | Stack used (prev) :  00000012 0000000A
                  | + function block  :  0000001C 00000002
                  |  Already listed
  07              send_frame_pp_ext_broad
                  | Stack used (prev) :  00000012 0000000A
                  | + function block  :  0000001C 00000002
                  |  Already listed
  07              send_frame_pp_ext_broad
                  | Stack used (prev) :  00000012 0000000A
                  | + function block  :  0000001C 00000002
                  |  Already listed
  07              CharToStr
                  | Stack used (prev) :  0000000E 00000006
                  | + function block  :  00000002 00000002
                  |  Already listed
  07              manual_reception_buffer_clear
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000001 00000004
  06            KO_answer_frame
                | Stack used (prev) :  00000088 0000001E
                | + function block  :  00000018 00000002
  05          ko_answer_all
              | Stack used (prev) :  000000A0 00000020
              | + function block  :  00000001 00000002
  05          frame_buffer_clear
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000004 00000004
  05          KO_answer_frame
              | Stack used (prev) :  00000088 0000001E
              | + function block  :  00000018 00000002
              |  Already listed
  05          KO_answer_frame
              | Stack used (prev) :  00000088 0000001E
              | + function block  :  00000018 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000012 0000000A
              | + function block  :  0000001C 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000012 0000000A
              | + function block  :  0000001C 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000012 0000000A
              | + function block  :  0000001C 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000012 0000000A
              | + function block  :  0000001C 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000012 0000000A
              | + function block  :  0000001C 00000002
              |  Already listed
  04        address_answer_frame
            | Stack used (prev) :  000000A1 00000022
            | + function block  :  00000013 00000002
  07              send_frame_pp_ext_broad
                  | Stack used (prev) :  00000012 0000000A
                  | + function block  :  0000001C 00000002
                  |  Already listed
  07              send_frame_pp_ext_broad
                  | Stack used (prev) :  00000012 0000000A
                  | + function block  :  0000001C 00000002
                  |  Already listed
  07              CharToStr
                  | Stack used (prev) :  0000000E 00000006
                  | + function block  :  00000002 00000002
                  |  Already listed
  06            not_allowed_response
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000014 00000004
  06            not_allowed_response
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000014 00000004
                |  Already listed
  06            not_allowed_response
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000014 00000004
                |  Already listed
  07              send_frame_pp_ext_broad
                  | Stack used (prev) :  00000012 0000000A
                  | + function block  :  0000001C 00000002
                  |  Already listed
  06            parameter_request_error_frame
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000011 00000004
  06            frame_buffer_clear
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000004 00000004
                |  Already listed
  06            frame_buffer_clear
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000004 00000004
                |  Already listed
  06            KO_answer_frame
                | Stack used (prev) :  00000088 0000001E
                | + function block  :  00000018 00000002
                |  Already listed
  06            KO_answer_frame
                | Stack used (prev) :  00000088 0000001E
                | + function block  :  00000018 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            read_KO
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000000 00000002
  06            CharToStr
                | Stack used (prev) :  0000000E 00000006
                | + function block  :  00000002 00000002
                |  Already listed
  05          parameter_specified_index_answer
              | Stack used (prev) :  000000A0 00000020
              | + function block  :  00000018 00000002
  06            not_allowed_response
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000014 00000004
                |  Already listed
  06            not_allowed_response
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000014 00000004
                |  Already listed
  06            not_allowed_response
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000014 00000004
                |  Already listed
  06            not_allowed_response
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000014 00000004
                |  Already listed
  06            frame_buffer_clear
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000004 00000004
                |  Already listed
  06            frame_buffer_clear
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000004 00000004
                |  Already listed
  06            frame_buffer_clear
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000004 00000004
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            read_KO
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000000 00000002
                |  Already listed
  06            CharToStr
                | Stack used (prev) :  0000000E 00000006
                | + function block  :  00000002 00000002
                |  Already listed
  06            manual_reception_buffer_clear
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000001 00000004
                |  Already listed
  05          parameter_all_answer
              | Stack used (prev) :  0000009B 0000001E
              | + function block  :  00000018 00000002
  04        parameter_answer_frame
            | Stack used (prev) :  000000B8 00000022
            | + function block  :  00000000 00000002
  04        KO_answer_frame
            | Stack used (prev) :  00000088 0000001E
            | + function block  :  00000018 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  0000001C 00000002
            |  Already listed
  04        CharToStr
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000002 00000002
            |  Already listed
  04        StrToChar
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000000 00000002
            |  Already listed
  03      configuration_answer_frame
          | Stack used (prev) :  000000B8 00000024
          | + function block  :  00000020 00000002
  04        strncpy
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000004 00000002
            |  Already listed
  05          strncpy
              | Stack used (prev) :  0000000E 00000006
              | + function block  :  00000004 00000002
              |  Already listed
  05          scenario_remove
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000000 00000004
              |  Already listed
  05          send_group_pnl_frame
              | Stack used (prev) :  0000002E 0000000C
              | + function block  :  00000018 00000002
              |  Already listed
  05          send_group_pnl_frame
              | Stack used (prev) :  0000002E 0000000C
              | + function block  :  00000018 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000012 0000000A
              | + function block  :  0000001C 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000012 0000000A
              | + function block  :  0000001C 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000012 0000000A
              | + function block  :  0000001C 00000002
              |  Already listed
  06            write_moudle_parameter
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000000 00000004
  06            write_moudle_parameter
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000000 00000004
                |  Already listed
  06            write_moudle_parameter
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000000 00000004
                |  Already listed
  06            write_moudle_parameter
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000000 00000004
                |  Already listed
  06            write_moudle_parameter
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000000 00000004
                |  Already listed
  05          KO_parameter_initial
              | Stack used (prev) :  00000087 0000001E
              | + function block  :  00000002 00000002
  06            read_KO
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000000 00000002
                |  Already listed
  06            write_KO
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000001 00000004
  05          remember_parameter
              | Stack used (prev) :  00000088 0000001E
              | + function block  :  0000003A 00000002
  05          system_reset
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000000 00000002
  05          CharToStr
              | Stack used (prev) :  0000000E 00000006
              | + function block  :  00000002 00000002
              |  Already listed
  05          StrToChar
              | Stack used (prev) :  0000000E 00000006
              | + function block  :  00000000 00000002
              |  Already listed
  05          led_blinking_normal
              | Stack used (prev) :  00000012 00000006
              | + function block  :  00000003 00000004
              |  Already listed
  07              write_moudle_parameter_temp
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
  07              write_moudle_parameter_temp
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              write_moudle_parameter_temp
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              write_moudle_parameter_temp
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              write_moudle_parameter_temp
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              write_moudle_parameter_temp
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  06            KO_parameter_initial_temp
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000000 00000004
  05          factory_default
              | Stack used (prev) :  00000087 0000001E
              | + function block  :  00000035 00000002
  05          timer_flex_initial
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000000 00000002
  06            led_blinking
                | Stack used (prev) :  0000000E 00000006
                | + function block  :  00000004 00000002
                |  Already listed
  05          led_blinking_ms
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000008 00000002
  04        configuration_procedure
            | Stack used (prev) :  000000C2 00000020
            | + function block  :  0000004A 00000002
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            send_frame_pp_ext_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  0000001C 00000002
                |  Already listed
  06            CharToStr
                | Stack used (prev) :  0000000E 00000006
                | + function block  :  00000002 00000002
                |  Already listed
  05          KO_setting_error_frame
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000016 00000004
  05          KO_setting_error_frame
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000016 00000004
              |  Already listed
  05          KO_setting_error_frame
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000016 00000004
              |  Already listed
  05          KO_setting_error_frame
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000016 00000004
              |  Already listed
  05          KO_parameter_initial_temp
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000000 00000004
              |  Already listed
  04        KO_setting_procedure
            | Stack used (prev) :  0000009D 0000001E
            | + function block  :  00000000 00000002
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000012 0000000A
              | + function block  :  0000001C 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000012 0000000A
              | + function block  :  0000001C 00000002
              |  Already listed
  05          CharToStr
              | Stack used (prev) :  0000000E 00000006
              | + function block  :  00000002 00000002
              |  Already listed
  04        parameter_setting_error_answer
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000018 00000004
  04        parameter_setting_error_answer
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000018 00000004
            |  Already listed
  04        parameter_setting_error_answer
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000018 00000004
            |  Already listed
  04        write_parameter_scenario
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000003 00000004
  05          ko_answer_all
              | Stack used (prev) :  000000A0 00000020
              | + function block  :  00000001 00000002
              |  Already listed
  05          frame_buffer_clear
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000004 00000004
              |  Already listed
  05          KO_answer_frame
              | Stack used (prev) :  00000088 0000001E
              | + function block  :  00000018 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000012 0000000A
              | + function block  :  0000001C 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000012 0000000A
              | + function block  :  0000001C 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000012 0000000A
              | + function block  :  0000001C 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000012 0000000A
              | + function block  :  0000001C 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000012 0000000A
              | + function block  :  0000001C 00000002
              |  Already listed
  05          CharToStr
              | Stack used (prev) :  0000000E 00000006
              | + function block  :  00000002 00000002
              |  Already listed
  04        address_setting_error_frame
            | Stack used (prev) :  000000A1 00000022
            | + function block  :  00000016 00000002
  04        address_setting_error_frame
            | Stack used (prev) :  000000A1 00000022
            | + function block  :  00000016 00000002
            |  Already listed
  04        KO_answer_frame
            | Stack used (prev) :  00000088 0000001E
            | + function block  :  00000018 00000002
            |  Already listed
  04        configuration_answer_frame
            | Stack used (prev) :  000000B8 00000024
            | + function block  :  00000020 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  0000001C 00000002
            |  Already listed
  04        write_KO
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000001 00000004
            |  Already listed
  04        configuration_checking
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
  04        manual_reception_buffer_clear
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000001 00000004
            |  Already listed
  03      configuration_setting_frame
          | Stack used (prev) :  0000010C 00000026
          | + function block  :  00000013 00000002
  04        strncpy
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000004 00000002
            |  Already listed
  04        strcmp
            | Stack used (prev) :  0000006D 00000014
            | + function block  :  00000000 00000002
            |  Already listed
  05          ko_answer_all
              | Stack used (prev) :  000000A0 00000020
              | + function block  :  00000001 00000002
              |  Already listed
  05          frame_buffer_clear
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000004 00000004
              |  Already listed
  05          configuration_answer_frame
              | Stack used (prev) :  000000B8 00000024
              | + function block  :  00000020 00000002
              |  Already listed
  05          configuration_answer_frame
              | Stack used (prev) :  000000B8 00000024
              | + function block  :  00000020 00000002
              |  Already listed
  05          configuration_answer_frame
              | Stack used (prev) :  000000B8 00000024
              | + function block  :  00000020 00000002
              |  Already listed
  05          configuration_answer_frame
              | Stack used (prev) :  000000B8 00000024
              | + function block  :  00000020 00000002
              |  Already listed
  05          configuration_answer_frame
              | Stack used (prev) :  000000B8 00000024
              | + function block  :  00000020 00000002
              |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000012 0000000A
              | + function block  :  0000001C 00000002
              |  Already listed
  04        diagnostic_frame
            | Stack used (prev) :  000000D8 00000026
            | + function block  :  00000011 00000002
  04        diagnostic_frame
            | Stack used (prev) :  000000D8 00000026
            | + function block  :  00000011 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  0000001C 00000002
            |  Already listed
  04        ID_setting
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000004
  04        system_reset
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        timer_flex_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  03      id_frame
          | Stack used (prev) :  000000E9 00000028
          | + function block  :  00000011 00000002
  03      send_frame_pp_ext_broad
          | Stack used (prev) :  00000012 0000000A
          | + function block  :  0000001C 00000002
          |  Already listed
  04        write_ee_KO
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000001 00000004
  04        write_KO
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000001 00000004
            |  Already listed
  04        buzzer_ms
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
  04        led_blinking_disable
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000004 00000002
            |  Already listed
  03      scs_calibration
          | Stack used (prev) :  00000088 0000001E
          | + function block  :  00000004 00000002
  03      scs_calibration
          | Stack used (prev) :  00000088 0000001E
          | + function block  :  00000004 00000002
          |  Already listed
  03      sensor_GR_decode
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
  03      StrToChar
          | Stack used (prev) :  0000000E 00000006
          | + function block  :  00000000 00000002
          |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  0000001C 00000002
            |  Already listed
  04        CharToStr
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000002 00000002
            |  Already listed
  03      frame_M2_answer
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000018 00000004
  02    decode_SCS
        | Stack used (prev) :  0000011F 0000002A
        | + function block  :  00000019 00000002
  03      id_frame
          | Stack used (prev) :  000000E9 00000028
          | + function block  :  00000011 00000002
          |  Already listed
  03      send_frame_pp_ext_broad
          | Stack used (prev) :  00000012 0000000A
          | + function block  :  0000001C 00000002
          |  Already listed
  03      StrToChar
          | Stack used (prev) :  0000000E 00000006
          | + function block  :  00000000 00000002
          |  Already listed
  02    decode_id
        | Stack used (prev) :  000000FA 0000002A
        | + function block  :  00000008 00000002
  03      KO_parameter_initial
          | Stack used (prev) :  00000087 0000001E
          | + function block  :  00000002 00000002
          |  Already listed
  03      StrToChar
          | Stack used (prev) :  0000000E 00000006
          | + function block  :  00000000 00000002
          |  Already listed
  03      configurator_to_KO
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000004
  02    load_parameter
        | Stack used (prev) :  00000089 00000020
        | + function block  :  00000005 00000002
  02    WDT_off
        | Stack used (prev) :  00000087 0000001A
        | + function block  :  00000000 00000002
  02    adc_initial
        | Stack used (prev) :  00000087 0000001A
        | + function block  :  00000000 00000002
  02    buzzer_ms
        | Stack used (prev) :  00000087 0000001A
        | + function block  :  00000000 00000002
        |  Already listed
  02    IO_Initial
        | Stack used (prev) :  00000087 0000001A
        | + function block  :  00000000 00000002
  05          Start_Time_Delay
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000000 00000002
  05          timer0_enable
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000000 00000002
  06            factor_divcalc
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000006 00000004
  06            factor_divcalc
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000006 00000004
                |  Already listed
  05          daylight_set_init
              | Stack used (prev) :  0000008D 0000001E
              | + function block  :  00000000 00000002
  05          ultWarmUpEvents
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000000 00000002
  04        function_service_init
            | Stack used (prev) :  0000008D 00000020
            | + function block  :  00000008 00000002
  09                  send_frame_pp_broad
                      | Stack used (prev) :  00000012 0000000A
                      | + function block  :  00000011 00000002
                      |  Already listed
  09                  CharToStr
                      | Stack used (prev) :  0000000E 00000006
                      | + function block  :  00000002 00000002
                      |  Already listed
  08                Mode_frame_GR
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  0000000B 00000002
  07              GS_presence_send
                  | Stack used (prev) :  00000092 0000001C
                  | + function block  :  00000000 00000002
  08                Start_Time_Delay
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                Start_Time_Delay
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000000 00000002
                    |  Already listed
  07              WT_20s_detect
                  | Stack used (prev) :  00000087 0000001C
                  | + function block  :  00000000 00000002
  07              Stop_allTimer
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
  07              Start_Time_Delay
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Mode_frame_GR
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  0000000B 00000002
                  |  Already listed
  06            _Standby_state
                | Stack used (prev) :  00000092 0000001E
                | + function block  :  00000000 00000002
  10                    put_s
                        | Stack used (prev) :  0000000E 00000008
                        | + function block  :  00000002 00000002
                        |  Already listed
  10                    is_gateway_busy
                        | Stack used (prev) :  0000000E 00000006
                        | + function block  :  00000004 00000004
                        |  Already listed
  10                    delay_ms
                        | Stack used (prev) :  0000000E 00000006
                        | + function block  :  00000000 00000002
                        |  Already listed
  09                  send_frame_pp
                      | Stack used (prev) :  00000087 0000001A
                      | + function block  :  00000011 00000002
  09                  CharToStr
                      | Stack used (prev) :  0000000E 00000006
                      | + function block  :  00000002 00000002
                      |  Already listed
  08                frame_on_off
                    | Stack used (prev) :  00000098 0000001C
                    | + function block  :  0000000B 00000002
  08                Mode_frame_GR
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  0000000B 00000002
                    |  Already listed
  07              frame_ON_send
                  | Stack used (prev) :  000000A3 0000001E
                  | + function block  :  00000000 00000002
  07              GS_presence_send
                  | Stack used (prev) :  00000092 0000001C
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Stop_allTimer
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Start_Time_Delay
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Mode_frame_GR
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  0000000B 00000002
                  |  Already listed
  06            _ReTrigger_State
                | Stack used (prev) :  000000A3 00000020
                | + function block  :  00000000 00000002
  08                buzzer_ms
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000000 00000002
                    |  Already listed
  07              Delay_Alert
                  | Stack used (prev) :  00000087 0000001C
                  | + function block  :  00000000 00000002
  08                frame_on_off
                    | Stack used (prev) :  00000098 0000001C
                    | + function block  :  0000000B 00000002
                    |  Already listed
  08                Mode_frame_GR
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  0000000B 00000002
                    |  Already listed
  07              frame_OFF_send
                  | Stack used (prev) :  000000A3 0000001E
                  | + function block  :  00000000 00000002
  07              frame_OFF_send
                  | Stack used (prev) :  000000A3 0000001E
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              GS_presence_send
                  | Stack used (prev) :  00000092 0000001C
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              WT_20s_detect
                  | Stack used (prev) :  00000087 0000001C
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              WT_20s_detect
                  | Stack used (prev) :  00000087 0000001C
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Stop_allTimer
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Start_Time_Delay
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Mode_frame_GR
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  0000000B 00000002
                  |  Already listed
  06            _Maintain_state
                | Stack used (prev) :  000000A3 00000020
                | + function block  :  00000000 00000002
  08                frame_OFF_send
                    | Stack used (prev) :  000000A3 0000001E
                    | + function block  :  00000000 00000002
                    |  Already listed
  07              OFF_takeline
                  | Stack used (prev) :  000000A3 00000020
                  | + function block  :  00000000 00000002
  08                frame_ON_send
                    | Stack used (prev) :  000000A3 0000001E
                    | + function block  :  00000000 00000002
                    |  Already listed
  09                  Start_Time_Delay
                      | Stack used (prev) :  00000087 0000001A
                      | + function block  :  00000000 00000002
                      |  Already listed
  08                Call_detect_delay
                    | Stack used (prev) :  00000087 0000001C
                    | + function block  :  00000000 00000002
  08                Mode_frame_GR
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  0000000B 00000002
                    |  Already listed
  07              ON_takeline
                  | Stack used (prev) :  000000A3 00000020
                  | + function block  :  00000000 00000002
  07              frame_OFF_send
                  | Stack used (prev) :  000000A3 0000001E
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              frame_ON_send
                  | Stack used (prev) :  000000A3 0000001E
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              GS_presence_send
                  | Stack used (prev) :  00000092 0000001C
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Call_detect_delay
                  | Stack used (prev) :  00000087 0000001C
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Start_Time_Delay
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Mode_frame_GR
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  0000000B 00000002
                  |  Already listed
  06            _Initial_state
                | Stack used (prev) :  000000A3 00000022
                | + function block  :  00000000 00000002
  08                frame_ON_send
                    | Stack used (prev) :  000000A3 0000001E
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                frame_ON_send
                    | Stack used (prev) :  000000A3 0000001E
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                frame_ON_send
                    | Stack used (prev) :  000000A3 0000001E
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                frame_ON_send
                    | Stack used (prev) :  000000A3 0000001E
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                WT_20s_detect
                    | Stack used (prev) :  00000087 0000001C
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                WT_20s_detect
                    | Stack used (prev) :  00000087 0000001C
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                Call_detect_delay
                    | Stack used (prev) :  00000087 0000001C
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                Call_detect_delay
                    | Stack used (prev) :  00000087 0000001C
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                Call_detect_delay
                    | Stack used (prev) :  00000087 0000001C
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                Stop_allTimer
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                Start_Time_Delay
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                Start_Time_Delay
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                Start_Time_Delay
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                Start_Time_Delay
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                Start_Time_Delay
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                Start_Time_Delay
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                regulation_timer_initial
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000000 00000002
  09                  buzzer_ms
                      | Stack used (prev) :  00000087 0000001A
                      | + function block  :  00000000 00000002
                      |  Already listed
  09                  delay_ms
                      | Stack used (prev) :  0000000E 00000006
                      | + function block  :  00000000 00000002
                      |  Already listed
  11                      delay_us
                          | Stack used (prev) :  00000087 0000001A
                          | + function block  :  00000000 00000002
  10                    read_adc10bit
                        | Stack used (prev) :  00000087 0000001C
                        | + function block  :  00000000 00000002
  12                        exp
                            | Stack used (prev) :  00000087 0000001A
                            | + function block  :  00000006 00000004
  11                      exp10
                          | Stack used (prev) :  0000008D 0000001E
                          | + function block  :  00000000 00000002
  10                    real_daylight_calc
                        | Stack used (prev) :  0000008D 00000020
                        | + function block  :  00000002 00000002
  09                  get_dl_level
                      | Stack used (prev) :  0000008F 00000022
                      | + function block  :  00000000 00000002
  09                  daylight_set_init
                      | Stack used (prev) :  0000008D 0000001E
                      | + function block  :  00000000 00000002
                      |  Already listed
  08                DLL_setpoint
                    | Stack used (prev) :  0000008F 00000024
                    | + function block  :  00000001 00000002
  08                frame_M2_answer
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000018 00000004
                    |  Already listed
  08                Mode_frame_GR
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  0000000B 00000002
                    |  Already listed
  07              Check_SCS_received
                  | Stack used (prev) :  000000A3 00000026
                  | + function block  :  00000000 00000002
  07              frame_ON_send
                  | Stack used (prev) :  000000A3 0000001E
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              frame_ON_send
                  | Stack used (prev) :  000000A3 0000001E
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Call_detect_delay
                  | Stack used (prev) :  00000087 0000001C
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Stop_allTimer
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Stop_allTimer
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Stop_allTimer
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Start_Time_Delay
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Start_Time_Delay
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Start_Time_Delay
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Start_Time_Delay
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              frame_on_off
                  | Stack used (prev) :  00000098 0000001C
                  | + function block  :  0000000B 00000002
                  |  Already listed
  07              Mode_frame_GR
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  0000000B 00000002
                  |  Already listed
  06            Check_frame_received
                | Stack used (prev) :  000000A3 00000028
                | + function block  :  00000000 00000002
  05          Function_LM_GR
              | Stack used (prev) :  000000A3 0000002A
              | + function block  :  00000000 00000002
  06            Dled_light_on_ms
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000000 00000002
  08                delay_us
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000000 00000002
                    |  Already listed
  11                      delay_us
                          | Stack used (prev) :  00000087 0000001A
                          | + function block  :  00000000 00000002
                          |  Already listed
  10                    read_adc8bit
                        | Stack used (prev) :  00000087 0000001C
                        | + function block  :  00000000 00000002
  09                  Ultrasonic_detection
                      | Stack used (prev) :  00000087 0000001E
                      | + function block  :  00000002 00000002
  09                  US_SENSE_SET
                      | Stack used (prev) :  00000087 0000001A
                      | + function block  :  00000000 00000002
  08                us_detection
                    | Stack used (prev) :  00000089 00000020
                    | + function block  :  00000000 00000002
  07              get_us
                  | Stack used (prev) :  00000089 00000022
                  | + function block  :  00000001 00000002
  07              get_us
                  | Stack used (prev) :  00000089 00000022
                  | + function block  :  00000001 00000002
                  |  Already listed
  07              get_us
                  | Stack used (prev) :  00000089 00000022
                  | + function block  :  00000001 00000002
                  |  Already listed
  08                read_adc8bit
                    | Stack used (prev) :  00000087 0000001C
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                PIR_SENSE_SET
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000000 00000002
  07              PIR_detect
                  | Stack used (prev) :  00000087 0000001E
                  | + function block  :  00000002 00000002
  06            motion_detect
                | Stack used (prev) :  0000008A 00000024
                | + function block  :  00000001 00000002
  05          occupancy_detect
              | Stack used (prev) :  0000008B 00000026
              | + function block  :  00000002 00000002
  06            get_dl_level
                | Stack used (prev) :  0000008F 00000022
                | + function block  :  00000000 00000002
                |  Already listed
  06            PofL_calc
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000000 00000004
  06            PofL_calc
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000000 00000004
                |  Already listed
  06            PofL_calc
                | Stack used (prev) :  00000087 0000001A
                | + function block  :  00000000 00000004
                |  Already listed
  05          daylight_service
              | Stack used (prev) :  0000008F 00000024
              | + function block  :  00000004 00000002
  07              CharToStr
                  | Stack used (prev) :  0000000E 00000006
                  | + function block  :  00000002 00000002
                  |  Already listed
  07              regulation_timer_initial
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              regulation_timer_initial
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              regulation_timer_initial
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              factor_divcalc
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000006 00000004
                  |  Already listed
  09                  put_s
                      | Stack used (prev) :  0000000E 00000008
                      | + function block  :  00000002 00000002
                      |  Already listed
  09                  is_gateway_busy
                      | Stack used (prev) :  0000000E 00000006
                      | + function block  :  00000004 00000004
                      |  Already listed
  09                  delay_ms
                      | Stack used (prev) :  0000000E 00000006
                      | + function block  :  00000000 00000002
                      |  Already listed
  08                org_ext_broad
                    | Stack used (prev) :  00000087 0000001A
                    | + function block  :  00000019 00000002
  08                CharToStr
                    | Stack used (prev) :  0000000E 00000006
                    | + function block  :  00000002 00000002
                    |  Already listed
  07              Mode_frame_P2P
                  | Stack used (prev) :  000000A0 0000001C
                  | + function block  :  00000019 00000002
  07              Mode_frame_P2P
                  | Stack used (prev) :  000000A0 0000001C
                  | + function block  :  00000019 00000002
                  |  Already listed
  07              Mode_frame_P2P
                  | Stack used (prev) :  000000A0 0000001C
                  | + function block  :  00000019 00000002
                  |  Already listed
  07              Mode_frame_P2P
                  | Stack used (prev) :  000000A0 0000001C
                  | + function block  :  00000019 00000002
                  |  Already listed
  07              Mode_frame_P2P
                  | Stack used (prev) :  000000A0 0000001C
                  | + function block  :  00000019 00000002
                  |  Already listed
  06            Dimmer_regulation
                | Stack used (prev) :  000000B9 0000001E
                | + function block  :  00000006 00000002
  07              regulation_timer_initial
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              regulation_timer_initial
                  | Stack used (prev) :  00000087 0000001A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              Mode_frame_P2P
                  | Stack used (prev) :  000000A0 0000001C
                  | + function block  :  00000019 00000002
                  |  Already listed
  07              Mode_frame_P2P
                  | Stack used (prev) :  000000A0 0000001C
                  | + function block  :  00000019 00000002
                  |  Already listed
  06            Actuator_regulation
                | Stack used (prev) :  000000B9 0000001E
                | + function block  :  00000002 00000002
  05          Light_regulation
              | Stack used (prev) :  000000BF 00000020
              | + function block  :  00000000 00000002
  04        Function_KO168
            | Stack used (prev) :  000000BF 0000002C
            | + function block  :  00000000 00000002
  06            frame_on_off
                | Stack used (prev) :  00000098 0000001C
                | + function block  :  0000000B 00000002
                |  Already listed
  06            frame_on_off
                | Stack used (prev) :  00000098 0000001C
                | + function block  :  0000000B 00000002
                |  Already listed
  05          check_modality_frame
              | Stack used (prev) :  000000A3 0000001E
              | + function block  :  00000000 00000002
  05          daylight_service
              | Stack used (prev) :  0000008F 00000024
              | + function block  :  00000004 00000002
              |  Already listed
  04        Function_KO166
            | Stack used (prev) :  000000A3 00000026
            | + function block  :  00000003 00000002
  05          occupancy_detect
              | Stack used (prev) :  0000008B 00000026
              | + function block  :  00000002 00000002
              |  Already listed
  05          Start_Time_Delay
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000000 00000002
              |  Already listed
  06            send_frame_pp_broad
                | Stack used (prev) :  00000012 0000000A
                | + function block  :  00000011 00000002
                |  Already listed
  06            CharToStr
                | Stack used (prev) :  0000000E 00000006
                | + function block  :  00000002 00000002
                |  Already listed
  05          frame_presence
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  0000000B 00000002
  05          check_modality_frame
              | Stack used (prev) :  000000A3 0000001E
              | + function block  :  00000000 00000002
              |  Already listed
  05          daylight_service
              | Stack used (prev) :  0000008F 00000024
              | + function block  :  00000004 00000002
              |  Already listed
  05          frame_M2_answer
              | Stack used (prev) :  00000087 0000001A
              | + function block  :  00000018 00000004
              |  Already listed
  04        Function_KO128
            | Stack used (prev) :  000000A3 00000028
            | + function block  :  00000000 00000002
  05          Function_LM_GR
              | Stack used (prev) :  000000A3 0000002A
              | + function block  :  00000000 00000002
              |  Already listed
  05          occupancy_detect
              | Stack used (prev) :  0000008B 00000026
              | + function block  :  00000002 00000002
              |  Already listed
  05          Delay_Alert
              | Stack used (prev) :  00000087 0000001C
              | + function block  :  00000000 00000002
              |  Already listed
  04        Function_KO119
            | Stack used (prev) :  000000A3 0000002C
            | + function block  :  00000001 00000002
  04        StrToChar
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000000 00000002
            |  Already listed
  03      function_service
          | Stack used (prev) :  000000BF 0000002E
          | + function block  :  00000002 00000002
  03      diagnostic_frame
          | Stack used (prev) :  000000D8 00000026
          | + function block  :  00000011 00000002
          |  Already listed
  03      send_frame_pp_ext_broad
          | Stack used (prev) :  00000012 0000000A
          | + function block  :  0000001C 00000002
          |  Already listed
  03      get_key
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
  03      led_blinking_normal
          | Stack used (prev) :  00000012 00000006
          | + function block  :  00000003 00000004
          |  Already listed
  03      led_blinking_normal
          | Stack used (prev) :  00000012 00000006
          | + function block  :  00000003 00000004
          |  Already listed
  03      timer_flex_initial
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
          |  Already listed
  03      timer_flex_initial
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
          |  Already listed
  03      led_blinking_disable
          | Stack used (prev) :  0000000E 00000006
          | + function block  :  00000000 00000002
          |  Already listed
  03      led_blinking
          | Stack used (prev) :  0000000E 00000006
          | + function block  :  00000004 00000002
          |  Already listed
  03      led_blinking
          | Stack used (prev) :  0000000E 00000006
          | + function block  :  00000004 00000002
          |  Already listed
  04        send_group_pnl_frame
            | Stack used (prev) :  0000002E 0000000C
            | + function block  :  00000018 00000002
            |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  00000011 00000002
            |  Already listed
  04        delay_ms
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000000 00000002
            |  Already listed
  05          KO_parameter_initial
              | Stack used (prev) :  00000087 0000001E
              | + function block  :  00000002 00000002
              |  Already listed
  04        load_default_advance_parameter
            | Stack used (prev) :  00000089 00000020
            | + function block  :  00000002 00000002
  04        led_blinking_normal
            | Stack used (prev) :  00000012 00000006
            | + function block  :  00000003 00000004
            |  Already listed
  04        led_blinking_normal
            | Stack used (prev) :  00000012 00000006
            | + function block  :  00000003 00000004
            |  Already listed
  04        led_blinking_normal
            | Stack used (prev) :  00000012 00000006
            | + function block  :  00000003 00000004
            |  Already listed
  04        led_blinking_normal
            | Stack used (prev) :  00000012 00000006
            | + function block  :  00000003 00000004
            |  Already listed
  04        led_blinking_normal
            | Stack used (prev) :  00000012 00000006
            | + function block  :  00000003 00000004
            |  Already listed
  04        timer_flex_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        timer_flex_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000004 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000004 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000004 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000004 00000002
            |  Already listed
  03      scs_pnl_none_confed_slave
          | Stack used (prev) :  0000008B 00000022
          | + function block  :  00000000 00000002
  04        send_group_pnl_frame
            | Stack used (prev) :  0000002E 0000000C
            | + function block  :  00000018 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  00000011 00000002
            |  Already listed
  04        CharToStr
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000002 00000002
            |  Already listed
  04        delay_ms
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking_normal
            | Stack used (prev) :  00000012 00000006
            | + function block  :  00000003 00000004
            |  Already listed
  04        led_blinking_normal
            | Stack used (prev) :  00000012 00000006
            | + function block  :  00000003 00000004
            |  Already listed
  04        led_blinking_normal
            | Stack used (prev) :  00000012 00000006
            | + function block  :  00000003 00000004
            |  Already listed
  04        led_blinking_normal
            | Stack used (prev) :  00000012 00000006
            | + function block  :  00000003 00000004
            |  Already listed
  04        timer_flex2_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
  04        timer_flex_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        timer_flex_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking_disable
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking_disable
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking_disable
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000004 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000004 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000004 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000004 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000004 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000004 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000004 00000002
            |  Already listed
  03      scs_pnl_advance_slave
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000014 00000004
  04        send_group_pnl_frame
            | Stack used (prev) :  0000002E 0000000C
            | + function block  :  00000018 00000002
            |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  00000011 00000002
            |  Already listed
  04        system_reset
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        PnL_NONE_end
            | Stack used (prev) :  0000002E 0000000E
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking_stage2_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
  04        load_default_advance_parameter
            | Stack used (prev) :  00000089 00000020
            | + function block  :  00000002 00000002
            |  Already listed
  04        load_default_advance_parameter
            | Stack used (prev) :  00000089 00000020
            | + function block  :  00000002 00000002
            |  Already listed
  04        load_default_advance_parameter
            | Stack used (prev) :  00000089 00000020
            | + function block  :  00000002 00000002
            |  Already listed
  04        load_default_advance_parameter
            | Stack used (prev) :  00000089 00000020
            | + function block  :  00000002 00000002
            |  Already listed
  04        led_blinking_normal
            | Stack used (prev) :  00000012 00000006
            | + function block  :  00000003 00000004
            |  Already listed
  04        led_blinking_normal
            | Stack used (prev) :  00000012 00000006
            | + function block  :  00000003 00000004
            |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000012 0000000A
              | + function block  :  0000001C 00000002
              |  Already listed
  04        frame_send_group_request
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
  04        frame_send_end_pnl
            | Stack used (prev) :  0000002E 0000000C
            | + function block  :  00000000 00000002
            |  Already listed
  04        frame_send_end_pnl
            | Stack used (prev) :  0000002E 0000000C
            | + function block  :  00000000 00000002
            |  Already listed
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000012 0000000A
              | + function block  :  0000001C 00000002
              |  Already listed
  05          CharToStr
              | Stack used (prev) :  0000000E 00000006
              | + function block  :  00000002 00000002
              |  Already listed
  04        frame_send_start_pnl_group_confed
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000014 00000004
  05          send_frame_pp_ext_broad
              | Stack used (prev) :  00000012 0000000A
              | + function block  :  0000001C 00000002
              |  Already listed
  04        frame_send_start_pnl_none_group_confed
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
  04        frame_send_enable_automatic_control
            | Stack used (prev) :  00000023 0000000C
            | + function block  :  00000000 00000002
            |  Already listed
  05          send_frame_pp_broad
              | Stack used (prev) :  00000012 0000000A
              | + function block  :  00000011 00000002
              |  Already listed
  04        frame_send_disable_automatic_control
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
  04        factory_default
            | Stack used (prev) :  00000087 0000001E
            | + function block  :  00000035 00000002
            |  Already listed
  04        timer_flex_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        timer_flex_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking_disable
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000004 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000004 00000002
            |  Already listed
  03      scs_pnl_none_confed_master
          | Stack used (prev) :  000000BC 00000022
          | + function block  :  00000000 00000002
  03      scs_pnl_none_confed_master
          | Stack used (prev) :  000000BC 00000022
          | + function block  :  00000000 00000002
          |  Already listed
  04        strncpy
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000004 00000002
            |  Already listed
  04        send_group_pnl_frame
            | Stack used (prev) :  0000002E 0000000C
            | + function block  :  00000018 00000002
            |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  00000011 00000002
            |  Already listed
  04        system_reset
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        CharToStr
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000002 00000002
            |  Already listed
  04        StrToChar
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000000 00000002
            |  Already listed
  04        delay_ms
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000000 00000002
            |  Already listed
  04        PnL_ad_end
            | Stack used (prev) :  00000046 0000000E
            | + function block  :  00000014 00000002
            |  Already listed
  04        led_blinking_stage2_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        factory_default
            | Stack used (prev) :  00000087 0000001E
            | + function block  :  00000035 00000002
            |  Already listed
  04        timer_flex_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        timer_flex_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        timer_flex_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        timer_flex_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking_disable
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking_disable
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking_disable
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking_disable
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000004 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000004 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000004 00000002
            |  Already listed
  03      scs_pnl_advance_master
          | Stack used (prev) :  000000BC 00000020
          | + function block  :  00000014 00000002
  04        strncpy
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000004 00000002
            |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  00000011 00000002
            |  Already listed
  04        CharToStr
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000002 00000002
            |  Already listed
  04        timer_flex_initial
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking_disable
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000000 00000002
            |  Already listed
  04        led_blinking
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000004 00000002
            |  Already listed
  04        is_scenario_full
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000003 00000004
  04        is_scenario_full
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000003 00000004
            |  Already listed
  03      ir_pnl
          | Stack used (prev) :  0000008A 0000001E
          | + function block  :  00000018 00000002
  02    service_main
        | Stack used (prev) :  000000E9 00000030
        | + function block  :  00000000 00000002
  03      put_s
          | Stack used (prev) :  0000000E 00000008
          | + function block  :  00000002 00000002
          |  Already listed
  03      is_gateway_busy
          | Stack used (prev) :  0000000E 00000006
          | + function block  :  00000004 00000004
          |  Already listed
  03      get_key
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
          |  Already listed
  03      StrToChar
          | Stack used (prev) :  0000000E 00000006
          | + function block  :  00000000 00000002
          |  Already listed
  03      delay_ms
          | Stack used (prev) :  0000000E 00000006
          | + function block  :  00000000 00000002
          |  Already listed
  03      led_blinking_normal
          | Stack used (prev) :  00000012 00000006
          | + function block  :  00000003 00000004
          |  Already listed
  03      led_blinking
          | Stack used (prev) :  0000000E 00000006
          | + function block  :  00000004 00000002
          |  Already listed
  02    start_conf
        | Stack used (prev) :  00000087 0000001A
        | + function block  :  0000000D 00000004
  03      reception_buffer_clear
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
  03      ir_buffer_clear
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
  02    all_reception_buffer_clear
        | Stack used (prev) :  00000087 0000001A
        | + function block  :  00000001 00000004
  03      get_key
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
          |  Already listed
  03      key_time_clear
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
  02    button_press_detect
        | Stack used (prev) :  00000087 0000001C
        | + function block  :  00000000 00000002
  02    timer2_enable
        | Stack used (prev) :  00000087 0000001A
        | + function block  :  00000000 00000002
  03      strncpy
          | Stack used (prev) :  0000000E 00000006
          | + function block  :  00000004 00000002
          |  Already listed
  04        send_frame_pp_ext_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  0000001C 00000002
            |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  00000011 00000002
            |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  00000011 00000002
            |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  00000011 00000002
            |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  00000011 00000002
            |  Already listed
  04        CharToStr
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000002 00000002
            |  Already listed
  03      send_group_frame
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  0000001E 00000004
  03      send_group_pnl_frame
          | Stack used (prev) :  0000002E 0000000C
          | + function block  :  00000018 00000002
          |  Already listed
  04        dimmer_convert
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
  04        dimmer_convert
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  00000011 00000002
            |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  00000011 00000002
            |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  00000011 00000002
            |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  00000011 00000002
            |  Already listed
  04        send_frame_pp_broad
            | Stack used (prev) :  00000012 0000000A
            | + function block  :  00000011 00000002
            |  Already listed
  04        CharToStr
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000002 00000002
            |  Already listed
  03      send_aux_frame
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000011 00000004
  03      send_frame_pp_ext_broad
          | Stack used (prev) :  00000012 0000000A
          | + function block  :  0000001C 00000002
          |  Already listed
  03      send_frame_pp_broad
          | Stack used (prev) :  00000012 0000000A
          | + function block  :  00000011 00000002
          |  Already listed
  03      read_KO
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
          |  Already listed
  03      write_ee_KO
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000001 00000004
          |  Already listed
  03      write_KO
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000001 00000004
          |  Already listed
  03      system_reset
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
          |  Already listed
  03      buzzer_ms
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
          |  Already listed
  03      CharToStr
          | Stack used (prev) :  0000000E 00000006
          | + function block  :  00000002 00000002
          |  Already listed
  03      StrToChar
          | Stack used (prev) :  0000000E 00000006
          | + function block  :  00000000 00000002
          |  Already listed
  03      led_blinking_normal
          | Stack used (prev) :  00000012 00000006
          | + function block  :  00000003 00000004
          |  Already listed
  03      factory_default
          | Stack used (prev) :  00000087 0000001E
          | + function block  :  00000035 00000002
          |  Already listed
  03      timer_flex_initial
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
          |  Already listed
  03      led_blinking
          | Stack used (prev) :  0000000E 00000006
          | + function block  :  00000004 00000002
          |  Already listed
  03      is_scenario_full
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000003 00000004
          |  Already listed
  03      timer_IR_initial
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
  03      _calculate_crc
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
  04        delay_ms
            | Stack used (prev) :  0000000E 00000006
            | + function block  :  00000000 00000002
            |  Already listed
  04        _calculate_crc
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  04        put_c1
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
  04        put_c1
            | Stack used (prev) :  00000087 0000001A
            | + function block  :  00000000 00000002
            |  Already listed
  03      put_s1
          | Stack used (prev) :  00000087 0000001C
          | + function block  :  00000005 00000002
  02    decode_IR
        | Stack used (prev) :  000000BC 00000020
        | + function block  :  00000041 00000002
  03      PWM_output_init
          | Stack used (prev) :  00000087 0000001A
          | + function block  :  00000000 00000002
  02    IR_36kHz
        | Stack used (prev) :  00000087 0000001C
        | + function block  :  00000000 00000002
  02    init_USART1
        | Stack used (prev) :  00000087 0000001A
        | + function block  :  00000000 00000002
  01  main
      | Stack used (prev) :  00000138 00000032
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  00000138 00000034


  ->Sub-tree of type: Function tree
                             CSTACK   RSTACK
    | Stack used (prev) :  00000138 00000034
  01  __low_level_init
      | Stack used (prev) :  00000138 00000034
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  00000138 00000036


  ->Sub-tree of type: Function tree
                             CSTACK   RSTACK
    | Stack used (prev) :  00000138 00000036
  02    __flashcpy
        | Stack used (prev) :  00000138 00000036
        | + function block  :  00000000 00000002
  02    __memclr
        | Stack used (prev) :  00000138 00000036
        | + function block  :  00000000 00000002
  01  __segment_init
      | Stack used (prev) :  00000138 00000038
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  00000138 0000003A




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          00000000 - 0000007B          7C   com    1
NEAR_F               CODE          0000007C - 000002B8         23D   rel    0
SWITCH               CODE          000002BA - 000004C3         20A   rel    1
INITTAB              CODE          000004C4 - 000004CF           C   rel    0
CODE                 CODE          000004D0 - 0000B23D        AD6E   rel    1
TINY_ID              CODE               0000B23E                     dse    0
NEAR_ID              CODE          0000B23E - 0000B4EE         2B1   rel    0
ABSOLUTE             DATA               0000001F                     rel    0
                     DATA               00000020                   
                     DATA               00000021                   
                     DATA          00000027 - 00000028           2 
                     DATA          0000002A - 0000002B           2 
                     DATA          00000035 - 00000035           1 
                     DATA          00000044 - 00000045           2 
                     DATA          00000047 - 00000047           1 
                     DATA          00000054 - 00000054           1 
                     DATA          00000060 - 00000060           1 
                     DATA          0000006E - 0000006E           1 
                     DATA          00000070 - 00000070           1 
                     DATA          00000078 - 0000007A           3 
                     DATA          0000007C - 0000007C           1 
                     DATA          0000007E - 0000007E           1 
                     DATA          00000080 - 00000081           2 
                     DATA          00000086 - 0000008B           6 
                     DATA          000000B0 - 000000B4           5 
                     DATA          000000B6 - 000000B6           1 
                     DATA          000000C0 - 000000C2           3 
                     DATA          000000C4 - 000000C6           3 
                     DATA          000000C8 - 000000CA           3 
                     DATA          000000CC - 000000CE           3 
NEAR_I               DATA          00000100 - 000003B0         2B1   rel    0
NEAR_Z               DATA          000003B1 - 00000737         387   rel    0
RSTACK               DATA          00000738 - 00000777          40   dse    0
CSTACK               DATA          00000778 - 00000877         100   dse    0
EEPROM_I             XDATA         00000000 - 000000E3          E4   rel    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 46 318 bytes of CODE  memory
  1 912 bytes of DATA  memory (+ 48 absolute )
    228 bytes of XDATA memory

Errors: none
Warnings: none

