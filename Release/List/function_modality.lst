###############################################################################
#                                                                             #
# IAR C/C++ Compiler V5.30.0.50166/W32 for Atmel AVR    11/Dec/2009  23:21:35 #
# Copyright 1996-2009 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  D:\avr\LM_Finial_Test\function_modality.c                #
#    Command line =  D:\avr\LM_Finial_Test\function_modality.c --cpu=m644p    #
#                    -ms -o D:\avr\LM_Finial_Test\Release\Obj\ -D NDEBUG -D   #
#                    LM018 -D FINAL_VERSION2 -lCN                             #
#                    D:\avr\LM_Finial_Test\Release\List\ -lA                  #
#                    D:\avr\LM_Finial_Test\Release\List\ --diag_suppress      #
#                    Pa082,Pe167,Pe186 --initializers_in_flash -z6            #
#                    --no_inline --no_cross_call --no_tbaa                    #
#                    -DENABLE_BIT_DEFINITIONS -e -I "C:\Program Files\IAR     #
#                    Systems\Embedded Workbench 5.3\avr\INC\" -I "C:\Program  #
#                    Files\IAR Systems\Embedded Workbench 5.3\avr\INC\CLIB\"  #
#                    --eeprom_size 2048                                       #
#    List file    =  D:\avr\LM_Finial_Test\Release\List\function_modality.lst #
#    Object file  =  D:\avr\LM_Finial_Test\Release\Obj\function_modality.r90  #
#                                                                             #
#                                                                             #
###############################################################################

D:\avr\LM_Finial_Test\function_modality.c
      1          #include <ioavr.h>
      2          #include <inavr.h>
      3          #include "global_variable.h"
      4          #include "moudle_SCS.h"
      5          #include "function_modality.h"
      6          #include "application.h"
      7          #include "board.h"
      8          #include "function_service.h"
      9          

   \                                 In  segment CODE, align 2, keep-with-next
     10          void modality_service(void)
   \                     modality_service:
     11          {
     12          	
     13          	switch (Configurators.M)
   \   00000000   9100....           LDS     R16, (Configurators + 3)
   \   00000004   3300               CPI     R16, 48
   \   00000006   F409               BRNE    ??modality_service_0
     14          	{
     15          		case '0':
     16          			modality_0_initial();
   \   00000008   ....               RCALL   modality_0_initial
     17          			//modality_0();
     18          			//modality_0();
     19          		break;
     20          
     21          		default:break;
     22          	}
     23          	
     24          }
   \                     ??modality_service_0:
   \   0000000A   9508               RET
     25          

   \                                 In  segment CODE, align 2, keep-with-next
     26          void modality_0_initial(void)
   \                     modality_0_initial:
     27          {
     28          	flags.modality0_initialed = 1;
   \   00000000   ....               LDI     R30, LOW(flags)
   \   00000002   ....               LDI     R31, (flags) >> 8
   \   00000004   8104               LDD     R16, Z+4
   \   00000006   8115               LDD     R17, Z+5
   \   00000008   6001               ORI     R16, 0x01
   \   0000000A   8315               STD     Z+5, R17
   \   0000000C   8304               STD     Z+4, R16
     29          }
   \   0000000E   9508               RET
     30          

   \                                 In  segment CODE, align 2, keep-with-next
     31          void modality_0(void)
   \                     modality_0:
     32          {
     33          	
     34          	if(Time_delay.LPB.count > 2000)
   \   00000000   ....               LDI     R30, LOW((Time_delay + 116))
   \   00000002   ....               LDI     R31, HIGH((Time_delay + 116))
   \   00000004   8100               LD      R16, Z
   \   00000006   8111               LDD     R17, Z+1
   \   00000008   8122               LDD     R18, Z+2
   \   0000000A   8133               LDD     R19, Z+3
   \   0000000C   3D01               CPI     R16, 209
   \   0000000E   E047               LDI     R20, 7
   \   00000010   0714               CPC     R17, R20
   \   00000012   E040               LDI     R20, 0
   \   00000014   0724               CPC     R18, R20
   \   00000016   0734               CPC     R19, R20
   \   00000018   F0A0               BRCS    ??modality_0_0
     35          	{
     36          		led_blinking_ms(250,250,5000);
   \   0000001A   E808               LDI     R16, 136
   \   0000001C   E113               LDI     R17, 19
   \   0000001E   E020               LDI     R18, 0
   \   00000020   E030               LDI     R19, 0
   \   00000022   932A               ST      -Y, R18
   \   00000024   932A               ST      -Y, R18
   \   00000026   931A               ST      -Y, R17
   \   00000028   930A               ST      -Y, R16
   \   0000002A   EF4A               LDI     R20, 250
   \   0000002C   E050               LDI     R21, 0
   \   0000002E   E060               LDI     R22, 0
   \   00000030   E070               LDI     R23, 0
   \   00000032   EF0A               LDI     R16, 250
   \   00000034   E010               LDI     R17, 0
   \   00000036   ........           CALL    led_blinking_ms
     37          		 delay_ms(5000);
   \   0000003A   E808               LDI     R16, 136
   \   0000003C   E113               LDI     R17, 19
   \   0000003E   ........           CALL    delay_ms
     38          	}
     39          	
     40            //daylight_service();
     41          	occupancy_detect();
   \                     ??modality_0_0:
   \   00000042   ........           CALL    occupancy_detect
     42          }
   \   00000046   9508               RET
     43          

   \                                 In  segment CODE, align 2, keep-with-next
     44          void modality_1(void)
   \                     modality_1:
     45          {
     46          
     47          }
   \   00000000   9508               RET
     48          

   \                                 In  segment CODE, align 2, keep-with-next
     49          void modality_2(void)
   \                     modality_2:
     50          {
     51          
     52          }
   \   00000000   9508               RET
     53          

   \                                 In  segment CODE, align 2, keep-with-next
     54          void modality_3(void)
   \                     modality_3:
     55          {
     56          
     57          }
   \   00000000   9508               RET
     58          

   \                                 In  segment CODE, align 2, keep-with-next
     59          void modality_4(void)
   \                     modality_4:
     60          {
     61          
     62          }
   \   00000000   9508               RET

   Maximum stack usage in bytes:

     Function                CSTACK RSTACK
     --------                ------ ------
     modality_0                  4      2
       -> led_blinking_ms        4      2
       -> delay_ms               0      2
       -> occupancy_detect       0      2
     modality_0_initial          0      2
     modality_1                  0      2
     modality_2                  0      2
     modality_3                  0      2
     modality_4                  0      2
     modality_service            0      2
       -> modality_0_initial     0      2


   Segment part sizes:

     Function/Label     Bytes
     --------------     -----
     modality_service     12
     modality_0_initial   16
     modality_0           72
     modality_1            2
     modality_2            2
     modality_3            2
     modality_4            2

 
 108 bytes in segment CODE
 
 108 bytes of CODE memory

Errors: none
Warnings: none
